{"version":3,"sources":["webpack://TDLib/webpack/universalModuleDefinition","webpack://TDLib/./src/TDLib.js","webpack://TDLib/./src/boot/Boot.js","webpack://TDLib/./src/boot/DebugHeader.js","webpack://TDLib/./src/boot/Game.js","webpack://TDLib/./src/boot/Settings.js","webpack://TDLib/./src/components/ActionComponent.js","webpack://TDLib/./src/components/BehaviourComponent.js","webpack://TDLib/./src/components/Component.js","webpack://TDLib/./src/components/EffectComponent.js","webpack://TDLib/./src/components/index.js","webpack://TDLib/./src/const.js","webpack://TDLib/./src/managers/LayerManager.js","webpack://TDLib/./src/managers/LightSourceManager.js","webpack://TDLib/./src/managers/Manager.js","webpack://TDLib/./src/managers/UpdateManager.js","webpack://TDLib/./src/managers/index.js","webpack://TDLib/./src/rooms/Room.js","webpack://TDLib/./src/rooms/Utils.js","webpack://TDLib/./src/rooms/index.js","webpack://TDLib/./src/screens/Screen.js","webpack://TDLib/./src/screens/index.js","webpack://TDLib/./src/sprites/Sprite.js","webpack://TDLib/./src/sprites/actions/Action.js","webpack://TDLib/./src/sprites/actions/examine/Examine.js","webpack://TDLib/./src/sprites/actions/face-to/FaceTo.js","webpack://TDLib/./src/sprites/actions/face-to/Settings.js","webpack://TDLib/./src/sprites/actions/idle/Idle.js","webpack://TDLib/./src/sprites/actions/index.js","webpack://TDLib/./src/sprites/actions/interact/Interact.js","webpack://TDLib/./src/sprites/actions/observe/Observe.js","webpack://TDLib/./src/sprites/actions/run-to/RunTo.js","webpack://TDLib/./src/sprites/actions/run-to/Settings.js","webpack://TDLib/./src/sprites/actions/walk-to/Settings.js","webpack://TDLib/./src/sprites/actions/walk-to/WalkTo.js","webpack://TDLib/./src/sprites/behaviours/Behaviour.js","webpack://TDLib/./src/sprites/behaviours/const.js","webpack://TDLib/./src/sprites/behaviours/examinable/Examinable.js","webpack://TDLib/./src/sprites/behaviours/index.js","webpack://TDLib/./src/sprites/behaviours/interactive/Interactive.js","webpack://TDLib/./src/sprites/behaviours/inventory/Inventory.js","webpack://TDLib/./src/sprites/behaviours/observable/Observable.js","webpack://TDLib/./src/sprites/behaviours/observable/Settings.js","webpack://TDLib/./src/sprites/characters/Character.js","webpack://TDLib/./src/sprites/characters/index.js","webpack://TDLib/./src/sprites/characters/npc-characters/NPCharacter.js","webpack://TDLib/./src/sprites/characters/players/Player.js","webpack://TDLib/./src/sprites/effects/Effect.js","webpack://TDLib/./src/sprites/effects/index.js","webpack://TDLib/./src/sprites/effects/light-effects/HardFlickering.js","webpack://TDLib/./src/sprites/effects/light-effects/HardFlickeringAndTrembling.js","webpack://TDLib/./src/sprites/effects/light-effects/LightEffect.js","webpack://TDLib/./src/sprites/effects/light-effects/RadiusFlickering.js","webpack://TDLib/./src/sprites/effects/light-effects/SoftFlickering.js","webpack://TDLib/./src/sprites/effects/light-effects/SoftFlickeringAndTrembling.js","webpack://TDLib/./src/sprites/effects/light-effects/Trembling.js","webpack://TDLib/./src/sprites/effects/light-effects/index.js","webpack://TDLib/./src/sprites/index.js","webpack://TDLib/./src/sprites/inventory-items/InventoryItem.js","webpack://TDLib/./src/sprites/inventory-items/index.js","webpack://TDLib/./src/sprites/world-items/WorldItem.js","webpack://TDLib/./src/sprites/world-items/index.js","webpack://TDLib/./src/sprites/world-items/light-sources/LightSource.js","webpack://TDLib/./src/sprites/world-items/light-sources/index.js","webpack://TDLib/./src/sprites/world-items/room-furnitures/RoomFurniture.js","webpack://TDLib/./src/sprites/world-items/room-furnitures/index.js","webpack://TDLib/./src/sprites/world-items/wall-furnitures/WallFurniture.js","webpack://TDLib/./src/sprites/world-items/wall-furnitures/index.js","webpack://TDLib/./src/systems/cursors/CursorSystem.js","webpack://TDLib/./src/systems/index.js","webpack://TDLib/./src/systems/rooms/RoomSystem.js","webpack://TDLib/./src/utils/Utils.js","webpack://TDLib/./src/utils/index.js","webpack://TDLib/./node_modules/device-detector-js/dist/index.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/bot/index.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/client/browser.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/client/feed-readers.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/client/index.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/client/libraries.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/client/media-players.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/client/mobile-apps.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/client/personal-information-managers.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/device/cameras.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/device/cars.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/device/consoles.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/device/index.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/device/mobiles.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/device/portable-media-players.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/device/televisions.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/operating-system/index.js","webpack://TDLib/./node_modules/device-detector-js/dist/parsers/vendor-fragment/index.js","webpack://TDLib/./node_modules/device-detector-js/dist/utils/memory-cache.js","webpack://TDLib/./node_modules/device-detector-js/dist/utils/model.js","webpack://TDLib/./node_modules/device-detector-js/dist/utils/trim.js","webpack://TDLib/./node_modules/device-detector-js/dist/utils/user-agent.js","webpack://TDLib/./node_modules/device-detector-js/dist/utils/variable-replacement.js","webpack://TDLib/./node_modules/device-detector-js/dist/utils/version-compare.js","webpack://TDLib/./node_modules/device-detector-js/dist/utils/version.js","webpack://TDLib/./node_modules/filter-obj/index.js","webpack://TDLib/external \"phaser\"","webpack://TDLib/webpack/bootstrap","webpack://TDLib/webpack/runtime/global","webpack://TDLib/webpack/startup"],"names":["TDLib","Components","require","Game","Managers","Rooms","Screens","Settings","Sprites","Systems","Utils","Objects","Extend","module","exports","global","Boot","console","log","cursors","configure","GAME","scene","rooms","add","STARTING_SCENE","key","Scene","CONST","DebugHeader","game","config","bannerBackgroundColor","bannerTextColor","hidePhaser","renderType","audioConfig","audio","deviceAudio","device","audioType","webAudio","disableWebAudio","noAudio","audioData","browser","ie","c","args","Array","isArray","lastColor","forEach","color","concat","push","length","gameTitle","gameVersion","VERSION","PHASER_VERSION","DEVICE","gameURL","apply","userAgent","navigator","parse","type","charAt","toUpperCase","slice","_setScreenConfig","_setPhysicsConfig","_setPlugins","_setBoot","_setHeaderProps","_finalizeConfig","startingScene","GAME_SPRITES","_setGameSprites","Clone","sprites","SCREEN_PROPS","getScreenProps","width","calculatedWidth","height","calculatedHeight","zoom","calculatedZoom","autoResize","backgroundColor","pixelArt","physics","default","arcade","debug","gravity","y","x","plugins","plugin","RoomSystem","start","mapping","CursorSystem","UpdateManager","LightSourceManager","LayerManager","banner","obj","haveChildObject","father","flag","Object","keys","value","getChildrenFromFather","output","objectsObj","temp","element","WEBGL","maxLights","parent","disableContextMenu","TILE_SIZE","ROOM_HEIGHT_IN_TILE","INVENTORY_WIDTH_IN_TILES_MOBILE","INVENTORY_WIDTH_IN_TILES_DESKTOP","INVENTORY_HEIGHT_IN_TILES_MOBILE","INVENTORY_HEIGHT_IN_TILES_DESKTOP","ROOM_FRAME_IN_TILES_DESKTOP","ROOM_FRAME_IN_TILES_MOBILE","ActionComponent","gameObject","defaultAction","Idle","_queue","_start","Action","mode","DEFAULT_MODE","newAction","_abort","QUEUE_MODE","PAUSE_MODE","_pause","unshift","shift","isPaused","_resume","name","_update","BehaviourComponent","pixelPerfect","player","room","_addBehaviours","EXAMINABLE","INTERACTIVE","observe","Observable","examine","Examinable","interact","Interactive","Component","constructor","EffectComponent","previousEffects","currentEffect","duration","stop","LightEffects","isOn","play","timer","time","addEvent","delay","callback","callbackScope","repeat","remove","LEFT","RIGHT","pluginManager","layerSize","strartingDepth","backgroundLayer","group","rearDoorsLayer","wallFurnitureLayer","roomFurnitureLayer","sideDoorsLayer","npcLayer","playerLayer","cielingObjectsLayer","frontDoorsLayer","wallsLayer","wallsMaskLayer","overallDarknessLayer","borderMasksLayer","i","setDepth","lightSources","source","target","contributesAccumulator","getChildren","lightSource","singleLightContribute","diffusedLight","intensity","Math","abs","offset","effects","contributeFactor","floor","averageLightsContribute","lsScore","pow","exp","Manager","Plugins","ScenePlugin","events","systems","gameObjects","Phaser","Structs","Set","on","_sceneUpdate","_sceneShutdown","once","_sceneDestroy","delta","iterateLocal","clear","off","_scenePostUpdate","set","objs","delete","Room","sceneKey","rawAssets","assets","raw","array","layers","map","_scrapeAssets","load","path","nPath","bPath","image","scrapeComplexObjKey","params","findFileNameFromPath","setName","lights","enable","bringToTop","_setCameraViewport","_createRoom","_createSprites","_applyBorderMasks","setLayersDepth","cameras","main","setBounds","startFollow","setRoundPixels","world","setPosition","setSize","warn","make","tilemap","tilemapTiledJSON","tileWidth","tileHeight","createLayer","addTilesetImage","tiles","background","setPipeline","walls","_this","objects","layer","error","Error","create","setScrollFactor","setOrigin","_updateMasksByLightDiffusion","children","list","actions","round","calculateAverageLightsContribute","setAlpha","searchKey","prop","nameFirstCharachterPosition","lastIndexOf","nameLastCharachterPosition","filename","Screen","newScene","prototype","Sprite","texture","hasBody","behaviourType","INERT","observeText","DEFAULT_OBSERVE_TEXT","examineOrInteractText","DEFAULT_EXAMINE_OR_INTERACT_TEXT","blockExamineText","noLightObserveText","DEFAULT_NO_LIGHT_OBSERVE_TEXT","noLightExamineOrInteractText","DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT","examineOrInteractOffsetX","examineOrInteractThresholdRadius","minLightLevelToExamineOrInteract","DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT","minLightLevelToObserve","DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE","random","behaviours","existing","updates","setCollideWorldBounds","setGravityY","offsetX","offsetY","input","hitArea","Physics","Arcade","invoker","actor","action","finish","_remove","startCallback","finishCallback","updateCallback","resumeCallback","pauseCallback","Examine","arguments","addActions","getAction","FaceTo","BaseAction","MICRO_MOVEMENT_RADIUS","facing","setFlipX","body","setVelocity","anims","Actions","Interact","Observe","RunTo","WalkTo","RUN_VELOCITY","velocity","WALK_VELOCITY","Behaviour","component","setInteractive","alphaTolerance","draggable","calculateLightsContribuiteAtPoint","TALKABLE","INVENTORY","checkLight","Behaviours","Talkable","Inventory","_timer","pointer","setCursor","DEFAULT_MIN_TIME_TO_OBSERVE","isBlocked","bind","Character","Characters","NPCharacter","Player","pointerDown","Effect","Effects","HardFlickering","minTime","maxTime","finalState","setTimer","stopped","graphicLight","setIntensity","turnOff","HardFlickeringAndTrembling","hardFlickering","trembling","LightEffect","RadiusFlickering","minPercentageIntensity","maxPercentageIntensity","minPercentageRadius","maxPercentageRadius","backToInitialIntensity","backToInitialRadius","newIntensityPercentage","newRadiusPercentage","setRadius","radius","SoftFlickering","SoftDefaultFlickeringAndtrembling","softFlickering","Trembling","SoftFlickeringAndTrembling","InventoryItems","WorldItems","InentoryItem","resetPipeline","InventoryItem","WorldItem","LightSources","RoomFurnitures","WallFurnitures","LightSource","graphicLightConfig","diffusedLightConfig","turnOn","addLight","setColor","RoomFurniture","WallFurniture","cursorScene","sceneManager","lastTarget","CURSOR_SCENE_KEY","CursorScene","cursor","DEFAULT_CURSOR","activePointer","camera","worldX","EXAMINABLE_CURSOR","abort","INTERACTIVE_CURSOR","TALKABLE_CURSOR","TalkTo","setTexture","setVisible","HOLD_CURSOR","CHOICE_CURSOR","CHOICE_PRESSED_CURSOR","setDefaultCursor","BasePlugin","currentRoom","autoStart","returnValue","availHeight","window","innerHeight","availWidth","innerWidth","screen","ceil"],"mappings":"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AED;AACF;AACA;AACA;AACA;AACA;AACA;;;;sCACoB;AAChB,WAAK/E,MAAL,CAAYoC,IAAZ,GAAmB,gBAAOuD,KAA1B;AACA,WAAK3F,MAAL,CAAY4F,SAAZ,GAAwB,EAAxB;AACA,WAAK5F,MAAL,CAAY6F,MAAZ,GAAqB,MAArB;AACA,WAAK7F,MAAL,CAAY8F,kBAAZ,GAAiC,IAAjC;AACD;;;;;;;;;;;;;;;;;ACjNH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAItH,QAAQ,GAAG;AACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEc,MAAI,EAAE,EATO;;AAUb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEyG,WAAS,EAAE,EAlBE;;AAmBb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,qBAAmB,EAAE,CA3BR;;AA4Bb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,iCAA+B,EAAE,IApCpB;;AAqCb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,kCAAgC,EAAE,CA7CrB;;AA8Cb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,kCAAgC,EAAE,CAtDrB;;AAuDb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,mCAAiC,EAAE,CA/DtB;;AAgEb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,6BAA2B,EAAE,GAxEhB;;AAyEb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,4BAA0B,EAAE,IAjFf;;AAkFb;AACF;AACA;AACA;AACA;AACA;AACA;AACEnD,cAAY,EAAE,EAzFD;;AA0Fb;AACF;AACA;AACA;AACA;AACA;AACA;AACErB,QAAM,EAAE,IAjGK;AAkGbpC,gBAAc,EAAE,IAlGH;AAmGbqD,cAAY,EAAE;AAnGD,CAAf;AAsGAjE,MAAM,CAACC,OAAP,GAAiBP,QAAjB,C;;;;;;;;;;;;;;;;;;;;AC1GA;;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJa;AACb;AACA,4CAA4C;AAC5C;AACA,iCAAiC,mBAAO,CAAC,wFAAkB;AAC3D,iCAAiC,mBAAO,CAAC,wFAAkB;AAC3D,2CAA2C,mBAAO,CAAC,4GAA4B;AAC/E,0CAA0C,mBAAO,CAAC,0GAA2B;AAC7E,kCAAkC,mBAAO,CAAC,kGAA0B;AACpE,kBAAkB,mBAAO,CAAC,kFAAe;AACzC,qBAAqB,mBAAO,CAAC,sFAAoB;AACjD,0BAA0B,mBAAO,CAAC,gGAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,QAAQ;AAC7E;AACA;AACA,qEAAqE,QAAQ;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrMa;AACb;AACA,4CAA4C;AAC5C;AACA,oCAAoC,mBAAO,CAAC,2GAAkC;AAC9E,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5Ba;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,kBAAkB,mBAAO,CAAC,oFAAqB;AAC/C,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD,wCAAwC,mBAAO,CAAC,iIAA6C;AAC7F,8CAA8C,mBAAO,CAAC,6IAAmD;AACzG,kDAAkD,mBAAO,CAAC,kIAAoC;AAC9F,gDAAgD,mBAAO,CAAC,8HAAkC;AAC1F,oDAAoD,mBAAO,CAAC,sIAAsC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrFa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,4CAA4C,mBAAO,CAAC,yIAAiD;AACrG,kBAAkB,mBAAO,CAAC,oFAAqB;AAC/C,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,kCAAkC,mBAAO,CAAC,mFAAW;AACrD,sCAAsC,mBAAO,CAAC,2FAAe;AAC7D,uCAAuC,mBAAO,CAAC,6FAAgB;AAC/D,oCAAoC,mBAAO,CAAC,uFAAa;AACzD,wCAAwC,mBAAO,CAAC,+FAAiB;AACjE,wDAAwD,mBAAO,CAAC,+HAAiC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,eAAe;;;;;;;;;;;;ACpCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,yCAAyC,mBAAO,CAAC,mIAA8C;AAC/F,kBAAkB,mBAAO,CAAC,oFAAqB;AAC/C,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,eAAe;;;;;;;;;;;;ACpCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,4CAA4C,mBAAO,CAAC,yIAAiD;AACrG,kBAAkB,mBAAO,CAAC,oFAAqB;AAC/C,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,eAAe;;;;;;;;;;;;AClCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,2CAA2C,mBAAO,CAAC,uIAAgD;AACnG,kBAAkB,mBAAO,CAAC,oFAAqB;AAC/C,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,eAAe;;;;;;;;;;;;AClCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,mCAAmC,mBAAO,CAAC,uHAAwC;AACnF,kBAAkB,mBAAO,CAAC,oFAAqB;AAC/C,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,eAAe;;;;;;;;;;;;AClCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,uCAAuC,mBAAO,CAAC,+HAA4C;AAC3F,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;;ACxCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,4CAA4C,mBAAO,CAAC,yIAAiD;AACrG,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;;AClCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,wCAAwC,mBAAO,CAAC,iIAA6C;AAC7F,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;;ACxCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,kCAAkC,mBAAO,CAAC,mFAAW;AACrD,kCAAkC,mBAAO,CAAC,mFAAW;AACrD,sCAAsC,mBAAO,CAAC,2FAAe;AAC7D,+BAA+B,mBAAO,CAAC,6EAAQ;AAC/C,mCAAmC,mBAAO,CAAC,qFAAY;AACvD,iDAAiD,mBAAO,CAAC,iHAA0B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;;ACjCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,uCAAuC,mBAAO,CAAC,+HAA4C;AAC3F,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD,gBAAgB,mBAAO,CAAC,gFAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;;AC1DF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,qDAAqD,mBAAO,CAAC,2JAA0D;AACvH,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;;ACxCF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,2CAA2C,mBAAO,CAAC,uIAAgD;AACnG,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD,gBAAgB,mBAAO,CAAC,gFAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,EAAE,WAAW,EAAE,EAAE,IAAI;AACpF;AACA;AACA;AACA,eAAe;;;;;;;;;;;;AC9CF;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,mCAAmC,mBAAO,CAAC,yGAAiC;AAC5E,kBAAkB,mBAAO,CAAC,oFAAqB;AAC/C,+BAA+B,mBAAO,CAAC,8GAAkC;AACzE,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA,sBAAsB;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1Ea;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,+CAA+C,mBAAO,CAAC,iIAA6C;AACpG,qBAAqB,mBAAO,CAAC,0FAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;;ACtBF;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,YAAY;AACZ;AACA;;;;;;;;;;;;ACJa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,uBAAuB,mBAAO,CAAC,oFAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA,0EAA0E,SAAS;AACnF;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxBa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;ACXa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,GAAG;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/Ga;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,eAAe,mBAAO,CAAC,oEAAQ;AAC/B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,gCAAgC,OAAO,8CAA8C,IAAI;AACzF;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChCa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACbA,oD;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA,CAAC,I;;;;UCPD;UACA;UACA;UACA","file":"the-darkest-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"phaser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TDLib\", [\"phaser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TDLib\"] = factory(require(\"phaser\"));\n\telse\n\t\troot[\"TDLib\"] = factory(root[\"phaser\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE_phaser__) {\nreturn ","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\nimport CONST from './const';\nimport Phaser from 'phaser';\n\nvar TDLib = {\n  Components: require('./components'),\n  Game: require('./boot/Game'),\n  Managers: require('./managers'),\n  Rooms: require('./rooms'),\n  Screens: require('./screens'),\n  Settings: require('./boot/Settings'),\n  Sprites: require('./sprites'),\n  Systems: require('./systems'),\n  Utils: require('./utils')\n};\n\n// Merge the consts\nTDLib = Phaser.Utils.Objects.Extend(false, TDLib, CONST);\n\n// Export the module\nmodule.exports = TDLib;\nglobal.TDLib = TDLib;\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\nimport Phaser from 'phaser';\nimport Settings from './Settings';\n\n/**\n * @classdesc\n * The TDLib.Boot instance is a Phaser.Scene configuring the in-game systems, such as the cursors and the rooms.\n * It also starts the first room.\n * Boot is launched by TDLib.Game class as a Phaser.Scene.\n *\n * @class Boot\n * @memberof TDLib\n * @private\n * @constructor\n * @since 1.0.0\n */\nexport default class Boot extends Phaser.Scene {\n  constructor() {\n    super('Boot');\n  }\n\n  /**\n   * Preload method.\n   *\n   * @method TDLib.Boot#preload\n   * @since 1.0.0\n   */\n  preload() {\n\n  }\n\n  /**\n   * Cursors are configured.\n   * Rooms are configured.\n   * The initial room is started.\n   *\n   * @method TDLib.Boot#create\n   * @since 1.0.0\n   */\n  create() {\n    console.log('Booting game systems...');\n    this.cursors.configure(Settings.GAME.scene);\n    this.rooms.configure(Settings.GAME.scene);\n    this.scene.add(Settings.STARTING_SCENE.key, Settings.STARTING_SCENE, true);\n  }\n}\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\nvar CONST = require('../const');\nvar Settings = require('./Settings');\n\n/**\n * Called automatically by TDLib.Game and responsible for creating the console.log debug header.\n * You can customize or disable the header via the Game config object.\n *\n * @function DebugHeader\n * @memberof TDLib\n * @private\n * @since 1.0.0\n *\n * @param {TDLib.Game} game - The TDLib.Game instance which will output this debug header.\n */\nvar DebugHeader = function (game) {\n  let config = game.config;\n\n  config.bannerBackgroundColor = '#0002e6';\n  config.bannerTextColor = '#ffffff';\n  config.hidePhaser = false;\n\n  let renderType = 'WebGL';\n\n  if (config.renderType !== 2) {\n    renderType = 'NULL';\n  }\n\n  let audioConfig = config.audio;\n\n  let deviceAudio = game.device.audio;\n\n  let audioType;\n\n  if (deviceAudio.webAudio && !(audioConfig && audioConfig.disableWebAudio)) {\n    audioType = 'Web Audio';\n  } else if ((audioConfig && audioConfig.noAudio) || (!deviceAudio.webAudio && !deviceAudio.audioData)) {\n    audioType = 'No Audio';\n  } else {\n    audioType = 'HTML5 Audio';\n  }\n\n  if (!game.device.browser.ie) {\n    let c = '';\n\n    let args = [c];\n\n    if (Array.isArray(config.bannerBackgroundColor)) {\n      let lastColor;\n\n      config.bannerBackgroundColor.forEach(function (color) {\n        c = c.concat('%c ');\n\n        args.push('background: ' + color);\n\n        lastColor = color;\n\n      });\n\n      //  inject the text color\n      args[args.length - 1] = 'color: ' + config.bannerTextColor + '; background: ' + lastColor;\n    } else {\n      c = c.concat('%c ');\n\n      args.push('color: ' + config.bannerTextColor + '; background: ' + config.bannerBackgroundColor);\n    }\n\n    //  URL link background color (always white)\n    args.push('background: #fff');\n\n    if (config.gameTitle) {\n      c = c.concat(config.gameTitle);\n\n      if (config.gameVersion) {\n        c = c.concat(' v' + config.gameVersion);\n      }\n\n      if (!config.hidePhaser) {\n        c = c.concat(' / ');\n      }\n    }\n\n    if (!config.hidePhaser) {\n      c = c.concat('TDLib v' + CONST.VERSION + ' / Phaser v' + CONST.PHASER_VERSION);\n      c = c.concat(' (' + renderType + ' | ' + audioType + ' | ' + Settings.DEVICE + ')');\n    }\n\n    c = c.concat(' %c ' + config.gameURL);\n\n    //  Inject the new string back into the args array\n    args[0] = c;\n\n    console.log.apply(console, args);\n  }\n};\n\nmodule.exports = DebugHeader;\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\nimport Settings from './Settings';\nimport DebugHeader from './DebugHeader';\nimport Utils from '../utils';\nimport Managers from '../managers';\nimport Systems from '../systems';\nimport Boot from './Boot';\nimport Phaser from 'phaser';\nimport filterObj from 'filter-obj';\nimport DeviceDetector from 'device-detector-js';\n\n/**\n * @classdesc\n * The TDLib.Game instance is the main controller for the entire game. It creates an instace\n * of Phaser.Game with a default configuration of several parameters.\n *\n * @class Game\n * @memberof TDLib\n * @constructor\n * @since 1.0.0\n *\n * @param {Object} [config] - The configuration object for your TDLib Game instance.\n * @param {Object} [config.title] - The title of your game.\n * @param {Object} [config.url] - The url of your online game or website.\n * @param {Object} [config.version] - The version of your game.\n */\nexport default class Game {\n  constructor(config) {\n    /**\n     * The parsed Game Configuration object.\n     * The values stored within this object are read-only and should not be changed at run-time.\n     *\n     * @name TDLib.Game#config\n     * @type {Object}\n     * @readonly\n     * @since 1.0.0\n     */\n    this.config = config;\n\n    const userAgent = navigator.userAgent;\n    // const userAgent = 'Apple-iPhone6C2/1202.440';\n\n    Settings.DEVICE = (new DeviceDetector()).parse(userAgent).device.type;\n    Settings.DEVICE = Settings.DEVICE.charAt(0).toUpperCase() + Settings.DEVICE.slice(1);\n    if (Settings.DEVICE === 'Smartphone' || Settings.DEVICE === 'Tablet') Settings.DEVICE = 'Mobile';\n\n    this._setScreenConfig();\n    this._setPhysicsConfig();\n    this._setPlugins();\n    this._setBoot();\n    this._setHeaderProps();\n    this._finalizeConfig();\n\n    Settings.STARTING_SCENE = this.config.startingScene;\n    Settings.GAME_SPRITES = this._setGameSprites(Phaser.Utils.Objects.Clone(this.config.sprites));\n    Settings.GAME = new Phaser.Game(this.config);\n\n    DebugHeader(Settings.GAME);\n    return Settings.GAME;\n  }\n\n  /**\n   * This method is called automatically and configure the screen proportions and settings for the Game.\n   *\n   * @method TDLib.Game#_setScreenConfig\n   * @protected\n   * @since 1.0.0\n   */\n  _setScreenConfig() {\n    Settings.SCREEN_PROPS = Utils.getScreenProps();\n\n    this.config.width = Settings.SCREEN_PROPS.calculatedWidth;\n    this.config.height = Settings.SCREEN_PROPS.calculatedHeight;\n    this.config.zoom = Settings.SCREEN_PROPS.calculatedZoom;\n\n    this.config.autoResize = false;\n    this.config.backgroundColor = '#000000';\n    this.config.pixelArt = true;\n  }\n\n  /**\n   * This method is called automatically and configure physics for the Game using the Arcade engine of Phaser.\n   *\n   * @method TDLib.Game#_setPhysicsConfig\n   * @protected\n   * @since 1.0.0\n   */\n  _setPhysicsConfig() {\n    this.config.physics = {\n      default: 'arcade',\n      arcade: {\n        debug: false,\n        gravity: { y: 0, x: 0 }\n      }\n    };\n  }\n\n  /**\n   * This method is called automatically and configure the plugins for the Game.\n   * Global plugins are called Systems.\n   * Scene plugins are called Managers.\n   *\n   * @method TDLib.Game#_setPlugins\n   * @protected\n   * @since 1.0.0\n   */\n  _setPlugins() {\n    this.config.plugins = {\n      // Systems\n      global: [\n        { key: 'RoomSystem', plugin: Systems.RoomSystem, start: false, mapping: 'rooms' },\n        { key: 'CursorSystem', plugin: Systems.CursorSystem, start: false, mapping: 'cursors' }\n      ],\n      // Managers\n      scene: [\n        { key: 'UpdateManager', plugin: Managers.UpdateManager, mapping: 'updates' },\n        { key: 'LightSourceManager', plugin: Managers.LightSourceManager, mapping: 'lightSources' },\n        { key: 'LayerManager', plugin: Managers.LayerManager, mapping: 'layers' }\n      ]\n    };\n  }\n\n  /**\n   * This method is called automatically and configure the Phaser.Scene Boot to start the Systems.\n   *\n   * @method TDLib.Game#_setBoot\n   * @protected\n   * @since 1.0.0\n   */\n  _setBoot() {\n    this.config.scene = [Boot];\n  }\n\n  /**\n   * This method is called automatically and turn off the default Phaser header/banner.\n   *\n   * @method TDLib.Game#_setHeaderProps\n   * @protected\n   * @since 1.0.0\n   */\n  _setHeaderProps() {\n    this.config.banner = false;\n  }\n\n  /**\n  * TODO.\n  *\n  * @method TDLib.Game#_setGameSprites\n  * @protected\n  * @since 1.0.0\n  */\n  _setGameSprites(obj) {\n    function haveChildObject(father) {\n      let flag = false;\n\n      if (Object.keys(filterObj(obj, (key, value) => (\n        // eslint-disable-next-line eqeqeq\n        typeof value == 'object' &&\n        // eslint-disable-next-line eqeqeq\n        typeof value.default != 'function' &&\n        Object.keys(value).length > 0))).length > 0) flag = true;\n      return flag;\n    }\n\n    function getChildrenFromFather(father) {\n      let output = [];\n\n      for (let key in father) {\n        output.push(father[key]);\n      }\n\n      return output;\n    }\n\n    if (haveChildObject(obj)) {\n      // eslint-disable-next-line eqeqeq\n      let objectsObj = filterObj(obj, (key, value) => (typeof value == 'object' && typeof value.default != 'function'));\n\n      let temp = getChildrenFromFather(objectsObj);\n\n      temp.forEach(element => {\n        obj = Phaser.Utils.Objects.Extend(false, obj, element);\n      });\n\n      for (let key in objectsObj) delete obj[key];\n\n      return this._setGameSprites(obj);\n    }\n    return obj;\n\n  }\n\n  /**\n   * This method is called automatically and finalize the config passed to Phaser.Game.\n   *\n   * @method TDLib.Game#_finalizeConfig\n   * @protected\n   * @since 1.0.0\n   */\n  _finalizeConfig() {\n    this.config.type = Phaser.WEBGL;\n    this.config.maxLights = 20;\n    this.config.parent = 'game';\n    this.config.disableContextMenu = true;\n  }\n}\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\n/**\n * The default Game settings.\n * @namespace TDLib.Settings\n */\nvar Settings = {\n  /**\n   * The instance of the Game.\n   *\n   * @name TDLib.Settings.GAME\n   * @const\n   * @type {TDLib.Game}\n   * @since 1.0.0\n   */\n  GAME: '',\n  /**\n   * The size of the tiles.\n   *\n   * @name TDLib.Settings.TILE_SIZE\n   * @const\n   * @type {Number}\n   * @since 1.0.0\n   */\n  TILE_SIZE: 48,\n  /**\n   * The height of a standard room in tiles.\n   *\n   * @name TDLib.Settings.ROOM_HEIGHT_IN_TILE\n   * @const\n   * @type {Number}\n   * @since 1.0.0\n   */\n  ROOM_HEIGHT_IN_TILE: 6,\n  /**\n   * The inventory width in tiles in mobile devices.\n   *\n   * @name TDLib.Settings.INVENTORY_WIDTH_IN_TILES_MOBILE\n   * @const\n   * @type {Number}\n   * @since 1.0.0\n   */\n  INVENTORY_WIDTH_IN_TILES_MOBILE: 1.25,\n  /**\n   * The inventory width in tiles in desktop devices.\n   *\n   * @name TDLib.Settings.INVENTORY_WIDTH_IN_TILES_DESKTOP\n   * @const\n   * @type {Number}\n   * @since 1.0.0\n   */\n  INVENTORY_WIDTH_IN_TILES_DESKTOP: 0,\n  /**\n   * The inventory height in tiles in mobile devices.\n   *\n   * @name TDLib.Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE\n   * @const\n   * @type {Number}\n   * @since 1.0.0\n   */\n  INVENTORY_HEIGHT_IN_TILES_MOBILE: 0,\n  /**\n   * The inventory height in tiles in desktop devices.\n   *\n   * @name TDLib.Settings.INVENTORY_HEIGHT_IN_TILES_DESKTOP\n   * @const\n   * @type {Number}\n   * @since 1.0.0\n   */\n  INVENTORY_HEIGHT_IN_TILES_DESKTOP: 1,\n  /**\n   * The room frame in tiles in desktop devices.\n   *\n   * @name TDLib.Settings.ROOM_FRAME_IN_TILES_DESKTOP\n   * @const\n   * @type {Number}\n   * @since 1.0.0\n   */\n  ROOM_FRAME_IN_TILES_DESKTOP: 0.5,\n  /**\n   * The room frame in tiles in mobile devices.\n   *\n   * @name TDLib.Settings.ROOM_FRAME_IN_TILES_MOBILE\n   * @const\n   * @type {Number}\n   * @since 1.0.0\n   */\n  ROOM_FRAME_IN_TILES_MOBILE: 0.25,\n  /**\n   * The proportions of the used screen.\n   *\n   * @name TDLib.Settings.SCREEN_PROPS\n   * @type {Object}\n   * @since 1.0.0\n   */\n  SCREEN_PROPS: {},\n  /**\n   * The used device.\n   *\n   * @name TDLib.Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE\n   * @type {String}\n   * @since 1.0.0\n   */\n  DEVICE: null,\n  STARTING_SCENE: null,\n  GAME_SPRITES: null\n};\n\nmodule.exports = Settings;\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\nimport Component from './Component';\nimport Actions from '../sprites/actions';\n\n/**\n * @classdesc\n * Class representing the ActionComponent.\n * ActionComponent is responsible to handle all the actions for a Sprite.\n *\n * @class ActionComponent\n * @memberof TDLib.Components\n * @extends TDLib.Components.Component\n * @constructor\n * @since 1.0.0\n *\n * @param {TDLib.Sprites.Sprite} gameObject - The performer of the action.\n */\nexport default class ActionComponent extends Component {\n  constructor(gameObject) {\n    super(gameObject);\n\n    /**\n     * The performer of the action.\n     * @type {TDLib.Sprites.Sprite}\n     * @name TDLib.Components.ActionComponent#gameObject\n     * @since 1.0.0\n     */\n    this.gameObject = gameObject;\n\n    /**\n     * The default action to be played, AIdle by default.\n     * @type {TDLib.Components.Actions.Action}\n     * @name TDLib.Components.ActionComponent#defaultAction\n     * @since 1.0.0\n     */\n    this.defaultAction = new Actions.Idle(this, this.gameObject);\n\n    /**\n     * The queue of actions.\n     * @type {Array}\n     * @name TDLib.Components.ActionComponent#_queue\n     * @protected\n     * @since 1.0.0\n     */\n    this._queue = [this.defaultAction];\n    this._queue[0]._start();\n  }\n\n  /**\n   * Using this mode the queue is emptied and the new action is immediately performed.\n   * @name TDLib.Components.ActionComponent#DEFAULT_MODE\n   * @since 1.0.0\n   */\n  static get DEFAULT_MODE() {\n    return 0;\n  }\n\n  /**\n   * Using this mode the new action is added to the queue.\n   * @name TDLib.Components.ActionComponent#QUEUE_MODE\n   * @since 1.0.0\n   */\n  static get QUEUE_MODE() {\n    return 1;\n  }\n\n  /**\n   * Using this mode the currently performed action is paused and the new action is immediately performed.\n   * Then the paused action is resumed.\n   * @name TDLib.Components.ActionComponent#PAUSE_MODE\n   * @since 1.0.0\n   */\n  static get PAUSE_MODE() {\n    return 2;\n  }\n\n  /**\n   * Starts a new action or add that to the queue.\n   *\n   * @method TDLib.Components.ActionComponent#add\n   * @param {TDLib.Components.Sprites.Actions.Action} action - The action to add or execute.\n   * @param {Object} config - The config object for the action.\n   * @param {Object} config.target - The target of the action.\n   * @param {number} config.target.x - The x of the target of the action.\n   * @param {number} [mode=ActionComponent.DEFAULT_MODE] - The operating mode of the component.\n   * @since 1.0.0\n   */\n  add(Action, config, mode = ActionComponent.DEFAULT_MODE) {\n\n    let newAction = new Action(this, this.gameObject, config);\n\n    switch (mode) {\n      case ActionComponent.DEFAULT_MODE: {\n        this._queue[0]._abort();\n        this._queue = [];\n        this._queue.push(newAction);\n        this._queue[0]._start();\n      };\n        break;\n\n      case ActionComponent.QUEUE_MODE: {\n        this._queue.push(newAction);\n      };\n        break;\n\n      case ActionComponent.PAUSE_MODE: {\n        this._queue[0]._pause();\n        this._queue.unshift(newAction);\n        this._queue[0]._start();\n      };\n        break;\n    }\n\n    return newAction;\n  }\n\n  /**\n   * Remove a completed action from the queue.\n   *\n   * @method TDLib.Components.ActionComponent#_remove\n   * @protected\n   * @since 1.0.0\n   */\n  _remove() {\n    this._queue.shift();\n    if (this._queue.length <= 0) this._queue.push(this.defaultAction);\n    if (this._queue[0].isPaused) this._queue[0]._resume();\n    else this._queue[0]._start();\n  }\n\n  /**\n   * Update the currently performed action.\n   *\n   * @method TDLib.Components.ActionComponent#_update\n   * @protected\n   * @since 1.0.0\n   */\n  _update() {\n    if (this._queue.length <= 0) this._queue.push(this.defaultAction);\n    else if (this._queue.length > 1 && this._queue[0].name === 'Idle') {\n      this._queue.shift();\n      if (this._queue[0].isPaused) this._queue[0]._resume();\n      else this._queue[0]._start();\n    }\n\n    this._queue[0]._update();\n  }\n}\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\nimport Component from './Component';\nimport Behaviours from '../sprites/behaviours';\n\n/**\n * @classdesc\n * Class representing the BehaviourComponent.\n * BehaviourComponent is responsible to handle all the behaviours of a Sprite.\n * A Sprite can be INERT, OBSERVABLE, EXAMINABLE, INTERACTIVE, INVENTORY, TALKABLE.\n *\n * @class BehaviourComponent\n * @memberof TDLib.Components\n * @extends TDLib.Components.Component\n * @constructor\n * @since 1.0.0\n *\n * @param {TDLib.Sprites.Sprite} gameObject - The Sprite that owns the component.\n * @param {string} type - The type of behaviour of the gameObject.\n * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n */\nexport default class BehaviourComponent extends Component {\n  constructor(gameObject, type, pixelPerfect) {\n    super(gameObject);\n\n    /**\n     * A reference to the player in the current room.\n     * @type {TDLib.Sprites.Characters.Player}\n     * @name TDLib.Components.BehaviourComponent#player\n     * @since 1.0.0\n     */\n    this.player;\n    if (typeof this.gameObject.room.player === 'undefined') this.player = this.gameObject;\n    else this.player = this.gameObject.room.player;\n\n    /**\n     * The type of behaviour of the gameObject.\n     * @type {string}\n     * @name TDLib.Components.BehaviourComponent#type\n     * @since 1.0.0\n     */\n    this.type = type;\n\n    /**\n     * If not null enable the pixel perfect pointer hit for the Sprite.\n     * @type {string}\n     * @name TDLib.Components.BehaviourComponent#pixelPerfect\n     * @since 1.0.0\n     */\n    this.pixelPerfect = pixelPerfect;\n\n    this._addBehaviours();\n  }\n\n  /**\n   * Select the appropriate behaviour for the gameObject.\n   *\n   * @method TDLib.Components.BehaviourComponent#_addBehaviours\n   * @protected\n   * @since 1.0.0\n   */\n  _addBehaviours() {\n    // Se l'oggetto è osservabile (cioè esaminabile o interagibile) setto il cursore appropriato\n    if (this.type === Behaviours.EXAMINABLE || this.type === Behaviours.INTERACTIVE) {\n      this.observe = new Behaviours.Observable(this);\n      if (this.type === Behaviours.EXAMINABLE) this.examine = new Behaviours.Examinable(this);\n      else if (this.type === Behaviours.INTERACTIVE) this.interact = new Behaviours.Interactive(this);\n    }\n  }\n}\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\n/**\n * @classdesc\n * Class representing a generic Component.\n * A Component is bound to a Sprite and extends the members and methods of it.\n * To access the component you have to use a specific key.\n *\n * @class Component\n * @memberof TDLib.Components\n * @constructor\n * @since 1.0.0\n *\n * @param {TDLib.Sprites.Sprite} gameObject - The Sprite using the Component.\n */\nexport default class Component {\n  constructor(gameObject) {\n\n    /**\n     * The name of the Component.\n     * @type {string}\n     * @name TDLib.Components.Component#name\n     * @since 1.0.0\n     */\n    this.name = this.constructor.name;\n\n    /**\n     * The Sprite using the Component.\n     * @type {TDLib.Sprites.Sprite}\n     * @name TDLib.Components.Component#gameObject\n     * @since 1.0.0\n     */\n    this.gameObject = gameObject;\n  }\n}\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\nimport Component from './Component';\nimport Effects from '../sprites/effects';\nimport LightSource from '../sprites/world-items/light-sources/LightSource';\n\n/**\n * @classdesc\n * Class representing the EffectComponent.\n * EffectComponent is responsible to handle all the effects of a Sprite.\n *\n * @class EffectComponent\n * @memberof TDLib.Components\n * @extends TDLib.Components.Component\n * @constructor\n * @since 1.0.0\n *\n * @param {TDLib.Sprites.Sprite} gameObject - The Sprite that owns the component.\n */\nexport default class EffectComponent extends Component {\n  constructor(gameObject) {\n    super(gameObject);\n\n    /**\n     * An array containing all the already played Effects.\n     * @type {Array}\n     * @name TDLib.Components.EffectComponent#previousEffects\n     * @since 1.0.0\n     */\n    this.previousEffects = [];\n\n    /**\n     * The currently played Effect.\n     * @type {TDLib.Sprites.Effects.Effect}\n     * @name TDLib.Components.EffectComponent#currentEffect\n     * @since 1.0.0\n     */\n    this.currentEffect = null;\n  }\n\n  /**\n   * Starts a new Effect. If there's an already running Effect it is stopped.\n   *\n   * @method TDLib.Components.EffectComponent#play\n   * @param {string} key - A key identifying an Effect.\n   * @param {Object} [duration=-1] - If specified it represents the duration of the Effect.\n   * @param {Object} [config] - The configuration object for the Effect.\n   * @since 1.0.0\n   */\n  play(key, duration = -1, config) {\n    if (this.currentEffect) this.stop();\n\n    if (key in Effects) this.currentEffect = new Effects[key](this, config);\n    else if (key in Effects.LightEffects) {\n      if (this.gameObject instanceof LightSource) {\n        if (this.gameObject.isOn) {\n          this.currentEffect = new Effects.LightEffects[key](this, config);\n        } else console.log('Turn on the LightSource', this.gameObject, 'to play', key, 'effect on it!');\n      } else console.log(key + ' can only be run by a LightSource');\n    } else {\n      console.log('No effect with key: ', key);\n    }\n\n    if (this.currentEffect) {\n      this.currentEffect.play();\n\n      if (duration > 0) {\n        this.timer = this.gameObject.room.time.addEvent({\n          delay: duration,\n          callback: () => {\n            this.stop();\n          },\n          callbackScope: this,\n          repeat: 0\n        });\n        console.log(this.currentEffect.name + 'Effect started for', duration, 'ms');\n      } else if (duration === -1) {\n        console.log(this.currentEffect.name + 'Effect started');\n      } else {\n        console.log('You must use a positive duration value!');\n      }\n    }\n  }\n\n  /**\n   * Stops the currently played Effect.\n   *\n   * @method TDLib.Components.EffectComponent#stop\n   * @since 1.0.0\n   */\n  stop() {\n    if (this.currentEffect) {\n      if (this.timer) {\n        this.timer.remove();\n        this.timer = null;\n      }\n      this.previousEffects.push(this.currentEffect);\n      this.currentEffect.stop();\n      console.log(this.currentEffect.name + 'Effect stopped');\n      this.currentEffect = null;\n      console.log(this.previousEffects);\n    }\n  }\n}\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\n/**\n * Components are attachable to Sprites in order to extend their capabilities.\n * @namespace TDLib.Components\n */\n\nconst Components = {\n  Component: require('./Component'),\n  ActionComponent: require('./ActionComponent'),\n  BehaviourComponent: require('./BehaviourComponent'),\n  EffectComponent: require('./EffectComponent')\n};\n\nmodule.exports = Components;\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\nimport Phaser from 'phaser';\n\n/**\n * Global consts.\n *\n * @ignore\n */\nconst CONST = {\n  /**\n   * TheDarkestLib Release Version.\n   *\n   * @name TDLib.VERSION\n   * @const\n   * @type {string}\n   * @since 1.0.0\n   */\n  VERSION: require('../package.json').version,\n  /**\n   * Phaser Release Version.\n   *\n   * @name TDLib.PHASER_VERSION\n   * @const\n   * @type {string}\n   * @since 1.0.0\n   */\n  PHASER_VERSION: Phaser.VERSION,\n  /**\n   * Left direction constant.\n   *\n   * @name TDLib.LEFT\n   * @const\n   * @type {string}\n   * @since 1.0.0\n   */\n  LEFT: '_left',\n  /**\n   * Right direction constant.\n   *\n   * @name TDLib.RIGHT\n   * @const\n   * @type {string}\n   * @since 1.0.0\n   */\n  RIGHT: '_right'\n};\n\nmodule.exports = CONST;\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\nimport Manager from './Manager';\n\n/**\n * @classdesc\n * Class representing a LayerManager, responsible to manage\n * the layers order, such that all the elements are rendered correctly.\n * Layers are Phaser.GameObjects.Group.\n *\n * @class LayerManager\n * @extends TDLib.Managers.Manager\n * @memberof TDLib.Managers\n * @constructor\n * @since 1.0.0\n *\n * @param {TDLib.Rooms.Room|Phaser.Scene} room - The room running the Manager.\n * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to Phaser PluginManager.\n */\nexport default class LayerManager extends Manager {\n  constructor(room, pluginManager) {\n    super(room, pluginManager);\n    /**\n     * The size in cells of each layer.\n     * @type {number}\n     * @name TDLib.Managers.LayerManager#layerSize\n     * @default 10\n     * @since 1.0.0\n     */\n    this.layerSize = 10;\n\n    /**\n     * The starting depth of layers.\n     * @type {number}\n     * @name TDLib.Managers.LayerManager#startingDepth\n     * @default 0\n     * @since 1.0.0\n     */\n    this.strartingDepth = 0;\n  }\n\n  boot() {\n    super.boot();\n    /**\n     * The Layer containing the background wall.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#backgroundLayer\n     * @since 1.0.0\n     */\n    this.backgroundLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the rear doors.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#rearDoorsLayer\n     * @since 1.0.0\n     */\n    this.rearDoorsLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the objects fixed to the background wall.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#wallFurnitureLayer\n     * @since 1.0.0\n     */\n    this.wallFurnitureLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the objects in the room.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#roomFurnitureLayer\n     * @since 1.0.0\n     */\n    this.roomFurnitureLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the side doors.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#sideDoorsLayer\n     * @since 1.0.0\n     */\n    this.sideDoorsLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the NPCs.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#npcLayer\n     * @since 1.0.0\n     */\n    this.npcLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the Player.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#playerLayer\n     * @since 1.0.0\n     */\n    this.playerLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the cieling objects from the roof.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#cielingObjectsLayer\n     * @since 1.0.0\n     */\n    this.cielingObjectsLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the front doors.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#frontDoorsLayer\n     * @since 1.0.0\n     */\n    this.frontDoorsLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the lateral walls.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#wallsLayer\n     * @since 1.0.0\n     */\n    this.wallsLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the lateral walls black mask.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#wallsMaskLayer\n     * @since 1.0.0\n     */\n    this.wallsMaskLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the overall darkness mask.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#overallDarknessLayer\n     * @since 1.0.0\n     */\n    this.overallDarknessLayer = this.room.add.group();\n\n    /**\n     * The Layer containing the border black masks.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LayerManager#borderMasksLayer\n     * @since 1.0.0\n     */\n    this.borderMasksLayer = this.room.add.group();\n  }\n\n  /**\n   * Set the correct depth for each Layer in the right order.\n   * @method TDLib.Managers.LayerManager#setLayersDepth\n   * @since 1.0.0\n   */\n  setLayersDepth() {\n    let i = this.strartingDepth;\n\n    this.backgroundLayer.setDepth(this.layerSize * i);\n    i++;\n    this.rearDoorsLayer.setDepth(this.layerSize * i);\n    i++;\n    this.wallFurnitureLayer.setDepth(this.layerSize * i);\n    i++;\n    this.roomFurnitureLayer.setDepth(this.layerSize * i);\n    i++;\n    this.sideDoorsLayer.setDepth(this.layerSize * i);\n    i++;\n    this.npcLayer.setDepth(this.layerSize * i);\n    i++;\n    this.playerLayer.setDepth(this.layerSize * i);\n    i++;\n    this.cielingObjectsLayer.setDepth(this.layerSize * i);\n    i++;\n    this.frontDoorsLayer.setDepth(this.layerSize * i);\n    i++;\n    this.wallsLayer.setDepth(this.layerSize * i);\n    i++;\n    this.wallsMaskLayer.setDepth(this.layerSize * i);\n    i++;\n    this.overallDarknessLayer.setDepth(this.layerSize * i);\n    i++;\n    this.borderMasksLayer.setDepth(this.layerSize * i);\n    i++;\n  }\n}\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\nimport Manager from './Manager';\nimport LightSource from '../sprites/world-items/light-sources/LightSource';\n\n/**\n * @classdesc\n * Class representing a LightSourceManager, responsible to manage\n * the light sources in the active room.\n * It does not act on the Phaser lights.\n * In particular this manager compute the amount of light in a specific point\n * and the overall average light in the room.\n *\n * @class LightSourceManager\n * @extends TDLib.Managers.Manager\n * @memberof TDLib.Managers\n * @constructor\n * @since 1.0.0\n *\n * @param {TDLib.Rooms.Room|Phaser.Scene} room - The room running the Manager.\n * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to Phaser PluginManager.\n */\nexport default class LightSourceManager extends Manager {\n  constructor(room, pluginManager) {\n    super(room, pluginManager);\n  }\n\n  boot() {\n    super.boot();\n\n    /**\n     * A group containing all the light sources in the current room.\n     * @type {Phaser.GameObjects.Group}\n     * @name TDLib.Managers.LightSourceManager#lightSources\n     * @since 1.0.0\n     */\n    this.lightSources = this.room.add.group();\n  }\n\n  /**\n   * Add a new light source to the lightSources group,\n   * which keeps track of all the LightSource elements in the room.\n   *\n   * @method TDLib.Managers.LightSourceManager#add\n   * @since 1.0.0\n   *\n   * @param {LightSource} source - The LightSource to add to the group.\n   */\n  add(source) {\n    if (source instanceof LightSource) this.lightSources.add(source, true);\n  }\n\n  /**\n   * Compute the contribute given by all the lights present\n   * in the room for a specified target and returns a number ranging from 0 to 1.\n   *\n   * @method TDLib.Managers.LightSourceManager#calculateLightsContribuiteAtPoint\n   * @since 1.0.0\n   *\n   * @param {Object} target - The target for which it is computed the light contribute.\n   * @param {number} target.x - The x coordinate of the target.\n   *\n   * @return {number} A number indicating the light contribute for the specified target between 0 and 1.\n   */\n  calculateLightsContribuiteAtPoint(target) {\n    let contributesAccumulator = 0;\n\n    this.lightSources.getChildren().forEach(lightSource => {\n      if (lightSource.isOn) {\n        // eslint-disable-next-line max-len\n        let singleLightContribute = lightSource.diffusedLight.intensity / (Math.abs(lightSource.x + lightSource.config.offset.x - target.x) ^ 2);\n\n        // Contributo modificato in base all'effetto corrente\n        if (lightSource.effects.currentEffect) {\n          singleLightContribute *= lightSource.effects.currentEffect.contributeFactor;\n        }\n\n        contributesAccumulator += singleLightContribute;\n      }\n    });\n\n    console.log(Math.floor(contributesAccumulator * 10000) / 1000);\n    return Math.floor(contributesAccumulator * 10000) / 1000;\n  }\n\n  /**\n   * Compute the average contribute given by all the lights present\n   * in the room and returns a number ranging from 0 to 1.\n   *\n   * @method TDLib.Managers.LightSourceManager#calculateAverageLightsContribute\n   * @since 1.0.0\n   *\n   * @return {number} The average light contribute in the room between 0 and 1.\n   */\n  calculateAverageLightsContribute() {\n    let averageLightsContribute = 0;\n\n    let lsScore = 0;\n\n    let contributesAccumulator = 0;\n\n    if (this.lightSources !== null) {\n      this.lightSources.getChildren().forEach(lightSource => {\n        lsScore = Math.pow(lightSource.diffusedLight.intensity, 2);\n        lsScore = lsScore / (Math.pow(lightSource.diffusedLight.intensity, 2) + 1);\n        lsScore = Math.pow(lsScore, 2);\n        contributesAccumulator += lsScore;\n      });\n    }\n\n    contributesAccumulator /= (contributesAccumulator + Math.exp(-1.5 * contributesAccumulator));\n    averageLightsContribute = contributesAccumulator;\n    return averageLightsContribute;\n  }\n}\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\nimport Phaser from 'phaser';\n\n/**\n * @classdesc\n * Class representing a generic Manager.\n * A Manager is a controller working at a Room level.\n * It is unique in its own Room, but it isn't in the whole game.\n * From Phaser library a Manager is handled as a Phaser.Plugins.ScenePlugin.\n * It has to be added to the game into Game.js through the specified method and it is mapped by a key.\n *\n * @class Manager\n * @extends Phaser.Plugins.ScenePlugin\n * @memberof TDLib.Managers\n * @constructor\n * @since 1.0.0\n *\n * @param {TDLib.Rooms.Room|Phaser.Scene} room - The room running the Manager.\n * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to Phaser PluginManager.\n */\nexport default class Manager extends Phaser.Plugins.ScenePlugin {\n  constructor(room, pluginManager) {\n    super(room, pluginManager);\n\n    /**\n     * The room running the Manager.\n     * @type {TDLib.Rooms.Room|Phaser.Scene}\n     * @since 1.0.0\n     */\n    this.room = room;\n  }\n\n  /**\n   * Default function called by Phaser when booting the plugins.\n   * @method TDLib.Managers.Manager#boot\n   * @protected\n   * @since 1.0.0\n   */\n  boot() {\n\n  }\n}\n","import Manager from './Manager';\n\n/**\n * Class representing the update plugin.\n * @extends TDLib.Plugins.TDLRoomPlugin\n * @memberof TDLib.Plugins.RoomPlugins\n * @since 1.0.0\n */\nexport default class UpdateManager extends Manager {\n  /**\n   * Create a new UpdatePlugin.\n   * @param {TDLib.Rooms.Room} room - The room in which the layer manager operates.\n   * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to the plugin manager.\n   */\n  constructor(room, pluginManager) {\n    super(room, pluginManager);\n  }\n\n  /**\n   * Boot the plugin.\n   * @since 1.0.0\n   */\n  boot() {\n    super.boot();\n    const events = this.systems.events;\n\n    // eslint-disable-next-line no-undef\n    this.gameObjects = new Phaser.Structs.Set();\n\n    events.on('update', this._sceneUpdate, this);\n    events.on('shutdown', this._sceneShutdown, this);\n    events.once('destroy', this._sceneDestroy, this);\n  }\n\n  /**\n   * Update every game object.\n   * @param {*} time\n   * @param {*} delta\n   * @private\n   * @since 1.0.0\n   */\n  _sceneUpdate(time, delta) {\n    this.gameObjects.iterateLocal('update', time, delta);\n  }\n\n  /**\n   * Called at the shutdown of the scene.\n   * @private\n   * @since 1.0.0\n   */\n  _sceneShutdown() {\n    this.gameObjects.clear();\n  }\n\n  /**\n   * Called when the scene is destroyed.\n   * @private\n   * @since 1.0.0\n   */\n  _sceneDestroy() {\n    const events = this.systems.events;\n\n    events.off('update', this._scenePostUpdate, this);\n    events.off('shutdown', this._sceneShutdown, this);\n    events.off('destroy', this._sceneDestroy, this);\n\n    this.gameObjects = null;\n    this.scene = null;\n    this.systems = null;\n  }\n\n  /**\n   * Add an object to the global update loop of the game.\n   * @param {TDLib.Sprites.TDLSprite} obj - The object to add to the update loop.\n   * @since 1.0.0\n   */\n  add(obj) {\n    obj.once('destroy', this.remove, this);\n    this.gameObjects.set(obj);\n  }\n\n  /**\n   * Add multiple objects to the global update loop of the game.\n   * @param {TDLib.Sprites.TDLSprite[]} obj - The objects to add to the update loop.\n   * @since 1.0.0\n   */\n  addMultiple(objs) {\n    objs.forEach(this.add, this);\n  }\n\n  /**\n   * Remove an object from the global update loop of the game.\n   * @param {TDLib.Sprites.TDLSprite} obj - The object to remove from the update loop.\n   * @since 1.0.0\n   */\n  remove(obj) {\n    obj.off('destroy', this.remove, this);\n    this.gameObjects.delete(obj);\n  }\n}\n","/**\n * @author       Francesco Negri <francesco.negri@outlook.com>\n * @copyright    2019 The Darkest Light\n * @license      {@link https://github.com/FrancescoNegri/TheDarkestLib/blob/master/LICENSE|MIT License}\n */\n\n/**\n * A Manager is a controller working at a Room level.\n * It is unique in its own Room, but it isn't in the whole game.\n * From Phaser library a Manager is handled as a Phaser.Plugins.ScenePlugin.\n * It has to be added to the game into Game.js through the specified method and it is mapped by a key.\n * @see TDLib.Game#_setPlugins\n * @namespace TDLib.Managers\n */\n\nconst Managers = {\n  LayerManager: require('./LayerManager'),\n  LightSourceManager: require('./LightSourceManager'),\n  Manager: require('./Manager'),\n  UpdateManager: require('./UpdateManager')\n};\n\nmodule.exports = Managers;\n","import Settings from '../boot/Settings';\nimport Utils from './Utils';\nimport Phaser from 'phaser';\n\n/**\n * The rooms namespace.\n * @namespace TDLib.Rooms\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLRoom.\n * @extends Phaser.Scene\n * @memberof TDLib.Rooms\n * @since 1.0.0\n */\nexport default class Room extends Phaser.Scene {\n  /**\n   * Create a new TDLRoom.\n   * @param {string} sceneKey - The unique key to identify the room.\n   * @param {Object} rawAssets - The raw object of assets needed by the room. (Ripensarlo ?)\n   */\n  constructor(sceneKey, rawAssets) {\n    super(sceneKey);\n\n    /**\n       * This object contains an array with all the assets needed by the room.\n       * @type {Object}\n       * @since 1.0.0\n       */\n    this.assets = { raw: rawAssets, array: [] };\n\n    /**\n       * The average contribute of light sources to the room.\n       * @type {number}\n       * @since 1.0.0\n       */\n    this.averageLightsContribute;\n\n    /**\n       * The Settings cursor manager.\n       * @type {TDLib.Plugins.SettingsPlugins.CursorManager}\n       * @since 1.0.0\n       */\n    this.cursors;\n\n    /**\n       * The layer manager of the room.\n       * @type {TDLib.Plugins.RoomPlugins.LayerManager}\n       * @since 1.0.0\n       */\n    this.layers;\n\n    /**\n       * The tilemap of the room.\n       * @type {Phaser.Tilemaps.Tilemap}\n       * @since 1.0.0\n       */\n    this.map;\n\n    /**\n       * The name of the room.\n       * @type {string}\n       * @since 1.0.0\n       */\n    this.name = this.constructor.name;\n\n    /**\n       * The instance of the TDLCharacter designated as player for the room.\n       * @type {TDLib.Sprites.Characters.TDLCharacter}\n       * @since 1.0.0\n       */\n    this.player;\n\n    /**\n       * The Settings room manager.\n       * @type {TDLib.Plugins.SettingsPlugins.RoomManager}\n       * @since 1.0.0\n       */\n    this.rooms;\n  }\n\n  /**\n   * The preload function is executed once and load all the assets needed by the room.\n   * @since 1.0.0\n   */\n  preload() {\n    this._scrapeAssets();\n    this.assets.array.forEach(obj => {\n      if ('nPath' in obj) {\n        this.load[obj.type](obj.key, [obj.path, obj.nPath]);\n      } else if ('bPath' in obj) {\n        this.load[obj.type](obj.key, obj.path);\n        this.load[obj.type](obj.key + '_b', obj.bPath);\n      } else {\n        this.load[obj.type](obj.key, obj.path);\n      }\n    });\n\n    // Loading Border Camera Masks\n    this.load.image('top-border-mask-camera', 'assets/Masks/topMaskCamera.png');\n    this.load.image('bottom-border-mask-camera', 'assets/Masks/bottomMaskCamera.png');\n    this.load.image('left-border-mask-camera', 'assets/Masks/leftMaskCamera.png');\n    this.load.image('right-border-mask-camera', 'assets/Masks/rightMaskCamera.png');\n  }\n\n  /**\n   * Scrape the object of raw assets.\n   * @private\n   * @since 1.0.0\n   */\n  _scrapeAssets() {\n    for (let type in this.assets.raw) {\n      Utils.scrapeComplexObjKey(\n        this.assets.raw[type],\n        { type: type },\n        'path',\n        (obj, params) => {\n          obj['type'] = params.type;\n          obj['key'] = Utils.findFileNameFromPath(obj.path);\n          this.assets.array.push(obj);\n        }\n      );\n    }\n  }\n\n  /**\n   * The create function is executed once, when the room is initialized.\n   * @param {TDLib.Sprites.Characters.TDLCharacter} player - The instance of the player for the room.\n   * @since 1.0.0\n   */\n  create(player) {\n    this.player = player.setName('player');\n    this.lights.enable(); // Boot Phaser's LightManager\n    this.scene.bringToTop('CursorScene');\n\n    this._setCameraViewport();\n    this._createRoom();\n    this._createSprites();\n    this._applyBorderMasks();\n    this.layers.setLayersDepth();\n\n    // Camera bounds, anche il wallsLayer\n    this.cameras.main.setBounds(0, 0, this.layers.wallsLayer.width, this.layers.wallsLayer.height);\n    this.cameras.main.startFollow(this.player, true);\n    this.cameras.main.setRoundPixels(true);\n    // Physics Bounds, sarà solo lo spazio di gioco (togliamo il wall layer tutto attorno!!)\n    this.physics.world.setBounds(\n      Settings.TILE_SIZE, Settings.TILE_SIZE, this.layers.wallsLayer.width - 2 * Settings.TILE_SIZE,\n      this.layers.wallsLayer.height - 2 * Settings.TILE_SIZE\n    );\n  }\n\n  /**\n   * Set the correct camera viewport.\n   * @private\n   * @since 1.0.0\n   */\n  _setCameraViewport() {\n    if (Settings.DEVICE === 'Mobile') {\n      this.cameras.main.setPosition(\n        (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE,\n        (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE) * Settings.TILE_SIZE\n      );\n      this.cameras.main.setSize(\n        // eslint-disable-next-line max-len\n        Settings.SCREEN_PROPS.calculatedWidth - 2 * (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE,\n        Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE\n      );\n    } else if (Settings.DEVICE === 'Desktop') {\n      this.cameras.main.setPosition(\n        Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE,\n        Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE\n      );\n      this.cameras.main.setSize(\n        Settings.SCREEN_PROPS.calculatedWidth - 2 * Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE,\n        Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE\n      );\n    } else {\n      console.warn('Unsupported device.');\n    }\n  }\n\n  /**\n   * Create room tilemap and layers.\n   * @private\n   * @since 1.0.0\n   */\n  _createRoom() {\n    this.map = this.make.tilemap({\n      key: Utils.findFileNameFromPath(this.assets.raw.tilemapTiledJSON.path),\n      tileWidth: Settings.TILE_SIZE,\n      tileHeight: Settings.TILE_SIZE\n    });\n\n    this.layers.backgroundLayer = this.map.createLayer(\n      'backgroundLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.background.path)),\n      0, 0\n    ).setPipeline('Light2D');\n    this.layers.wallsLayer = this.map.createLayer(\n      'wallsLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.walls.path)),\n      0, 0\n    );\n    // TODO: valutare se anche per i walls serve la pipeline Light2D\n    this.layers.wallsMaskLayer = this.map.createLayer(\n      'wallsMaskLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.walls.bPath)),\n      0, 0\n    );\n  }\n\n  /**\n   * Create all the objects present in Tiled JSON map.\n   * @private\n   * @since 1.0.0\n   */\n  _createSprites() {\n    let _this = this;\n\n    this.objects = {};\n    this.map.objects.forEach(layer => {\n      layer.objects.forEach(element => {\n        if (this.objects[element.name]) {\n          console.error(new Error('Duplicated name for object: ' + element.name));\n        }\n        // eslint-disable-next-line\n        this.objects[element.name] = new Settings.GAME_SPRITES[element.type].default(_this, element.x + element.width / 2, element.y - element.height / 2);\n        this.objects[element.name].setName(element.name);\n      });\n    });\n  }\n\n  /**\n   * Apply the four border masks to the camera.\n   * @private\n   * @since 1.0.0\n   */\n  _applyBorderMasks() {\n    this.layers.borderMasksLayer.create(\n      0, 0,\n      'top-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      0, 0,\n      'left-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      this.cameras.main.width - Settings.TILE_SIZE, 0,\n      'right-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      0, this.cameras.main.height - Settings.TILE_SIZE,\n      'bottom-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n  }\n\n  /**\n   * The update function is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n    this._updateMasksByLightDiffusion();\n\n    // Updates all Actions in  every ActionComponent (if present)\n    this.children.list.forEach(element => {\n      if ('actions' in element) {\n        element.actions._update();\n      }\n    });\n  }\n\n  /**\n   * Update the border masks alpha according to the average diffused light in the room.\n   * @private\n   * @since 1.0.0\n   */\n  _updateMasksByLightDiffusion() {\n    this.averageLightsContribute = Math.round(this.lightSources.calculateAverageLightsContribute() * 10) / 10;\n    this.layers.wallsMaskLayer.setAlpha(1 - this.averageLightsContribute);\n  }\n}\n\n","const Utils = {\n  scrapeComplexObjKey: (obj, params, searchKey, callback) => {\n    if (Array.isArray(obj)) {\n      for (let i = 0; i < obj.length; i++) {\n        Utils.scrapeComplexObjKey(obj[i], params, searchKey, callback);\n      }\n    } else if (obj !== null && typeof obj === 'object') {\n      if (searchKey in obj) {\n        callback(obj, params);\n      } else {\n        for (let prop in obj) {\n          Utils.scrapeComplexObjKey(obj[prop], params, searchKey, callback);\n        }\n      }\n    }\n  },\n  findFileNameFromPath: (path) => {\n    let nameFirstCharachterPosition = path.lastIndexOf('/') + 1;\n\n    let nameLastCharachterPosition = path.lastIndexOf('.');\n\n    if (nameFirstCharachterPosition === -1) nameFirstCharachterPosition = 0;\n    if (nameLastCharachterPosition === -1) return -1;\n    let filename = path.slice(nameFirstCharachterPosition, nameLastCharachterPosition);\n\n    return filename;\n  }\n};\n\nmodule.exports = Utils;\n","const Rooms = {\n  Room: require('./Room')\n};\n\nmodule.exports = Rooms;\n","import Phaser from 'phaser';\nimport Room from '../rooms/Room';\n\n/**\n * The screens namespace.\n * @namespace TDLib.Screens\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLScreen.\n * @extends Phaser.Scene\n * @memberof TDLib.Screens\n * @since 1.0.0\n */\nexport default class Screen extends Phaser.Scene {\n  /**\n   * Create a new TDLScreen.\n   * @param {string} sceneKey - The unique key to identify the room.\n   */\n  constructor(sceneKey) {\n    super(sceneKey);\n\n    /**\n       * The Settings cursor manager.\n       * @type {TDLib.Plugins.SettingsPlugins.CursorManager}\n       * @since 1.0.0\n       */\n    this.cursors;\n\n    /**\n       * The layer manager of the room.\n       * @type {TDLib.Plugins.RoomPlugins.LayerManager}\n       * @since 1.0.0\n       */\n    this.layers;\n\n    /**\n       * The Settings room manager.\n       * @type {TDLib.Plugins.SettingsPlugins.RoomManager}\n       * @since 1.0.0\n       */\n    this.rooms;\n\n    this.key = sceneKey;\n  }\n\n  /**\n   * The preload function is executed once and load all the assets needed.\n   * @since 1.0.0\n   */\n  preload() {\n\n  }\n\n  /**\n   * The create function is executed once, when the screen is initialized.\n   * @since 1.0.0\n   */\n  create() {\n    this.scene.bringToTop('CursorScene');\n    console.log('Starting screen:', this.key);\n    // this.layers.setLayersDepth();\n  }\n\n  /**\n   * The update function is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n\n  }\n\n  /**\n   * Add (and start) a new  Phaser.Scene to the Phaser.SceneManager.\n   * @param {Phaser.Scene | TDLib.Rooms.Room | TDLib.Screens.Screen} newScene - The new scene to start.\n   * @since 1.0.0\n   */\n  start(newScene) {\n    this.scene.remove(this.key);\n    if (newScene.prototype instanceof Room) {\n      this.rooms.start(newScene, true);\n    } else {\n      this.scene.add(newScene.key, newScene, true);\n    }\n  }\n}\n\n","const Screens = {\n  Screen: require('./Screen')\n};\n\nmodule.exports = Screens;\n","/* eslint-disable max-len */\nimport Behaviours from '../sprites/behaviours';\nimport BehaviourComponent from '../components/BehaviourComponent';\nimport Phaser from 'phaser';\n\n/**\n * The Darkest Lib.\n * @namespace TDLib\n * @since 1.0.0\n */\n\n/**\n * The actions namespace.\n * @namespace TDLib.Sprites\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLSprite.\n * @extends Phaser.Physics.Arcade.Sprite\n * @memberof TDLib.Sprites\n * @since 1.0.0\n */\nexport default class Sprite extends Phaser.Physics.Arcade.Sprite {\n  /**\n   * Create a TDLSprite.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [layer=null] - The key of the layer which will contain the sprite.\n   * @param {boolean} [hasBody=true] - Specify if the sprite has physics.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   * @param {boolean} [precisePosition=false] - Specify if to examine or interact with the sprite it's required to be precisely at the examineOrInteractPoint. (Probably not needed)\n   */\n  constructor(\n    room,\n    x, y,\n    texture,\n    layer = null,\n    hasBody = true,\n    behaviourType = Behaviours.INERT,\n    pixelPerfect = null,\n    observeText = Behaviours.DEFAULT_OBSERVE_TEXT,\n    examineOrInteractText = Behaviours.DEFAULT_EXAMINE_OR_INTERACT_TEXT,\n    blockExamineText = null,\n    noLightObserveText = Behaviours.DEFAULT_NO_LIGHT_OBSERVE_TEXT,\n    noLightExamineOrInteractText = Behaviours.DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT,\n    examineOrInteractOffsetX = 0,\n    examineOrInteractThresholdRadius = 0,\n    minLightLevelToExamineOrInteract = Behaviours.DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT,\n    minLightLevelToObserve = Behaviours.DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE\n\n  ) {\n    super(room, x, y, texture);\n\n    /**\n     * The room where the sprite is created.\n     * @type {TDLib.Rooms.TDLRoom}\n     * @since 1.0.0\n     */\n    this.room = room;\n\n    /**\n     * The name of the sprite, to map it in the room. Usually it's obtained by Tiled.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.name;\n\n    /**\n     * The unique key of the sprite, composed by the sprite type and a 4 digits random integer number.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.key = this.constructor.name + (Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000);\n\n    /**\n     * The type of the sprite.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.type = this.constructor.name;\n\n    /**\n     * The sprite behaviour component instance.\n     * @type {TDLib.Components.SpriteBehaviourComponent}\n     * @since 1.0.0\n     */\n    this.behaviours = new BehaviourComponent(this, behaviourType, pixelPerfect);\n\n    /**\n     * The text which appears when observing the sprite.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.observeText = observeText;\n\n    /**\n * The text which appears when examine or interact with the sprite.\n     * @type {string}\n     * @since 1.0.0\n */\n    this.examineOrInteractText = examineOrInteractText;\n\n    /**\n     * If not null it's the blocking text which appears the first time the sprite is examined.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.blockExamineText = blockExamineText;\n\n    /**\n     * The text which appears when observing the sprite when the diffused light is not sufficient.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.noLightObserveText = noLightObserveText;\n\n    /**\n * The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.noLightExamineOrInteractText = noLightExamineOrInteractText;\n\n    /**\n     * The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n     */\n    this.examineOrInteractOffsetX = examineOrInteractOffsetX;\n\n    /**\n     * The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n         */\n    this.examineOrInteractThresholdRadius = examineOrInteractThresholdRadius;\n\n    /**\n     * The minimum value of diffused light to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n         */\n    this.minLightLevelToExamineOrInteract = minLightLevelToExamineOrInteract;\n\n    /**\n * The minimum value of diffused light to observe the sprite.\n     * @type {number}\n     * @since 1.0.0\n     */\n    this.minLightLevelToObserve = minLightLevelToObserve;\n\n    this.room.add.existing(this);\n    this.room.updates.add(this);\n    if (hasBody) {\n      this.room.physics.add.existing(this);\n      this.setCollideWorldBounds(true);\n      this.setGravityY(10000);\n    }\n\n    if (layer != null) {\n      if (layer in this.room.layers) {\n        this.room.layers[layer].add(this);\n        this.room.layers.setLayersDepth();\n      } else console.warn('ALERT: layer not found for object', this);\n    }\n\n    this.create();\n  }\n\n  /**\n   * The create function is executed once, immediately after the initialization of the sprite.\n   * @since 1.0.0\n   */\n  create() {\n    console.log('Created:', this.key, '- Type:', this.type, '- Behaviour:', this.behaviours.type);\n    this.setPipeline('Light2D');\n  }\n\n  /**\n   * The update is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n\n  }\n\n  /**\n   * Set the name property of a sprite.\n   * @param {string} value - The name which is used to map a sprite in the room.\n   * @return {TDLib.Sprites.TDLSprite}\n   * @since 1.0.0\n   */\n  setName(value) {\n    this.name = value;\n    return this;\n  }\n\n  // Poichè è stata aggiunta la pixel perfect collision, valutare l'utilità di questa funzione!\n  setHitAreaSize(width = this.width, height = this.height, offsetX = 0, offsetY = 0) {\n    this.input.hitArea.setSize(width, height);\n    this.input.hitArea.setPosition(((this.width - width) / 2) + offsetX, ((this.height - height) / 2) + offsetY);\n  }\n}\n","/* eslint-disable max-len */\n/**\n * Class representing a TDLAction.\n * @memberof TDLib.Components.Actions\n * @since 1.0.0\n */\nexport default class Action {\n  /**\n   * Start a new TDLAction.\n   * @param {TDLib.Components.ActionComponent|TDLib.Components.Actions.TDLAction} invoker - The invoker of the action.\n   * @param {TDLSprite} actor - The actor who performs the action.\n   * @param {Object} config - The config object for the action.\n   * @param {Object} config.target - The target of the action.\n   * @param {number} config.target.x - The x of the target of the action.\n   */\n  constructor(invoker, actor, config = {}) {\n    /**\n     * The invoker of the action.\n     * @type {TDLib.Components.ActionComponent|TDLib.Components.Actions.TDLAction}\n     * @since 1.0.0\n     */\n    this.invoker = invoker;\n\n    /**\n     * The name of the action.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.name = this.constructor.name;\n\n    /**\n     * The actor who performs the action.\n     * @type {TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.actor = actor;\n\n    /**\n     * The target of the action.\n     * @type {Object|TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.target = config.target;\n\n    /**\n     * The config object for the action.\n     * @type {Object}\n     * @since 1.0.0\n     */\n    this.config = config;\n\n    /**\n     * The queue of actions.\n     * @type {Array}\n     * @private\n     * @since 1.0.0\n     */\n    this._queue = [];\n\n    /**\n     * Tells if the action has been paused.\n     * @type {boolean}\n     * @since 1.0.0\n     */\n    this.isPaused = false;\n  }\n\n  /**\n   * Add one or more new actions to the queue.\n   * @param {TDLib.Components.Actions.TDLAction|TDLib.Components.Actions.TDLAction[]|TDLib.Components.Actions.TDLAction.BaseAction|TDLib.Components.Actions.TDLAction.BaseAction[]} actions - The new actions to add.\n   * @since 1.0.0\n   */\n  addActions(actions) {\n    if (Array.isArray(actions)) {\n      actions.forEach(action => {\n        this._queue.push(action);\n      });\n    } else this._queue.push(actions);\n  }\n\n  /**\n   * The blank action to create new composed and complex actions.\n   * @typedef {TDLib.Components.Actions.TDLAction.BaseAction}\n   *\n   * @property {TDLib.Components.ActionComponent|TDLib.Components.Actions.TDLAction} invoker - The invoker of the action.\n   * @property {Function} startCallback - The callback to execute at the beginning of the action.\n   * @property {Function} [finishCallback] - The callback to execute at the end of the action.\n   * @property {Function} [updateCallback]  - The callback to execute at every update loop.\n   * @property {Function} [resumeCallback=startCallback] - The callback to execute when the action is paused.\n   * @property {Function} [pauseCallback=finishCallback]  - The callback to execute when the action is resumed.\n   * @since 1.0.0\n   */\n  static get BaseAction() {\n    return class BaseAction {\n      constructor(invoker, startCallback, finishCallback = () => { }, updateCallback = () => { }, resumeCallback = startCallback, pauseCallback = finishCallback) {\n        this.invoker = invoker;\n\n        this.startCallback = startCallback;\n        this.finishCallback = finishCallback;\n        this.updateCallback = updateCallback;\n        this.resumeCallback = resumeCallback;\n        this.pauseCallback = pauseCallback;\n\n        this.isPaused = false;\n      }\n\n      _start() {\n        this.startCallback();\n      }\n\n      finish() {\n        this.finishCallback();\n        this.invoker._remove();\n      }\n\n      _abort() {\n        this.finishCallback();\n      }\n\n      _resume() {\n        this.isPaused = false;\n        this.resumeCallback();\n      }\n\n      _pause() {\n        this.pauseCallback();\n        this.isPaused = true;\n      }\n\n      _update() {\n        this.updateCallback();\n      }\n    };\n  }\n\n  /**\n   * Abort an uncompleted action.\n   * @private\n   * @since 1.0.0\n   */\n  _abort() {\n    if (this._queue.length > 0) this._queue[0]._abort();\n  }\n\n  /**\n   * Start an action.\n   * @private\n   * @since 1.0.0\n   */\n  _start() {\n    if (this._queue.length > 0) this._queue[0]._start();\n  }\n\n  /**\n   * Finish a completed action.\n   * @private\n   * @since 1.0.0\n   */\n  finish() {\n    if (this._queue.length > 0) this._queue[0].finish();\n  }\n\n  /**\n   * Remove a completed action from the queue.\n   * @private\n   * @since 1.0.0\n   */\n  _remove() {\n    if (this._queue.length > 0) this._queue.shift();\n\n    if (this._queue.length <= 0) this.invoker._remove();\n    else this._queue[0]._start();\n  }\n\n  /**\n   * Pause an action.\n   * @private\n   * @since 1.0.0\n   */\n  _pause() {\n    if (this._queue.length > 0) {\n      this._queue[0]._pause();\n      this.isPaused = true;\n    }\n  }\n\n  /**\n   * Resume a paused action.\n   * @private\n   * @since 1.0.0\n   */\n  _resume() {\n    if (this._queue.length > 0) {\n      this.isPaused = false;\n      this._queue[0]._resume();\n    }\n  }\n\n  /**\n   * Update the currently performed action.\n   * @private\n   * @since 1.0.0\n   */\n  _update() {\n    if (this._queue.length > 0) this._queue[0]._update();\n  }\n}\n","import Action from '../Action';\nimport WalkTo from '../walk-to/WalkTo';\n\nexport default class Examine extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      [\n        new WalkTo(this, this.actor, this.config),\n        this.target.behaviours.examine.getAction(this)\n      ]\n    );\n  }\n}\n","import Action from '../Action';\nimport CONST from '../../../const';\nimport Settings from './Settings';\n\nexport default class FaceTo extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      new Action.BaseAction(\n        this,\n        () => {\n          if (Math.abs(this.actor.x - this.target.x) > Settings.MICRO_MOVEMENT_RADIUS) {\n            if (this.actor.facing === CONST.RIGHT) {\n              if (this.actor.x > this.target.x) {\n                this.actor.facing = CONST.LEFT;\n                this.actor.setFlipX(true);\n                // this.actor.anims.play('idleLeft');\n              }\n            } else if (this.actor.facing === CONST.LEFT) {\n              if (this.actor.x < this.target.x) {\n                this.actor.facing = CONST.RIGHT;\n                this.actor.setFlipX(false);\n                // this.actor.anims.play('idleRight');\n              }\n            }\n          }\n          this.finish();\n        }\n      )\n    );\n  }\n}\n","const Settings = {\n  MICRO_MOVEMENT_RADIUS: 6\n};\n\nmodule.exports = Settings;\n","import Action from '../Action';\nimport CONST from '../../../const';\n\n/**\n * Class representing the idle action.\n * @extends TDLib.Components.Actions.Action\n * @memberof TDLib.Components.Actions\n */\nexport default class Idle extends Action {\n  /**\n   * Start a new idle action.\n   * @param {Components.ActionComponent|Components.Actions.TDLAction} invoker - The invoker of the action.\n   * @param {TDLSprite} actor - The actor who performs the action.\n   * @param {Object} config - The config object for the action.\n   * @param {Object} config.target - The target of the action.\n   * @param {number} config.target.x - The x of the target of the action.\n   */\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      new Action.BaseAction(\n        this,\n        () => {\n          this.actor.body.setVelocity(0);\n          switch (this.actor.facing) {\n\n            case CONST.LEFT: {\n              this.actor.anims.play('idle');\n              // this.actor.anims.play('idleLeft');\n            }\n              break;\n\n            case CONST.RIGHT: {\n              this.actor.anims.play('idle');\n              // this.actor.anims.play('idleRight');\n            }\n              break;\n\n            // possibili altri casi di facing (es girato di spalle o da davanti)\n          }\n        }\n      )\n    );\n  }\n}\n","const Actions = {\n  Action: require('./Action'),\n  Examine: require('./examine/Examine'),\n  FaceTo: require('./face-to/FaceTo'),\n  Idle: require('./idle/Idle'),\n  Interact: require('./interact/Interact'),\n  Observe: require('./observe/Observe'),\n  RunTo: require('./run-to/RunTo'),\n  WalkTo: require('./walk-to/WalkTo')\n};\n\nmodule.exports = Actions;\n","import Action from '../Action';\nimport WalkTo from '../walk-to/WalkTo';\n\nexport default class Interact extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      [\n        new WalkTo(this, this.actor, this.config),\n        this.target.behaviours.interact.getAction(this)\n      ]\n    );\n  }\n}\n","import Action from '../Action';\nimport FaceTo from '../face-to/FaceTo';\n\nexport default class Observe extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      [\n        new FaceTo(this, this.actor, this.config),\n        this.target.behaviours.observe.getAction(this)\n      ]\n    );\n  }\n}\n","import Action from '../Action';\nimport FaceTo from '../face-to/FaceTo';\nimport Settings from './Settings';\n\n// da cambiare e mettere tutta dentro l'AWalkTo e fare un Move to che distingua che azioni chiamare?\nexport default class RunTo extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      [\n        new FaceTo(this, this.actor, this.config),\n        new Action.BaseAction(\n          this,\n          () => {\n            if (Math.abs(this.actor.x - this.target.x) > Settings.MICRO_MOVEMENT_RADIUS) {\n              if (this.actor.x < this.target.x) {\n                this.actor.anims.play('run');\n                // this.actor.anims.play('runRight');\n                this.actor.body.setVelocity(Settings.RUN_VELOCITY);\n              } else if (this.actor.x > this.target.x) {\n                this.actor.anims.play('run');\n                // this.actor.anims.play('runLeft');\n                this.actor.body.setVelocity(-Settings.RUN_VELOCITY);\n              }\n              console.log('start to run to ', config.target.x);\n            } else {\n              this.finish();\n            }\n          },\n          () => {\n            this.actor.body.setVelocity(0);\n          },\n          () => {\n            if ((this.actor.x - this.target.x) * this.actor.body.velocity.x > 0) this.finish();\n          }\n        )\n      ]\n    );\n  }\n}\n","const Settings = {\n  RUN_VELOCITY: 240,\n  MICRO_MOVEMENT_RADIUS: 20\n};\n\nmodule.exports = Settings;\n","const Settings = {\n  WALK_VELOCITY: 100,\n  MICRO_MOVEMENT_RADIUS: 20\n};\n\nmodule.exports = Settings;\n","import Action from '../Action';\nimport FaceTo from '../face-to/FaceTo';\nimport Settings from './Settings';\n\nexport default class WalkTo extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      [\n        new FaceTo(this, this.actor, this.config),\n        new Action.BaseAction(\n          this,\n          () => {\n            if (Math.abs(this.actor.x - this.target.x) > Settings.MICRO_MOVEMENT_RADIUS) {\n              if (this.actor.x < this.target.x) {\n                this.actor.anims.play('walk');\n                // this.actor.anims.play('walkRight');\n                this.actor.body.setVelocity(Settings.WALK_VELOCITY);\n              } else if (this.actor.x > this.target.x) {\n                this.actor.anims.play('walk');\n                // this.actor.anims.play('walkLeft');\n                this.actor.body.setVelocity(-Settings.WALK_VELOCITY);\n              }\n            } else {\n              this.finish();\n            }\n          },\n          () => {\n            this.actor.body.setVelocity(0);\n          },\n          () => {\n            if ((this.actor.x - this.target.x) * this.actor.body.velocity.x > 0) this.finish();\n          }\n        )\n      ]\n    );\n  }\n}\n","import Action from '../actions/Action';\n\n/**\n * Class representing the behaviour of a sprite.\n * @memberof TDLib.Components.SpriteBehaviours\n * @since 1.0.0\n */\nexport default class Behaviour {\n  /**\n   * Create a SpriteBehaviour.\n   * @param {TDLib.Components.SpriteBehaviourComponent} component - The component which has invoked the behaviour.\n   */\n  constructor(component) {\n    /**\n     * The component which has invoked the behaviour.\n     * @type {TDLib.Components.SpriteBehaviourComponent}\n     * @since 1.0.0\n     */\n    this.component = component;\n\n    /**\n     * The global cursor manager.\n     * @type {TDLib.Plugins.GlobalPlugins.CursorManager}\n     * @since 1.0.0\n     */\n    this.cursors = this.component.gameObject.room.cursors;\n\n    /**\n     * The sprite which has invoked the behaviour.\n     * @type {TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.gameObject = this.component.gameObject;\n\n    /**\n     * The room where the gameObject lives.\n     * @type {TDLib.Rooms.TDLRoom}\n     * @since 1.0.0\n     */\n    this.room = this.component.gameObject.room;\n\n    this.add();\n  }\n\n  /**\n   * Set the gameObject as interactive.\n   * @since 1.0.0\n   */\n  add() {\n    if (this.component.pixelPerfect === null) this.component.gameObject.setInteractive();\n    else {\n      this.component.gameObject.setInteractive(\n        {\n          pixelPerfect: true,\n          alphaTolerance: this.component.pixelPerfect.alphaTolerance,\n          draggable: false\n        }\n      );\n    }\n  }\n\n  /**\n   * Generate a proper action according to the behaviour and the gameObject settings.\n   * @return {TDLib.Components.Actions.TDLAction}\n   * @since 1.0.0\n   */\n  getAction(invoker) {\n    return new Action.BaseAction(\n      invoker,\n      () => {\n        console.log('Sono una generica action dei behaviour');\n        invoker.finish();\n      }\n    );\n  }\n\n  checkLight(value) {\n    if (this.room.lightSources.calculateLightsContribuiteAtPoint(this.gameObject) >= value) return true;\n    return false;\n  }\n}\n","const CONST = {\n  EXAMINABLE: 'EXAMINABLE',\n  INERT: 'INERT',\n  INTERACTIVE: 'INTERACTIVE',\n  TALKABLE: 'TALKABLE',\n  INVENTORY: 'INVENTORY',\n\n  DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE: 0.05,\n  DEFAULT_OBSERVE_TEXT: 'Observe default text',\n  DEFAULT_NO_LIGHT_OBSERVE_TEXT: 'NoLightObserve default text',\n  DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT: 0.04,\n  DEFAULT_EXAMINE_OR_INTERACT_TEXT: 'ExamineOrInteract default text',\n  DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT: 'NoLightExamineOrInteract default text'\n};\n\nmodule.exports = CONST;\n","import Behaviour from '../Behaviour';\nimport Action from '../../actions/Action';\n\nexport default class Examinable extends Behaviour {\n  constructor(component) {\n    super(component);\n  }\n\n  /**\n   * Generate a proper action according to the behaviour and the gameObject settings.\n   * @return {TDLib.Components.Actions.TDLAction}\n   * @since 1.0.0\n   */\n  getAction(invoker) {\n    return new Action.BaseAction(\n      invoker,\n      () => {\n        // Fare i controlli su quanta luce c'è nella stanza!\n        if (this.checkLight(this.gameObject.minLightLevelToExamineOrInteract)) {\n          console.log(this.gameObject.examineOrInteractText);\n        } else console.log(this.gameObject.noLightExamineOrInteractText);\n        invoker.finish();\n      }\n    );\n  }\n}\n","import CONST from './const';\n\nvar Behaviours = {\n  Behaviour: require('./Behaviour'),\n  Examinable: require('./examinable/Examinable'),\n  Interactive: require('./interactive/Interactive'),\n  Observable: require('./observable/Observable'),\n  Talkable: require('./talkable/Talkable'),\n  Inventory: require('./inventory/Inventory')\n};\n\n// eslint-disable-next-line no-undef\nBehaviours = Phaser.Utils.Objects.Extend(false, Behaviours, CONST);\nmodule.exports = Behaviours;\n","import Behaviour from '../Behaviour';\nimport Action from '../../actions/Action';\n\nexport default class Interactive extends Behaviour {\n  constructor(component) {\n    super(component);\n  }\n\n  /**\n   * Generate a proper action according to the behaviour and the gameObject settings.\n   * @return {TDLib.Components.Actions.TDLAction}\n   * @since 1.0.0\n   */\n  getAction(invoker) {\n    return new Action.BaseAction(\n      invoker,\n      () => {\n        // Fare i controlli su quanta luce c'è nella stanza!\n        if (this.checkLight(this.gameObject.minLightLevelToExamineOrInteract)) {\n          console.log(this.gameObject.examineOrInteractText);\n        } else console.log(this.gameObject.noLightExamineOrInteractText);\n        invoker.finish();\n      }\n    );\n  }\n}\n","export default class Inventory {\n  constructor() {\n\n  }\n}\n","import Behaviour from '../Behaviour';\nimport Actions from '../../actions';\nimport Settings from './Settings';\n\nexport default class Observable extends Behaviour {\n  constructor(component) {\n    super(component);\n\n    this._timer;\n  }\n\n  add() {\n    super.add();\n\n    this.gameObject.on('pointerover', function (pointer) {\n      this.cursors.setCursor(this.gameObject);\n\n      this._timer = this.gameObject.room.time.addEvent({\n        delay: Settings.DEFAULT_MIN_TIME_TO_OBSERVE,\n        callback: () => {\n          if (this.gameObject !== this.room.player && !this.room.player.isBlocked) {\n            this.room.player.actions.add(Actions.Observe, { target: this.gameObject });\n          }\n        },\n        callbackScope: this\n      });\n    }.bind(this));\n\n    this.gameObject.on('pointerout', function (pointer) {\n      this._timer.remove(false);\n      this.cursors.setCursor();\n    }.bind(this));\n  }\n\n  /**\n   * Delete the timer which starts the AObserve action.\n   */\n  abort() {\n    this._timer.remove(false);\n  }\n\n  /**\n   * Generate a proper action according to the behaviour and the gameObject settings.\n   * @return {TDLib.Components.Actions.TDLAction}\n   * @since 1.0.0\n   */\n  getAction(invoker) {\n    return new Actions.Action.BaseAction(\n      invoker,\n      () => {\n        // Fare i controlli su quanta luce c'è nella stanza!\n        if (this.checkLight(this.gameObject.minLightLevelToObserve)) console.log(this.gameObject.observeText);\n        else console.log(this.gameObject.noLightObserveText);\n        invoker.finish();\n      }\n    );\n  }\n}\n","const Settings = {\n  DEFAULT_MIN_TIME_TO_OBSERVE: 1200\n};\n\nmodule.exports = Settings;\n","import Sprite from '../Sprite';\nimport Behaviour from '../behaviours';\nimport Components from '../../components';\nimport CONST from '../../const';\n\n/**\n * The characters namespace.\n * @namespace TDLib.Sprites.Characters\n * @since 1.0.0\n */\n\n/**\n * Class representing a Character.\n * @extends TDLib.Sprites.Sprite\n * @memberof TDLib.Sprites.Characters\n * @since 1.0.0\n */\nexport default class Character extends Sprite {\n  /**\n   * Create a new Character.\n   * @param {Room} room - The room where the character is created.\n   * @param {number} x - The x coordinate of the character.\n   * @param {number} y - The y coordinate of the character.\n   * @param {string} texture - The character's graphic.\n   * @param {string} layer - The character's layer.\n   */\n  constructor(room, x, y, texture, layer) {\n    super(...arguments, true, Behaviour.INTERACTIVE, { alphaTolerance: 1 });\n\n    /**\n     * The ActionComponent for this character.\n     * @type {Components.ActionComponent}\n     * @since 1.0.0\n     */\n    this.actions = new Components.ActionComponent(this);\n\n    /**\n     * The facing of the character.\n     * @type {TDLCharacter.FACING}\n     * @since 1.0.0\n     */\n    this.facing = CONST.RIGHT;\n  }\n\n  create() {\n    super.create();\n  }\n}\n","const Characters = {\n  NPCharacter: require('./npc-characters/NPCharacter'),\n  Player: require('./players/Player')\n};\n\nmodule.exports = Characters;\n","import Character from '../Character';\n\nexport default class NPCharacter extends Character {\n  constructor(room, x, y, texture, layer) {\n    super(room, x, y, texture, layer);\n  }\n}\n","import Character from '../Character';\n\nexport default class Player extends Character {\n  constructor(room, x, y, texture) {\n    super(room, x, y, texture, 'playerLayer');\n\n    this.isBlocked = false;\n  }\n\n  create() {\n    super.create();\n\n    this.room.input.on('pointerdown', function (pointer) {\n      this.room.cursors.pointerDown(this);\n    }, this);\n  }\n}\n","import EffectComponent from '../../components/EffectComponent';\n\nexport default class Effect {\n  constructor(invoker, config = {}) {\n\n    this.invoker = invoker;\n\n    this.config = config;\n\n    this.gameObject = invoker.gameObject;\n\n    this.name = this.constructor.name;\n  }\n\n  play(callback = () => { }) {\n    if (this.invoker instanceof EffectComponent) {\n      callback();\n    } else console.log('Effects can only be played by the EffectComponent');\n  }\n\n  stop(callback = () => { }) {\n    if (this.invoker instanceof EffectComponent) {\n      callback();\n    } else console.log('Effects can only be stopped by the EffectComponent');\n  }\n}\n","const Effects = {\n  Effect: require('./Effect'),\n  LightEffects: require('./light-effects')\n};\n\nmodule.exports = Effects;\n","import LightEffect from './LightEffect';\n\nexport default class HardFlickering extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.5);\n\n    if (!this.config.minTime) this.config.minTime = 10;\n    if (!this.config.maxTime) this.config.maxTime = 400;\n    if (!this.config.finalState) this.config.finalState = 'on';\n  }\n\n  play() {\n    super.play(() => {\n      let setTimer = () => {\n        this.gameObject.room.time.addEvent({\n          delay: Math.floor(Math.random() * (this.config.maxTime - this.config.minTime)) + this.config.minTime,\n          callback: () => {\n            if (!this.stopped) {\n              if (this.gameObject.config.graphicLight !== null) {\n                if (this.gameObject.graphicLight.intensity === 0) {\n                  this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity);\n                } else this.gameObject.graphicLight.setIntensity(0);\n              }\n\n              if (this.gameObject.config.diffusedLight !== null) {\n                if (this.gameObject.diffusedLight.intensity === 0) {\n                  this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity);\n                } else this.gameObject.diffusedLight.setIntensity(0);\n              }\n              setTimer();\n            }\n          },\n          callbackScope: this,\n          repeat: 0\n        });\n      };\n\n      setTimer();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      if (this.config.finalState === 'on') {\n        if (this.gameObject.config.graphicLight !== null) {\n          this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity);\n        }\n        if (this.gameObject.config.diffusedLight !== null) {\n          this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity);\n        }\n      } else if (this.config.finalState === 'off') {\n        this.gameObject.turnOff();\n      }\n    });\n  }\n}\n","import LightEffect from './LightEffect';\nimport HardFlickering from './HardFlickering';\nimport Trembling from './Trembling';\n\nexport default class HardFlickeringAndTrembling extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.5);\n\n    this.hardFlickering = new HardFlickering(this.invoker, this.config);\n    this.trembling = new Trembling(this.invoker, this.config);\n  }\n\n  play() {\n    super.play(() => {\n      this.hardFlickering.play();\n      this.trembling.play();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      this.hardFlickering.stop();\n      this.trembling.stop();\n    });\n  }\n}\n","import Effect from '../Effect';\n\nexport default class LightEffect extends Effect {\n  constructor(invoker, config, contributeFactor = 1) {\n    super(invoker, config);\n\n    this.contributeFactor = contributeFactor;\n  }\n\n  play(callback) {\n    super.play(() => {\n      this.stopped = false;\n      callback();\n    });\n  }\n\n  stop(callback) {\n    super.stop(() => {\n      this.stopped = true;\n      callback();\n    });\n  }\n}\n","/* eslint-disable max-len */\nimport LightEffect from './LightEffect';\n\nexport default class RadiusFlickering extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.9);\n\n    if (!this.config.minTime) this.config.minTime = 10;\n    if (!this.config.maxTime) this.config.maxTime = 100;\n    if (!this.config.minPercentageIntensity) this.config.minPercentageIntensity = 0.8;\n    if (!this.config.maxPercentageIntensity) this.config.maxPercentageIntensity = 1;\n    if (!this.config.minPercentageRadius) this.config.minPercentageRadius = 0.8;\n    if (!this.config.maxPercentageRadius) this.config.maxPercentageRadius = 1;\n    if (!this.config.backToInitialIntensity) this.config.backToInitialIntensity = true;\n    if (!this.config.backToInitialRadius) this.config.backToInitialRadius = true;\n  }\n\n  play() {\n    super.play(() => {\n      var setTimer = () => {\n        this.gameObject.room.time.addEvent({\n          delay: Math.floor(Math.random() * (this.config.maxTime - this.config.minTime)) + this.config.minTime,\n          callback: () => {\n            if (!this.stopped) {\n              let newIntensityPercentage = Math.floor((this.config.minPercentageIntensity + Math.random() * (this.config.maxPercentageIntensity - this.config.minPercentageIntensity)) * 100 + 1) / 100;\n\n              this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity * newIntensityPercentage);\n              this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity * newIntensityPercentage);\n              let newRadiusPercentage = Math.floor((this.config.minPercentageRadius + Math.random() * (this.config.maxPercentageRadius - this.config.minPercentageRadius)) * 100 + 1) / 100;\n\n              this.gameObject.graphicLight.setRadius(this.gameObject.config.graphicLight.radius * newRadiusPercentage);\n\n              setTimer();\n            }\n\n          },\n          callbackScope: this,\n          repeat: 0\n        });\n      };\n\n      setTimer();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      if (this.config.backToInitialIntensity) {\n        this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity);\n        this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity);\n      } else {\n        this.gameObject.config.graphicLight.intensity = this.gameObject.graphicLight.intensity;\n        this.gameObject.config.diffusedLight.intensity = this.gameObject.diffusedLight.intensity;\n      }\n      if (this.config.backToInitialRadius) {\n        this.gameObject.graphicLight.setRadius(this.gameObject.config.graphicLight.radius);\n      } else {\n        this.gameObject.config.graphicLight.radius = this.gameObject.graphicLight.radius;\n      }\n    });\n  }\n}\n","/* eslint-disable max-len */\nimport LightEffect from './LightEffect';\n\nexport default class SoftFlickering extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.8);\n\n    if (!this.config.minTime) this.config.minTime = 10;\n    if (!this.config.maxTime) this.config.maxTime = 100;\n    if (!this.config.minPercentageIntensity) this.config.minPercentageIntensity = 0.8;\n    if (!this.config.maxPercentageIntensity) this.config.maxPercentageIntensity = 1;\n    if (!this.config.backToInitialIntensity) this.config.backToInitialIntensity = true;\n  }\n\n  play() {\n    super.play(() => {\n      let setTimer = () => {\n        this.gameObject.room.time.addEvent({\n          delay: Math.floor(Math.random() * (this.config.maxTime - this.config.minTime)) + this.config.minTime,\n          callback: () => {\n            if (!this.stopped) {\n              let newIntensityPercentage = Math.floor((this.config.minPercentageIntensity + Math.random() * (this.config.maxPercentageIntensity - this.config.minPercentageIntensity)) * 100 + 1) / 100;\n\n              this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity * newIntensityPercentage);\n              this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity * newIntensityPercentage);\n              setTimer();\n            }\n          },\n          callbackScope: this,\n          repeat: 0\n        });\n      };\n\n      setTimer();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      if (this.config.backToInitialIntensity) {\n        this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity);\n        this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity);\n      } else {\n        this.gameObject.config.graphicLight.intensity = this.gameObject.graphicLight.intensity;\n        this.gameObject.config.diffusedLight.intensity = this.gameObject.diffusedLight.intensity;\n      }\n    });\n  }\n}\n","import LightEffect from './LightEffect';\nimport SoftFlickering from './SoftFlickering';\nimport Trembling from './Trembling';\n\nexport default class SoftDefaultFlickeringAndtrembling extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.5);\n\n    this.softFlickering = new SoftFlickering(this.invoker, this.config);\n    this.trembling = new Trembling(this.invoker, this.config);\n  }\n\n  play() {\n    super.play(() => {\n      this.softFlickering.play();\n      this.trembling.play();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      this.softFlickering.stop();\n      this.trembling.stop();\n    });\n  }\n}\n","/* eslint-disable max-len */\nimport LightEffect from './LightEffect';\n\nexport default class Trembling extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.8);\n\n    if (!this.config.minTime) this.config.minTime = 10;\n    if (!this.config.maxTime) this.config.maxTime = 100;\n    if (!this.config.minPercentageIntensity) this.config.minPercentageIntensity = 0.8;\n    if (!this.config.maxPercentageIntensity) this.config.maxPercentageIntensity = 1;\n    if (!this.config.minPercentageRadius) this.config.minPercentageRadius = 0.8;\n    if (!this.config.maxPercentageRadius) this.config.maxPercentageRadius = 1;\n    if (!this.config.backToInitialIntensity) this.config.backToInitialIntensity = true;\n    if (!this.config.backToInitialRadius) this.config.backToInitialRadius = true;\n  }\n\n  play() {\n    super.play(() => {\n      let setTimer = () => {\n        this.gameObject.room.time.addEvent({\n          delay: Math.floor(Math.random() * (this.config.maxTime - this.config.minTime)) + this.config.minTime,\n          callback: () => {\n\n            if (!this.stopped) {\n              let newIntensityPercentage = Math.floor((this.config.minPercentageIntensity + Math.random() * (this.config.maxPercentageIntensity - this.config.minPercentageIntensity)) * 100 + 1) / 100;\n\n              this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity * newIntensityPercentage);\n              this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity * newIntensityPercentage);\n              let newRadiusPercentage = Math.floor((this.config.minPercentageRadius + Math.random() * (this.config.maxPercentageRadius - this.config.minPercentageRadius)) * 100 + 1) / 100;\n\n              this.gameObject.graphicLight.setRadius(this.gameObject.config.graphicLight.radius * newRadiusPercentage);\n\n              setTimer();\n            }\n\n          },\n          callbackScope: this,\n          repeat: 0\n        });\n      };\n\n      setTimer();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      if (this.config.backToInitialIntensity) {\n        this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity);\n        this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity);\n      } else {\n        this.gameObject.config.graphicLight.intensity = this.gameObject.graphicLight.intensity;\n        this.gameObject.config.diffusedLight.intensity = this.gameObject.diffusedLight.intensity;\n      }\n      if (this.config.backToInitialRadius) {\n        this.gameObject.graphicLight.setRadius(this.gameObject.config.graphicLight.radius);\n      } else {\n        this.gameObject.config.graphicLight.radius = this.gameObject.graphicLight.radius;\n      }\n    });\n  }\n}\n","const LightEffects = {\n  HardFlickering: require('./HardFlickering'),\n  HardFlickeringAndTrembling: require('./HardFlickeringAndTrembling'),\n  LightEffect: require('./LightEffect'),\n  RadiusFlickering: require('./RadiusFlickering'),\n  SoftFlickering: require('./SoftFlickering'),\n  SoftFlickeringAndTrembling: require('./SoftFlickeringAndTrembling'),\n  Trembling: require('./Trembling')\n};\n\nmodule.exports = LightEffects;\n","const Sprites = {\n  Actions: require('./actions'),\n  Behaviours: require('./behaviours'),\n  Characters: require('./characters'),\n  Effects: require('./effects'),\n  InventoryItems: require('./inventory-items'),\n  WorldItems: require('./world-items'),\n  Sprite: require('./Sprite')\n};\n\nmodule.exports = Sprites;\n","import Sprite from '../Sprite';\n\n/**\n * The inventory items namespace.\n * @namespace TDLib.Sprites.InventoryItems\n * @since 1.0.0\n */\n\n/**\n * Class representing an InentoryItem.\n * @extends TDLib.Sprites.Sprite\n * @memberof TDLib.Sprites.InventoryItems\n * @since 1.0.0\n */\n\nexport default class InentoryItem extends Sprite {\n  /**\n   * Create a new InvetoryItem.\n   * @param {Room} room - The room where the item is created.\n   * @param {number} x - The x coordinate of the item.\n   * @param {number} y - The y coordinate of the item.\n   * @param {string} texture - The item's graphic.\n   * @param {string} layer - The item's layer.\n   */\n  constructor(room, x, y, texture, layer) {\n    super(...arguments, false);\n  }\n\n  create() {\n    super.create();\n    this.resetPipeline(); // InventoryItems are not part of the Light2D pipeline!\n  }\n}\n","const InventoryItems = {\n  InventoryItem: require('./InventoryItem')\n};\n\nmodule.exports = InventoryItems;\n","/* eslint-disable max-len */\nimport Sprite from '../Sprite';\n\n/**\n * The world items namespace.\n * @namespace TDLib.Sprites.WorldItems\n * @since 1.0.0\n */\n\n/**\n * Class representing a WorldItem.\n * @extends TDLib.Sprites.Sprite\n * @memberof TDLib.Sprites.WorldItems\n * @since 1.0.0\n */\nexport default class WorldItem extends Sprite {\n  /**\n   * Create a WorldObject.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [layer=null] - The key of the layer which will contain the sprite.\n   * @param {boolean} [hasBody=true] - Specify if the sprite has physics.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   */\n  constructor(room, x, y, texture, layer, hasBody, behaviourType, pixelPerfect, observeText, examineOrInteractText, blockExamineText, noLightObserveText, noLightExamineOrInteractText, examineOrInteractOffsetX, examineOrInteractThresholdRadius, minLightLevelToExamineOrInteract, minLightLevelToObserve) {\n    super(\n      room,\n      x, y,\n      texture,\n      layer,\n      hasBody,\n      behaviourType,\n      pixelPerfect,\n      observeText,\n      examineOrInteractText,\n      blockExamineText,\n      noLightObserveText,\n      noLightExamineOrInteractText,\n      examineOrInteractOffsetX,\n      examineOrInteractThresholdRadius,\n      minLightLevelToExamineOrInteract,\n      minLightLevelToObserve\n    );\n  }\n\n  create() {\n    super.create();\n  }\n}\n","const WorldItems = {\n  WorldItem: require('./WorldItem'),\n  LightSources: require('./light-sources'),\n  RoomFurnitures: require('./room-furnitures'),\n  WallFurnitures: require('./wall-furnitures')\n};\n\nmodule.exports = WorldItems;\n","/* eslint-disable max-len */\nimport WorldItem from '../WorldItem';\nimport Behaviours from '../../behaviours';\nimport EffectComponent from '../../../components/EffectComponent';\n\nexport default class LightSource extends WorldItem {\n  /**\n   * constructor of the class\n   * @param {Room} room - Room in which will be created the LightSource.\n   * @param {number} x - X position of the sprite.\n   * @param {number} y - Y position of the sprite.\n   * @param {string} texture - Name of the sprite for the LightSource.\n   * @param {string} layer - Name of the Layer in which will be put the LightSource.\n   * @param {Object} graphicLightConfig - Configuration of the graphic light of the LightSource.\n   * @param {number} graphicLightConfig.intensity - Intensity of the graphic light.\n   * @param {number} graphicLightConfig.radius - Radius of the graphic light.\n   * @param {Phaser.Display.RGB} [graphicLightConfig.color=0xFFFFFF] - The color of the graphic light.\n   * @param {Object} diffusedLightConfig - Configuration of the diffused light of the LightSource.\n   * @param {number} diffusedLightConfig.intensity - Intensity of the diffused light.\n   * @param {number} diffusedLightConfig.radius - Radius of the diffused light.\n   * @param {Phaser.Display.RGB} [diffusedLightConfig.color=0xFFFFFF] - The color of the diffused light.\n   * @param {Object} offset - Offset of the graphic light respect the center of the sprite.\n   * @param {number} offset.x - X offset.\n   * @param {number} offset.y - Y offset.\n   * @param {boolean} [isOn=true] - Light created as switched on or off.\n   */\n  constructor(room, x, y, texture, layer, graphicLightConfig, diffusedLightConfig, offset, isOn = true) {\n    super(room, x, y, texture, layer, true, Behaviours.EXAMINABLE);\n\n    this.setGravityY(0);\n\n    this.config = {\n      graphicLight: graphicLightConfig,\n      diffusedLight: diffusedLightConfig,\n      offset: offset\n    };\n\n    this.diffusedLight = null;\n    this.graphicLight = null;\n\n    this.isOn = false;\n    if (isOn) {\n      this.turnOn();\n    }\n\n    // Register this LightSource instance to the Room's LightManager\n    this.room.lightSources.add(this);\n    this.effects = new EffectComponent(this);\n  }\n\n  /**\n   * Turn on the lights of the LightSource by creating new ones if null or adjusting intensity.\n   */\n  turnOn() {\n    if (!this.isOn) {\n\n      if (this.diffusedLight === null) {\n        if (this.config.diffusedLight !== null) {\n          this.diffusedLight = this.room.lights.addLight(this.x + this.config.offset.x, this.y + this.config.offset.y, this.config.diffusedLight.radius);\n          this.diffusedLight.setIntensity(this.config.diffusedLight.intensity);\n          if (this.config.diffusedLight.color) {\n            this.diffusedLight.setColor(this.config.diffusedLight.color);\n          }\n        }\n      } else {\n        this.diffusedLight.setIntensity(this.config.diffusedLight.intensity);\n        if (this.config.diffusedLight.color) {\n          this.diffusedLight.setColor(this.config.diffusedLight.color);\n        }\n      }\n\n      if (this.graphicLight === null) {\n        if (this.config.graphicLight !== null) {\n          this.graphicLight = this.room.lights.addLight(this.x + this.config.offset.x, this.y + this.config.offset.y, this.config.graphicLight.radius);\n          this.graphicLight.setIntensity(this.config.graphicLight.intensity);\n          if (this.config.graphicLight.color) {\n            this.graphicLight.setColor(this.config.graphicLight.color);\n          }\n        }\n      } else {\n        this.graphicLight.setIntensity(this.config.graphicLight.intensity);\n        if (this.config.graphicLight.color) {\n          this.graphicLight.setColor(this.config.graphicLight.color);\n        }\n      }\n\n      this.isOn = true;\n    }\n  }\n\n  /**\n     * Turn off the lights of the LightSource by deleting the existing ones.\n     */\n  turnOff() {\n    this.effects.stop();\n\n    if (this.isOn) {\n      if (this.diffusedLight !== null) {\n        this.diffusedLight.setIntensity(0);\n      }\n\n      if (this.graphicLight !== null) {\n        this.graphicLight.setIntensity(0);\n      }\n\n      this.isOn = false;\n    }\n  }\n\n  /**\n   * If the light source is on, turn it off and vice versa.\n   */\n  switch() {\n    if (this.isOn) this.turnOff();\n    else this.turnOn();\n  }\n}\n","const LightSources = {\n  LightSource: require('./LightSource')\n};\n\nmodule.exports = LightSources;\n","/* eslint-disable max-len */\nimport WorldItem from '../WorldItem';\n\n/**\n * The room furnitures namespace.\n * @namespace TDLib.Sprites.Objects.WorldObjects.RoomFurnitures\n * @since 1.0.0\n */\n\n/**\n * Class representing a RoomFurniture.\n * @extends TDLib.Sprites.Objects.WorldObjects.WorldObject\n * @memberof TDLib.Sprites.Objects.WorldObjects.RoomFurnitures\n * @since 1.0.0\n */\nexport default class RoomFurniture extends WorldItem {\n  /**\n   * Create a RoomFurniture.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   */\n  constructor(room, x, y, texture, behaviourType, pixelPerfect, observeText, examineOrInteractText, blockExamineText, noLightObserveText, noLightExamineOrInteractText, examineOrInteractOffsetX, examineOrInteractThresholdRadius, minLightLevelToExamineOrInteract, minLightLevelToObserve) {\n    super(\n      room,\n      x, y,\n      texture,\n      'roomFurnitureLayer',\n      true,\n      behaviourType,\n      pixelPerfect,\n      observeText,\n      examineOrInteractText,\n      blockExamineText,\n      noLightObserveText,\n      noLightExamineOrInteractText,\n      examineOrInteractOffsetX,\n      examineOrInteractThresholdRadius,\n      minLightLevelToExamineOrInteract,\n      minLightLevelToObserve\n    );\n  }\n}\n","const RoomFurnitures = {\n  RoomFurniture: require('./RoomFurniture')\n};\n\nmodule.exports = RoomFurnitures;\n","/* eslint-disable max-len */\nimport WorldItem from '../WorldItem';\n\n/**\n * The wall furnitures namespace.\n * @namespace TDLib.Sprites.Objects.WorldObjects.WallFurnitures\n * @since 1.0.0\n */\n\n/**\n * Class representing a WallFurniture.\n * @extends TDLib.Sprites.Objects.WorldObjects.WorldObject\n * @memberof TDLib.Sprites.Objects.WorldObjects.WallFurnitures\n * @since 1.0.0\n */\nexport default class WallFurniture extends WorldItem {\n  /**\n   * Create a WallFurniture.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   */\n  constructor(room, x, y, texture, behaviourType, pixelPerfect, observeText, examineOrInteractText, blockExamineText, noLightObserveText, noLightExamineOrInteractText, examineOrInteractOffsetX, examineOrInteractThresholdRadius, minLightLevelToExamineOrInteract, minLightLevelToObserve) {\n    super(\n      room,\n      x, y,\n      texture,\n      'wallFurnitureLayer',\n      true,\n      behaviourType,\n      pixelPerfect,\n      observeText,\n      examineOrInteractText,\n      blockExamineText,\n      noLightObserveText,\n      noLightExamineOrInteractText,\n      examineOrInteractOffsetX,\n      examineOrInteractThresholdRadius,\n      minLightLevelToExamineOrInteract,\n      minLightLevelToObserve\n    );\n\n    this.setGravityY(0);\n  }\n}\n","const WallFurnitures = {\n  WallFurniture: require('./WallFurniture')\n};\n\nmodule.exports = WallFurnitures;\n","/* eslint-disable max-len */\nimport Actions from '../../sprites/actions';\nimport Behaviours from '../../sprites/behaviours';\nimport Phaser from 'phaser';\n\n/**\n * Class representing the CursorSystem, able to select the correct graphic for the cursor and to handle pointer events.\n * @extends Phaser.Plugins.BasePlugin\n * @memberof TDLib.Plugins.GlobalPlugins\n * @since 1.0.0\n */\nexport default class CursorSystem extends Phaser.Plugins.BasePlugin {\n  /**\n   * Create a new CursorSystem.\n   * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to the plugin manager.\n   */\n  constructor(pluginManager) {\n    super(pluginManager);\n\n    /**\n     * The scene containing the cursor.\n     * @type {CursorSystem.CURSOR_SCENE}\n     * @since 1.0.0\n     */\n    this.cursorScene;\n\n    /**\n     * The Scene Manager is a Game level system, responsible for creating, processing and updating all of the Scenes in a Game instance.\n     * @type {Phaser.Scenes.SceneManager}\n     * @since 1.0.0\n     */\n    this.sceneManager;\n\n    /**\n     * Save the last sprite who called the function setCursor().\n     * @type {TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.lastTarget;\n  }\n\n  /**\n   * It's a Phaser.Scene representing the scene containing the cursor which will be put on the rooms level.\n   * @typedef {TDLib.Plugins.GlobalPlugins.CursorSystem.CursorScene}\n   * @extends {Phaser.Scenes.Scene}\n   * @since 1.0.0\n   */\n  static get CursorScene() {\n    return class CursorScene extends Phaser.Scene {\n      constructor() {\n        super(CursorSystem.CURSOR_SCENE_KEY);\n\n        this.cursor;\n      }\n\n      preload() {\n        this.load.image(CursorSystem.EXAMINABLE_CURSOR, 'assets/Cursors/CursorExamine.png');\n        this.load.image(CursorSystem.HOLD_CURSOR, 'assets/Cursors/CursorHold.png');\n        this.load.image(CursorSystem.INTERACTIVE_CURSOR, 'assets/Cursors/CursorInteract.png');\n        this.load.image(CursorSystem.DEFAULT_CURSOR, 'assets/Cursors/CursorMove.png');\n        this.load.image(CursorSystem.TALKABLE_CURSOR, 'assets/Cursors/CursorTalk.png');\n        this.load.image(CursorSystem.CHOICE_CURSOR, 'assets/Cursors/CursorChoice.png');\n        this.load.image(CursorSystem.CHOICE_PRESSED_CURSOR, 'assets/Cursors/CursorChoicePressed.png');\n      }\n\n      create() {\n        this.input.setDefaultCursor('none');\n        this.cursor = this.add.image(0, 0, CursorSystem.DEFAULT_CURSOR).setOrigin(0.4, 0.33).setDepth(100000);\n      }\n\n      update() {\n        this.cursor.setPosition(this.input.activePointer.x, this.input.activePointer.y);\n      }\n    };\n  }\n\n  /**\n   * The key of the scene containing the cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get CURSOR_SCENE_KEY() {\n    return 'CursorScene';\n  }\n\n  /**\n   * The key of the inert cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get DEFAULT_CURSOR() {\n    return 'cursorMove';\n  }\n\n  /**\n   * The key of the examine cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get EXAMINABLE_CURSOR() {\n    return 'cursorExamine';\n  }\n\n  /**\n   * The key of the interact cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get INTERACTIVE_CURSOR() {\n    return 'cursorInteract';\n  }\n\n  /**\n   * The key of the hold cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get HOLD_CURSOR() {\n    return 'cursorHold';\n  }\n\n  /**\n   * The key of the talk cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get TALKABLE_CURSOR() {\n    return 'cursorTalk';\n  }\n\n  /**\n   * The key of the choice cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get CHOICE_CURSOR() {\n    return 'cursorChoice';\n  }\n\n  /**\n   * The key of the choice pressed cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get CHOICE_PRESSED_CURSOR() {\n    return 'cursorChoicePressed';\n  }\n\n  /**\n   * Configure the cursor manager.\n   * @param {Phaser.Scenes.SceneManager} sceneManager - The Scene Manager is a Game level system, responsible for creating, processing and updating all of the Scenes in a Game instance.\n   * @since 1.0.0\n   */\n  configure(sceneManager) {\n    this.sceneManager = sceneManager;\n    this.cursorScene = this.sceneManager.add(CursorSystem.CURSOR_SCENE_KEY, CursorSystem.CursorScene, true);\n  }\n\n  /**\n   * Handle the pointer down event.\n   * @param {TDLib.Sprites.Characters.TDLCharacter} player - The current player.\n   * @since 1.0.0\n   */\n  pointerDown(player, pointer = null) {\n    if (!player.isBlocked) {\n      switch (this.cursorScene.cursor.texture.key) {\n        case CursorSystem.DEFAULT_CURSOR: {\n          if (typeof player.room.input.activePointer.camera !== 'undefined') player.actions.add(Actions.WalkTo, { target: { x: player.room.input.activePointer.worldX } });\n        }\n          break;\n\n        case CursorSystem.EXAMINABLE_CURSOR: {\n          this.lastTarget.behaviours.observe.abort();\n          player.actions.add(Actions.Examine, { target: this.lastTarget });\n        }\n          break;\n\n        case CursorSystem.INTERACTIVE_CURSOR: {\n          this.lastTarget.behaviours.observe.abort();\n          player.actions.add(Actions.Interact, { target: this.lastTarget });\n        }\n          break;\n\n        case CursorSystem.TALKABLE_CURSOR: {\n          player.actions.add(Actions.TalkTo, { target: this.lastTarget });\n        }\n          break;\n      }\n    }\n  }\n\n  /**\n   * Set the correct cursor for the target selected.\n   * @param {Object} target - The target of the pointer.sceneManager\n   * @param {TDLib.Components.ActionComponent} target.behaviours - The SpriteBehaviourComponent of the target.\n   * @param {string} [target.behaviours.type=TDLib.Sprites.Behaviours.INERT] - The type of the sprite behaviour for this target.\n   * @since 1.0.0\n   */\n  setCursor(target = { behaviours: { type: Behaviours.INERT }, room: {} }) {\n    if ('room' in target && target !== target.room.player) {\n      switch (target.behaviours.type) {\n        case Behaviours.INERT: {\n          this.cursorScene.cursor.setTexture(CursorSystem.DEFAULT_CURSOR).setOrigin(0.4, 0.33);\n        }\n          break;\n\n        case Behaviours.EXAMINABLE: {\n          this.cursorScene.cursor.setTexture(CursorSystem.EXAMINABLE_CURSOR).setOrigin(0.33, 0.29);\n        }\n          break;\n\n        case Behaviours.INTERACTIVE: {\n          this.cursorScene.cursor.setTexture(CursorSystem.INTERACTIVE_CURSOR).setOrigin(0.4, 0.33);\n        }\n          break;\n\n        case Behaviours.TALKABLE: {\n          this.cursorScene.cursor.setTexture(CursorSystem.TALKABLE_CURSOR);\n        }\n          break;\n      }\n\n      this.lastTarget = target;\n    }\n  }\n\n  /**\n   * Show the cursor.\n   * @since 1.0.0\n   */\n  showCursor() {\n    if (this.cursorScene.cursor) {\n      this.cursorScene.cursor.setVisible(true);\n    }\n  }\n\n  /**\n   * Hide the cursor.\n   * @since 1.0.0\n   */\n  hideCursor() {\n    if (this.cursorScene.cursor) {\n      this.cursorScene.cursor.setVisible(false);\n    }\n  }\n}\n","const Systems = {\n  CursorSystem: require('./cursors/CursorSystem'),\n  RoomSystem: require('./rooms/RoomSystem')\n};\n\nmodule.exports = Systems;\n","/* eslint-disable max-len */\nimport Phaser from 'phaser';\n\n/**\n * Class representing the manager of the rooms\n * @extends Phaser.Plugins.BasePlugin\n * @memberof TDLib.Plugins.GlobalPlugins\n */\nexport default class RoomSystem extends Phaser.Plugins.BasePlugin {\n  /**\n   * Create a new RoomSystem.\n   * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to the plugin manager.\n   */\n  constructor(pluginManager) {\n    super(pluginManager);\n\n    /**\n     * The Scene Manager is a Game level system, responsible for creating, processing and updating all of the Scenes in a Game instance.\n     * @type {Phaser.Scenes.SceneManager}\n     */\n    this.sceneManager = {};\n\n    this.currentRoom = null;\n  }\n\n  /**\n   * Add (and start) a new room to the RoomSystem.\n   * @param {TDLib.Rooms.Room} room - The class of the new room to add.\n   * @param {boolean} [autoStart=true] - Specify if the room has to start.\n   */\n  start(room, autoStart = true) {\n    if (room) {\n      if (this.currentRoom) {\n        this.sceneManager.remove(this.currentRoom.name);\n        console.log('Stopping room:', this.currentRoom.name);\n      }\n      if (room.name in this.sceneManager.keys) {\n        this.sceneManager.start(room.name);\n      } else {\n        this.sceneManager.add(room.name, room, autoStart);\n      }\n      console.log('Starting room:', room.name);\n      this.currentRoom = room;\n    }\n  }\n\n  /**\n   * Configure the RoomSystem.\n   * @param {Phaser.Scenes.SceneManager} sceneManager - The Scene Manager is a Game level system, responsible for creating, processing and updating all of the Scenes in a Game instance.\n   */\n  configure(sceneManager) {\n    this.sceneManager = sceneManager;\n  }\n}\n","/* eslint-disable max-len */\nimport Settings from '../boot/Settings';\n\nconst getScreenProps = () => {\n  var returnValue = {};\n\n  // cz : ah = 1 : mh\n  if (Settings.DEVICE === 'Mobile') {\n    returnValue.availHeight = window.innerHeight;\n    returnValue.availWidth = window.innerWidth;\n    returnValue.calculatedZoom = Math.floor(returnValue.availHeight / ((Settings.ROOM_HEIGHT_IN_TILE + Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE + Settings.ROOM_FRAME_IN_TILES_MOBILE * 2) * Settings.TILE_SIZE) * 100) / 100;\n  } else if (Settings.DEVICE === 'Desktop') {\n    returnValue.availHeight = screen.height;\n    returnValue.availWidth = screen.width;\n    returnValue.calculatedZoom = Math.floor(returnValue.availHeight / ((Settings.ROOM_HEIGHT_IN_TILE + Settings.INVENTORY_HEIGHT_IN_TILES_DESKTOP + Settings.ROOM_FRAME_IN_TILES_DESKTOP * 2) * Settings.TILE_SIZE) * 100) / 100;\n  } else {\n    console.warn('Unsupported device.');\n  }\n\n  console.log('ZOOM: ' + returnValue.calculatedZoom);\n\n  // Sono le dimensioni riaggiustate rispetto allo zoom scelto\n  // ch : ah = 1 : cz\n  returnValue.calculatedHeight = Math.ceil(returnValue.availHeight / returnValue.calculatedZoom);\n  returnValue.calculatedWidth = Math.ceil(returnValue.availWidth / returnValue.calculatedZoom);\n\n  console.log('AVAIL-H: ' + returnValue.availHeight + '\\nCALC-H: ' + returnValue.calculatedHeight);\n  console.log('AVAIL-W: ' + returnValue.availWidth + '\\nCALC-W: ' + returnValue.calculatedWidth);\n\n  return returnValue;\n};\n\nmodule.exports = getScreenProps;\n","const Utils = {\n  getScreenProps: require('./Utils')\n};\n\nmodule.exports = Utils;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst client_1 = __importDefault(require(\"./parsers/client\"));\nconst device_1 = __importDefault(require(\"./parsers/device\"));\nconst operating_system_1 = __importDefault(require(\"./parsers/operating-system\"));\nconst vendor_fragment_1 = __importDefault(require(\"./parsers/vendor-fragment\"));\nconst browser_1 = __importDefault(require(\"./parsers/client/browser\"));\nconst BotParser = require(\"./parsers/bot\");\nconst user_agent_1 = require(\"./utils/user-agent\");\nconst version_compare_1 = require(\"./utils/version-compare\");\nclass DeviceDetector {\n    constructor(options) {\n        // Default options\n        this.options = {\n            skipBotDetection: false,\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n            const result = {\n                client: this.clientParser.parse(userAgent),\n                os: this.operatingSystemParser.parse(userAgent),\n                device: this.deviceParser.parse(userAgent),\n                bot: this.options.skipBotDetection ? null : this.botParser.parse(userAgent)\n            };\n            const osName = (_a = result.os) === null || _a === void 0 ? void 0 : _a.name;\n            const osVersion = (_b = result.os) === null || _b === void 0 ? void 0 : _b.version;\n            const osFamily = operating_system_1.default.getOsFamily(osName || \"\");\n            if (!((_c = result.device) === null || _c === void 0 ? void 0 : _c.brand)) {\n                const brand = this.vendorFragmentParser.parse(userAgent);\n                if (brand) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.brand = brand;\n                }\n            }\n            /**\n             * Assume all devices running iOS / Mac OS are from Apple\n             */\n            if (!((_d = result.device) === null || _d === void 0 ? void 0 : _d.brand) && [\"Apple TV\", \"iOS\", \"Mac\"].includes(osName || \"\")) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.brand = \"Apple\";\n            }\n            /**\n             * Chrome on Android passes the device type based on the keyword 'Mobile'\n             * If it is present the device should be a smartphone, otherwise it's a tablet\n             * See https://developer.chrome.com/multidevice/user-agent#chrome_for_android_user_agent\n             */\n            if (!((_e = result.device) === null || _e === void 0 ? void 0 : _e.type) && osFamily === \"Android\" && browser_1.default.getBrowserFamily(((_f = result.client) === null || _f === void 0 ? void 0 : _f.name) || \"\") === \"Chrome\") {\n                if (user_agent_1.userAgentParser(\"Chrome/[.0-9]* Mobile\", userAgent)) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"smartphone\";\n                }\n                else if (user_agent_1.userAgentParser(\"Chrome/[.0-9]* (?!Mobile)\", userAgent)) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"tablet\";\n                }\n            }\n            /**\n             * Some user agents simply contain the fragment 'Android; Tablet;' or 'Opera Tablet', so we assume those devices are tablets\n             */\n            if (!((_g = result.device) === null || _g === void 0 ? void 0 : _g.type) && this.hasAndroidTabletFragment(userAgent) || user_agent_1.userAgentParser(\"Opera Tablet\", userAgent)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"tablet\";\n            }\n            /**\n             * Some user agents simply contain the fragment 'Android; Mobile;', so we assume those devices are smartphones\n             */\n            if (!((_h = result.device) === null || _h === void 0 ? void 0 : _h.type) && this.hasAndroidMobileFragment(userAgent)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"smartphone\";\n            }\n            /**\n             * Android up to 3.0 was designed for smartphones only. But as 3.0, which was tablet only, was published\n             * too late, there were a bunch of tablets running with 2.x\n             * With 4.0 the two trees were merged and it is for smartphones and tablets\n             *\n             * So were are expecting that all devices running Android < 2 are smartphones\n             * Devices running Android 3.X are tablets. Device type of Android 2.X and 4.X+ are unknown\n             */\n            if (!((_j = result.device) === null || _j === void 0 ? void 0 : _j.type) && osName === \"Android\" && osVersion !== \"\") {\n                if (version_compare_1.versionCompare(osVersion, \"2.0\") === -1) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"smartphone\";\n                }\n                else if (version_compare_1.versionCompare(osVersion, \"3.0\") >= 0 && version_compare_1.versionCompare(osVersion, \"4.0\") === -1) {\n                    if (!result.device) {\n                        result.device = this.createDeviceObject();\n                    }\n                    result.device.type = \"tablet\";\n                }\n            }\n            /**\n             * All detected feature phones running android are more likely smartphones\n             */\n            if (result.device && ((_k = result.device) === null || _k === void 0 ? void 0 : _k.type) === \"feature phone\" && osFamily === \"Android\") {\n                result.device.type = \"smartphone\";\n            }\n            /**\n             * According to http://msdn.microsoft.com/en-us/library/ie/hh920767(v=vs.85).aspx\n             * Internet Explorer 10 introduces the \"Touch\" UA string token. If this token is present at the end of the\n             * UA string, the computer has touch capability, and is running Windows 8 (or later).\n             * This UA string will be transmitted on a touch-enabled system running Windows 8 (RT)\n             *\n             * As most touch enabled devices are tablets and only a smaller part are desktops/notebooks we assume that\n             * all Windows 8 touch devices are tablets.\n             */\n            if (!((_l = result.device) === null || _l === void 0 ? void 0 : _l.type)\n                && this.isToucheEnabled(userAgent)\n                && (osName === \"Windows RT\"\n                    || (osName === \"Windows\"\n                        && version_compare_1.versionCompare(osVersion, \"8.0\") >= 0))) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"tablet\";\n            }\n            /**\n             * All devices running Opera TV Store are assumed to be televisions\n             */\n            if (user_agent_1.userAgentParser(\"Opera TV Store\", userAgent)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"television\";\n            }\n            /**\n             * Devices running Kylo or Espital TV Browsers are assumed to be televisions\n             */\n            if (!((_m = result.device) === null || _m === void 0 ? void 0 : _m.type) && [\"Kylo\", \"Espial TV Browser\"].includes(((_o = result.client) === null || _o === void 0 ? void 0 : _o.name) || \"\")) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"television\";\n            }\n            // set device type to desktop for all devices running a desktop os that were not detected as an other device type\n            if (!((_p = result.device) === null || _p === void 0 ? void 0 : _p.type) && this.isDesktop(result, osFamily)) {\n                if (!result.device) {\n                    result.device = this.createDeviceObject();\n                }\n                result.device.type = \"desktop\";\n            }\n            return result;\n        };\n        this.hasAndroidMobileFragment = (userAgent) => {\n            return user_agent_1.userAgentParser(\"Android( [\\.0-9]+)?; Mobile;\", userAgent);\n        };\n        this.hasAndroidTabletFragment = (userAgent) => {\n            return user_agent_1.userAgentParser(\"Android( [\\.0-9]+)?; Tablet;\", userAgent);\n        };\n        this.isDesktop = (result, osFamily) => {\n            if (!result.os) {\n                return false;\n            }\n            // Check for browsers available for mobile devices only\n            if (this.usesMobileBrowser(result.client)) {\n                return false;\n            }\n            return operating_system_1.default.getDesktopOsArray().includes(osFamily);\n        };\n        this.usesMobileBrowser = (client) => {\n            var _a, _b;\n            if (!client)\n                return false;\n            return ((_a = client) === null || _a === void 0 ? void 0 : _a.type) === \"browser\" && browser_1.default.isMobileOnlyBrowser((_b = client) === null || _b === void 0 ? void 0 : _b.name);\n        };\n        this.isToucheEnabled = (userAgent) => {\n            return user_agent_1.userAgentParser(\"Touch\", userAgent);\n        };\n        this.createDeviceObject = () => ({\n            type: \"\",\n            brand: \"\",\n            model: \"\"\n        });\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.clientParser = new client_1.default(this.options);\n        this.deviceParser = new device_1.default();\n        this.operatingSystemParser = new operating_system_1.default(this.options);\n        this.vendorFragmentParser = new vendor_fragment_1.default();\n        this.botParser = new BotParser();\n    }\n}\nmodule.exports = DeviceDetector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst bots_json_1 = __importDefault(require(\"../../fixtures/regexes/bots.json\"));\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass BotParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            var _a, _b, _c, _d;\n            for (const bot of bots_json_1.default) {\n                const match = user_agent_1.userAgentParser(bot.regex, userAgent);\n                if (!match)\n                    continue;\n                return {\n                    name: bot.name,\n                    category: bot.category || \"\",\n                    url: bot.url || \"\",\n                    producer: {\n                        name: ((_b = (_a = bot) === null || _a === void 0 ? void 0 : _a.producer) === null || _b === void 0 ? void 0 : _b.name) || \"\",\n                        url: ((_d = (_c = bot) === null || _c === void 0 ? void 0 : _c.producer) === null || _d === void 0 ? void 0 : _d.url) || \"\"\n                    }\n                };\n            }\n            return null;\n        };\n    }\n}\nmodule.exports = BotParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst browsers_json_1 = __importDefault(require(\"../../fixtures/regexes/client/browsers.json\"));\nconst browser_engine_json_1 = __importDefault(require(\"../../fixtures/regexes/client/browser_engine.json\"));\nconst available_browsers_json_1 = __importDefault(require(\"./fixtures/available-browsers.json\"));\nconst browser_families_json_1 = __importDefault(require(\"./fixtures/browser-families.json\"));\nconst mobile_only_browsers_json_1 = __importDefault(require(\"./fixtures/mobile-only-browsers.json\"));\nclass BrowserParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\",\n                engine: \"\",\n                engineVersion: \"\"\n            };\n            for (const browser of browsers_json_1.default) {\n                const match = user_agent_1.userAgentParser(browser.regex, userAgent);\n                if (!match)\n                    continue;\n                const vrpVersion = variable_replacement_1.variableReplacement(browser.version, match);\n                const version = version_1.formatVersion(vrpVersion, this.options.versionTruncation);\n                const shortVersion = version && parseFloat(version_1.formatVersion(vrpVersion, 1)) || \"\";\n                if (browser.engine) {\n                    result.engine = browser.engine.default;\n                    if (browser.engine && browser.engine.versions && shortVersion) {\n                        const sortedEngineVersions = Object.entries(browser.engine.versions).sort((a, b) => {\n                            return parseFloat(a[0]) > parseFloat(b[0]) ? 1 : -1;\n                        });\n                        for (const [versionThreshold, engineByVersion] of sortedEngineVersions) {\n                            if (parseFloat(versionThreshold) <= shortVersion) {\n                                result.engine = engineByVersion || \"\";\n                            }\n                        }\n                    }\n                }\n                result.type = \"browser\";\n                result.name = variable_replacement_1.variableReplacement(browser.name, match);\n                result.version = version;\n                break;\n            }\n            if (!result.engine) {\n                for (const browserEngine of browser_engine_json_1.default) {\n                    const match = RegExp(browserEngine.regex, \"i\").exec(userAgent);\n                    if (!match)\n                        continue;\n                    result.engine = browserEngine.name;\n                    break;\n                }\n            }\n            result.engineVersion = version_1.formatVersion(version_1.parseBrowserEngineVersion(userAgent, result.engine), this.options.versionTruncation);\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = BrowserParser;\nBrowserParser.getBrowserShortName = (browserName) => {\n    for (const [shortName, name] of Object.entries(available_browsers_json_1.default)) {\n        if (name === browserName) {\n            return shortName;\n        }\n    }\n    return \"\";\n};\nBrowserParser.getBrowserFamily = (browserName) => {\n    const browserShortName = BrowserParser.getBrowserShortName(browserName);\n    for (const [browserFamily, browserLabels] of Object.entries(browser_families_json_1.default)) {\n        if (browserLabels.includes(browserShortName))\n            return browserFamily;\n    }\n    return \"\";\n};\nBrowserParser.isMobileOnlyBrowser = (browserName) => {\n    return mobile_only_browsers_json_1.default.includes(BrowserParser.getBrowserShortName(browserName));\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst feed_readers_json_1 = __importDefault(require(\"../../fixtures/regexes/client/feed_readers.json\"));\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass FeedReaderParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\",\n                url: \"\"\n            };\n            for (const feedReader of feed_readers_json_1.default) {\n                const match = user_agent_1.userAgentParser(feedReader.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"feed reader\";\n                result.name = variable_replacement_1.variableReplacement(feedReader.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(feedReader.version, match), this.options.versionTruncation);\n                result.url = feedReader.url;\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = FeedReaderParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst browser_1 = __importDefault(require(\"./browser\"));\nconst mobile_apps_1 = __importDefault(require(\"./mobile-apps\"));\nconst feed_readers_1 = __importDefault(require(\"./feed-readers\"));\nconst libraries_1 = __importDefault(require(\"./libraries\"));\nconst media_players_1 = __importDefault(require(\"./media-players\"));\nconst personal_information_managers_1 = __importDefault(require(\"./personal-information-managers\"));\nconst clientParsers = [\n    feed_readers_1.default,\n    mobile_apps_1.default,\n    media_players_1.default,\n    personal_information_managers_1.default,\n    browser_1.default,\n    libraries_1.default\n];\nclass ClientParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            for (const Parser of clientParsers) {\n                const parser = new Parser(this.options);\n                const client = parser.parse(userAgent);\n                if (client.type !== \"\")\n                    return client;\n            }\n            return null;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = ClientParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst libraries_json_1 = __importDefault(require(\"../../fixtures/regexes/client/libraries.json\"));\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass LibraryParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\",\n                url: \"\"\n            };\n            for (const library of libraries_json_1.default) {\n                const match = user_agent_1.userAgentParser(library.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"library\";\n                result.name = variable_replacement_1.variableReplacement(library.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(library.version, match), this.options.versionTruncation);\n                result.url = library.url || \"\";\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = LibraryParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst mediaplayers_json_1 = __importDefault(require(\"../../fixtures/regexes/client/mediaplayers.json\"));\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass MediaPlayerParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\"\n            };\n            for (const mediaPlayer of mediaplayers_json_1.default) {\n                const match = user_agent_1.userAgentParser(mediaPlayer.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"media player\";\n                result.name = variable_replacement_1.variableReplacement(mediaPlayer.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(mediaPlayer.version, match), this.options.versionTruncation);\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = MediaPlayerParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst mobile_apps_json_1 = __importDefault(require(\"../../fixtures/regexes/client/mobile_apps.json\"));\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass MobileAppParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\"\n            };\n            for (const mobileApp of mobile_apps_json_1.default) {\n                const match = user_agent_1.userAgentParser(mobileApp.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"mobile app\";\n                result.name = variable_replacement_1.variableReplacement(mobileApp.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(mobileApp.version, match), this.options.versionTruncation);\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = MobileAppParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst pim_json_1 = __importDefault(require(\"../../fixtures/regexes/client/pim.json\"));\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass PersonalInformationManagerParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\"\n            };\n            for (const personalInformationManager of pim_json_1.default) {\n                const match = user_agent_1.userAgentParser(personalInformationManager.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"personal information manager\";\n                result.name = variable_replacement_1.variableReplacement(personalInformationManager.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(personalInformationManager.version, match), this.options.versionTruncation);\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = PersonalInformationManagerParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cameras_json_1 = __importDefault(require(\"../../fixtures/regexes/device/cameras.json\"));\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass CameraParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, camera] of Object.entries(cameras_json_1.default)) {\n                const match = user_agent_1.userAgentParser(camera.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"camera\";\n                result.brand = brand;\n                if (camera.model) {\n                    result.model = variable_replacement_1.variableReplacement(camera.model, match).trim();\n                }\n                else if (camera.models) {\n                    for (const model of camera.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = CameraParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst car_browsers_json_1 = __importDefault(require(\"../../fixtures/regexes/device/car_browsers.json\"));\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass CarParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, car] of Object.entries(car_browsers_json_1.default)) {\n                const match = user_agent_1.userAgentParser(car.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"car\";\n                result.brand = brand;\n                for (const model of car.models) {\n                    const match = user_agent_1.userAgentParser(model.regex, userAgent);\n                    if (!match)\n                        continue;\n                    result.model = variable_replacement_1.variableReplacement(model.model, match).trim();\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = CarParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst consoles_json_1 = __importDefault(require(\"../../fixtures/regexes/device/consoles.json\"));\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass ConsoleParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, gameConsole] of Object.entries(consoles_json_1.default)) {\n                const match = user_agent_1.userAgentParser(gameConsole.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = gameConsole.device;\n                result.brand = brand;\n                if (gameConsole.model) {\n                    result.model = variable_replacement_1.variableReplacement(gameConsole.model, match).trim();\n                }\n                else if (gameConsole.models) {\n                    for (const model of gameConsole.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = ConsoleParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cameras_1 = __importDefault(require(\"./cameras\"));\nconst mobiles_1 = __importDefault(require(\"./mobiles\"));\nconst televisions_1 = __importDefault(require(\"./televisions\"));\nconst cars_1 = __importDefault(require(\"./cars\"));\nconst consoles_1 = __importDefault(require(\"./consoles\"));\nconst portable_media_players_1 = __importDefault(require(\"./portable-media-players\"));\nconst deviceParsers = [\n    consoles_1.default,\n    cars_1.default,\n    cameras_1.default,\n    televisions_1.default,\n    portable_media_players_1.default,\n    mobiles_1.default\n];\nclass ClientParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            for (const Parser of deviceParsers) {\n                const parser = new Parser();\n                const device = parser.parse(userAgent);\n                if (device.type !== \"\") {\n                    return device;\n                }\n            }\n            return null;\n        };\n    }\n}\nexports.default = ClientParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst mobiles_json_1 = __importDefault(require(\"../../fixtures/regexes/device/mobiles.json\"));\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst model_1 = require(\"../../utils/model\");\nclass MobileParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, mobile] of Object.entries(mobiles_json_1.default)) {\n                const match = user_agent_1.userAgentParser(mobile.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = mobile.device || \"\";\n                result.brand = brand;\n                if (mobile.model) {\n                    result.model = model_1.buildModel(variable_replacement_1.variableReplacement(mobile.model, match)).trim();\n                }\n                else if (mobile.models) {\n                    for (const model of mobile.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = model_1.buildModel(variable_replacement_1.variableReplacement(model.model, modelMatch)).trim();\n                        if (model.device) {\n                            result.type = model.device;\n                        }\n                        if (\"brand\" in model) {\n                            result.brand = model.brand || \"\";\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n            // Sanitize device type\n            if (result.type === \"tv\") {\n                result.type = \"television\";\n            }\n            if (result.type === \"car browser\") {\n                result.type = \"car\";\n            }\n            // Sanitize device brand\n            if (result.brand === \"Unknown\") {\n                result.brand = \"\";\n            }\n            return result;\n        };\n    }\n}\nexports.default = MobileParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst portable_media_player_json_1 = __importDefault(require(\"../../fixtures/regexes/device/portable_media_player.json\"));\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass PortableMediaPlayersParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, portableMediaPlayer] of Object.entries(portable_media_player_json_1.default)) {\n                const match = user_agent_1.userAgentParser(portableMediaPlayer.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = portableMediaPlayer.device;\n                result.brand = brand;\n                if (portableMediaPlayer.model) {\n                    result.model = variable_replacement_1.variableReplacement(portableMediaPlayer.model, match).trim();\n                }\n                else if (portableMediaPlayer.models) {\n                    for (const model of portableMediaPlayer.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = PortableMediaPlayersParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst televisions_json_1 = __importDefault(require(\"../../fixtures/regexes/device/televisions.json\"));\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst model_1 = require(\"../../utils/model\");\nclass TelevisionParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            if (!this.isHbbTv(userAgent))\n                return result;\n            result.type = \"television\";\n            for (const [brand, television] of Object.entries(televisions_json_1.default)) {\n                const match = user_agent_1.userAgentParser(television.regex, userAgent);\n                if (!match)\n                    continue;\n                result.brand = brand;\n                if (television.model) {\n                    result.model = model_1.buildModel(variable_replacement_1.variableReplacement(television.model, match)).trim();\n                }\n                else if (television.models) {\n                    for (const model of television.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = model_1.buildModel(variable_replacement_1.variableReplacement(model.model, modelMatch)).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n        this.isHbbTv = (userAgent) => {\n            return user_agent_1.userAgentParser(\"HbbTV\\/([1-9]{1}(?:\\.[0-9]{1}){1,2})\", userAgent);\n        };\n    }\n}\nexports.default = TelevisionParser;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst oss_json_1 = __importDefault(require(\"../../fixtures/regexes/oss.json\"));\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst desktopOsArray = [\"AmigaOS\", \"IBM\", \"GNU/Linux\", \"Mac\", \"Unix\", \"Windows\", \"BeOS\", \"Chrome OS\"];\nconst shortOsNames = { \"AIX\": \"AIX\", \"AND\": \"Android\", \"AMG\": \"AmigaOS\", \"ATV\": \"Apple TV\", \"ARL\": \"Arch Linux\", \"BTR\": \"BackTrack\", \"SBA\": \"Bada\", \"BEO\": \"BeOS\", \"BLB\": \"BlackBerry OS\", \"QNX\": \"BlackBerry Tablet OS\", \"BMP\": \"Brew\", \"CES\": \"CentOS\", \"COS\": \"Chrome OS\", \"CYN\": \"CyanogenMod\", \"DEB\": \"Debian\", \"DFB\": \"DragonFly\", \"FED\": \"Fedora\", \"FOS\": \"Firefox OS\", \"FIR\": \"Fire OS\", \"BSD\": \"FreeBSD\", \"GNT\": \"Gentoo\", \"GTV\": \"Google TV\", \"HPX\": \"HP-UX\", \"HAI\": \"Haiku OS\", \"IRI\": \"IRIX\", \"INF\": \"Inferno\", \"KOS\": \"KaiOS\", \"KNO\": \"Knoppix\", \"KBT\": \"Kubuntu\", \"LIN\": \"GNU\\/Linux\", \"LBT\": \"Lubuntu\", \"VLN\": \"VectorLinux\", \"MAC\": \"Mac\", \"MAE\": \"Maemo\", \"MDR\": \"Mandriva\", \"SMG\": \"MeeGo\", \"MCD\": \"MocorDroid\", \"MIN\": \"Mint\", \"MLD\": \"MildWild\", \"MOR\": \"MorphOS\", \"NBS\": \"NetBSD\", \"MTK\": \"MTK \\/ Nucleus\", \"WII\": \"Nintendo\", \"NDS\": \"Nintendo Mobile\", \"OS2\": \"OS\\/2\", \"T64\": \"OSF1\", \"OBS\": \"OpenBSD\", \"ORD\": \"Ordissimo\", \"PSP\": \"PlayStation Portable\", \"PS3\": \"PlayStation\", \"RHT\": \"Red Hat\", \"ROS\": \"RISC OS\", \"REM\": \"Remix OS\", \"RZD\": \"RazoDroiD\", \"SAB\": \"Sabayon\", \"SSE\": \"SUSE\", \"SAF\": \"Sailfish OS\", \"SLW\": \"Slackware\", \"SOS\": \"Solaris\", \"SYL\": \"Syllable\", \"SYM\": \"Symbian\", \"SYS\": \"Symbian OS\", \"S40\": \"Symbian OS Series 40\", \"S60\": \"Symbian OS Series 60\", \"SY3\": \"Symbian^3\", \"TDX\": \"ThreadX\", \"TIZ\": \"Tizen\", \"UBT\": \"Ubuntu\", \"WTV\": \"WebTV\", \"WIN\": \"Windows\", \"WCE\": \"Windows CE\", \"WIO\": \"Windows IoT\", \"WMO\": \"Windows Mobile\", \"WPH\": \"Windows Phone\", \"WRT\": \"Windows RT\", \"XBX\": \"Xbox\", \"XBT\": \"Xubuntu\", \"YNS\": \"YunOs\", \"IOS\": \"iOS\", \"POS\": \"palmOS\", \"WOS\": \"webOS\" };\nconst osFamilies = { \"Android\": [\"AND\", \"CYN\", \"FIR\", \"REM\", \"RZD\", \"MLD\", \"MCD\", \"YNS\"], \"AmigaOS\": [\"AMG\", \"MOR\"], \"Apple TV\": [\"ATV\"], \"BlackBerry\": [\"BLB\", \"QNX\"], \"Brew\": [\"BMP\"], \"BeOS\": [\"BEO\", \"HAI\"], \"Chrome OS\": [\"COS\"], \"Firefox OS\": [\"FOS\", \"KOS\"], \"Gaming Console\": [\"WII\", \"PS3\"], \"Google TV\": [\"GTV\"], \"IBM\": [\"OS2\"], \"iOS\": [\"IOS\"], \"RISC OS\": [\"ROS\"], \"GNU\\/Linux\": [\"LIN\", \"ARL\", \"DEB\", \"KNO\", \"MIN\", \"UBT\", \"KBT\", \"XBT\", \"LBT\", \"FED\", \"RHT\", \"VLN\", \"MDR\", \"GNT\", \"SAB\", \"SLW\", \"SSE\", \"CES\", \"BTR\", \"SAF\", \"ORD\"], \"Mac\": [\"MAC\"], \"Mobile Gaming Console\": [\"PSP\", \"NDS\", \"XBX\"], \"Real-time OS\": [\"MTK\", \"TDX\"], \"Other Mobile\": [\"WOS\", \"POS\", \"SBA\", \"TIZ\", \"SMG\", \"MAE\"], \"Symbian\": [\"SYM\", \"SYS\", \"SY3\", \"S60\", \"S40\"], \"Unix\": [\"SOS\", \"AIX\", \"HPX\", \"BSD\", \"NBS\", \"OBS\", \"DFB\", \"SYL\", \"IRI\", \"T64\", \"INF\"], \"WebTV\": [\"WTV\"], \"Windows\": [\"WIN\"], \"Windows Mobile\": [\"WPH\", \"WMO\", \"WCE\", \"WRT\", \"WIO\"] };\nclass OperatingSystemParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                name: \"\",\n                version: \"\",\n                platform: this.parsePlatform(userAgent)\n            };\n            for (const operatingSystem of oss_json_1.default) {\n                const match = user_agent_1.userAgentParser(operatingSystem.regex, userAgent);\n                if (!match)\n                    continue;\n                result.name = variable_replacement_1.variableReplacement(operatingSystem.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(operatingSystem.version, match), this.options.versionTruncation);\n                if (result.name === \"lubuntu\") {\n                    result.name = \"Lubuntu\";\n                }\n                if (result.name === \"debian\") {\n                    result.name = \"Debian\";\n                }\n                if (result.name === \"YunOS\") {\n                    result.name = \"YunOs\";\n                }\n                return result;\n            }\n            return null;\n        };\n        this.parsePlatform = (userAgent) => {\n            if (user_agent_1.userAgentParser(\"arm\", userAgent)) {\n                return \"ARM\";\n            }\n            if (user_agent_1.userAgentParser(\"WOW64|x64|win64|amd64|x86_64\", userAgent)) {\n                return \"x64\";\n            }\n            if (user_agent_1.userAgentParser(\"i[0-9]86|i86pc\", userAgent)) {\n                return \"x86\";\n            }\n            return \"\";\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = OperatingSystemParser;\nOperatingSystemParser.getDesktopOsArray = () => desktopOsArray;\nOperatingSystemParser.getOsFamily = (osName) => {\n    const osShortName = OperatingSystemParser.getOsShortName(osName);\n    for (const [osFamily, shortNames] of Object.entries(osFamilies)) {\n        if (shortNames.includes(osShortName)) {\n            return osFamily;\n        }\n    }\n    return \"\";\n};\nOperatingSystemParser.getOsShortName = (osName) => {\n    for (const [shortName, name] of Object.entries(shortOsNames)) {\n        if (name === osName)\n            return shortName;\n    }\n    return \"\";\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vendorfragments_json_1 = __importDefault(require(\"../../fixtures/regexes/vendorfragments.json\"));\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass VendorFragmentParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            for (const [brand, vendorFragment] of Object.entries(vendorfragments_json_1.default)) {\n                for (const regex of vendorFragment) {\n                    const match = user_agent_1.userAgentParser(regex, userAgent);\n                    if (!match)\n                        continue;\n                    return brand;\n                }\n            }\n            return \"\";\n        };\n    }\n}\nexports.default = VendorFragmentParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memoryCache = () => {\n    const memoryCacheBucket = {};\n    const set = (key, value) => {\n        memoryCacheBucket[key] = value;\n    };\n    const get = (key) => {\n        if (memoryCacheBucket.hasOwnProperty(key)) {\n            return memoryCacheBucket[key];\n        }\n    };\n    return {\n        set,\n        get\n    };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildModel = (model) => {\n    model = model.replace(/_/g, \" \");\n    model = model.replace(RegExp(\" TD$\", \"i\"), \"\");\n    if (model === \"Build\")\n        return \"\";\n    return model;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trim = (str, char) => {\n    return str.replace(new RegExp(\"^[\" + char + \"]+|[\" + char + \"]+$\", \"g\"), \"\");\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst memory_cache_1 = require(\"./memory-cache\");\nconst cache = memory_cache_1.memoryCache();\nconst getRegexInstance = (rawRegex) => {\n    const cachedRegexInstance = cache.get(rawRegex);\n    if (cachedRegexInstance)\n        return cachedRegexInstance.value;\n    const regexInstance = RegExp(`(?:^|[^A-Z0-9-_]|[^A-Z0-9-]_|sprd-)(?:${rawRegex})`, \"i\");\n    cache.set(rawRegex, {\n        value: regexInstance\n    });\n    return regexInstance;\n};\nexports.userAgentParser = (rawRegex, userAgent) => {\n    // TODO: find out why it fails in some browsers\n    try {\n        const regexInstance = getRegexInstance(rawRegex);\n        const match = regexInstance.exec(userAgent);\n        return match ? match.slice(1) : null;\n    }\n    catch (_a) {\n        return null;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.variableReplacement = (template, variables) => {\n    const regex = new RegExp(`\\\\$\\\\d`, \"g\");\n    if (template === null)\n        return \"\";\n    return template.replace(regex, (match) => {\n        const index = parseInt(match.substr(1), 10);\n        const variable = variables[index - 1];\n        return variable || \"\";\n    });\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.versionCompare = (v1, v2, operator) => {\n    //      discuss at: http://locutus.io/php/version_compare/\n    //      original by: Philippe Jausions (http://pear.php.net/user/jausions)\n    //      original by: Aidan Lister (http://aidanlister.com/)\n    //      reimplemented by: Kankrelune (http://www.webfaktory.info/)\n    //      improved by: Brett Zamir (http://brett-zamir.me)\n    //      improved by: Scott Baker\n    //      improved by: Theriault (https://github.com/Theriault)\n    //      example 1: version_compare('8.2.5rc', '8.2.5a')\n    //      returns 1: 1\n    //      example 2: version_compare('8.2.50', '8.2.52', '<')\n    //      returns 2: true\n    //      example 3: version_compare('5.3.0-dev', '5.3.0')\n    //      returns 3: -1\n    //      example 4: version_compare('4.1.0.52','4.01.0.51')\n    //      returns 4: 1\n    // Important: compare must be initialized at 0.\n    let i;\n    let x;\n    let compare = 0;\n    // vm maps textual PHP versions to negatives so they're less than 0.\n    // PHP currently defines these as CASE-SENSITIVE. It is important to\n    // leave these as negatives so that they can come before numerical versions\n    // and as if no letters were there to begin with.\n    // (1alpha is < 1 and < 1.1 but > 1dev1)\n    // If a non-numerical value can't be mapped to this table, it receives\n    // -7 as its value.\n    const vm = {\n        \"dev\": -6,\n        \"alpha\": -5,\n        \"a\": -5,\n        \"beta\": -4,\n        \"b\": -4,\n        \"RC\": -3,\n        \"rc\": -3,\n        \"#\": -2,\n        \"p\": 1,\n        \"pl\": 1\n    };\n    // This function will be called to prepare each version argument.\n    // It replaces every _, -, and + with a dot.\n    // It surrounds any nonsequence of numbers/dots with dots.\n    // It replaces sequences of dots with a single dot.\n    //    version_compare('4..0', '4.0') === 0\n    // Important: A string of 0 length needs to be converted into a value\n    // even less than an unexisting value in vm (-7), hence [-8].\n    // It's also important to not strip spaces because of this.\n    //   version_compare('', ' ') === 1\n    const prepVersion = (v) => {\n        v = (\"\" + v).replace(/[_\\-+]/g, \".\");\n        v = v.replace(/([^.\\d]+)/g, \".$1.\").replace(/\\.{2,}/g, \".\");\n        return (!v.length ? [-8] : v.split(\".\"));\n    };\n    // This converts a version component to a number.\n    // Empty component becomes 0.\n    // Non-numerical component becomes a negative number.\n    // Numerical component becomes itself as an integer.\n    const numVersion = (v) => {\n        return !v ? 0 : (isNaN(v) ? vm[v] || -7 : parseInt(v, 10));\n    };\n    v1 = prepVersion(v1);\n    v2 = prepVersion(v2);\n    x = Math.max(v1.length, v2.length);\n    for (i = 0; i < x; i++) {\n        if (v1[i] === v2[i]) {\n            continue;\n        }\n        v1[i] = numVersion(v1[i]);\n        v2[i] = numVersion(v2[i]);\n        if (v1[i] < v2[i]) {\n            compare = -1;\n            break;\n        }\n        else if (v1[i] > v2[i]) {\n            compare = 1;\n            break;\n        }\n    }\n    if (!operator) {\n        return compare;\n    }\n    // Important: operator is CASE-SENSITIVE.\n    // \"No operator\" seems to be treated as \"<.\"\n    // Any other values seem to make the function return null.\n    switch (operator) {\n        case \">\":\n        case \"gt\":\n            return (compare > 0);\n        case \">=\":\n        case \"ge\":\n            return (compare >= 0);\n        case \"<=\":\n        case \"le\":\n            return (compare <= 0);\n        case \"===\":\n        case \"=\":\n        case \"eq\":\n            return (compare === 0);\n        case \"<>\":\n        case \"!==\":\n        case \"ne\":\n            return (compare !== 0);\n        case \"\":\n        case \"<\":\n        case \"lt\":\n            return (compare < 0);\n        default:\n            return null;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst trim_1 = require(\"./trim\");\nexports.formatVersion = (version, versionTruncation) => {\n    if (version === undefined)\n        return \"\";\n    const versionString = trim_1.trim(version, \". \").replace(new RegExp(\"_\", \"g\"), \".\");\n    const versionParts = versionString.split(\".\");\n    // Return if the string is not only digits once we removed the dots\n    if (!/^\\d+$/.test(versionParts.join(\"\"))) {\n        return versionString;\n    }\n    if (versionTruncation !== 0) {\n        if (Number.isInteger(parseFloat(versionString))) {\n            return parseInt(versionString, 10).toFixed(1);\n        }\n    }\n    if (versionParts.length > 1) {\n        if (versionTruncation !== null) {\n            return versionParts.slice(0, versionTruncation + 1).join(\".\");\n        }\n    }\n    return versionString;\n};\nexports.parseBrowserEngineVersion = (userAgent, engine) => {\n    if (!engine)\n        return \"\";\n    const regex = new RegExp(`${engine}\\\\s*\\\\/?\\\\s*((?:(?=\\\\d+\\\\.\\\\d)\\\\d+[.\\\\d]*|\\\\d{1,7}(?=(?:\\\\D|$))))`, \"i\");\n    const match = userAgent.match(regex);\n    if (!match)\n        return \"\";\n    return match.pop();\n};\n","'use strict';\n\nmodule.exports = (object, predicate) => {\n\tconst result = {};\n\tconst isArray = Array.isArray(predicate);\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (isArray ? predicate.includes(key) : predicate(key, value, object)) {\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\n\treturn result;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE_phaser__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/TDLib.js\");\n"],"sourceRoot":""}