{"version":3,"sources":["webpack://TDLib/webpack/universalModuleDefinition","webpack://TDLib/webpack/bootstrap","webpack://TDLib/(webpack)/buildin/global.js","webpack://TDLib/./src/TDLib.js","webpack://TDLib/./src/actions/Action.js","webpack://TDLib/./src/actions/Idle.js","webpack://TDLib/./src/actions/index.js","webpack://TDLib/./src/boot/DebugHeader.js","webpack://TDLib/./src/boot/Game.js","webpack://TDLib/./src/boot/Settings.js","webpack://TDLib/./src/components/ActionComponent.js","webpack://TDLib/./src/components/Component.js","webpack://TDLib/./src/components/index.js","webpack://TDLib/./src/const.js","webpack://TDLib/./src/rooms/Room.js","webpack://TDLib/./src/rooms/Utils.js","webpack://TDLib/./src/rooms/index.js","webpack://TDLib/./src/sprites/Sprite.js","webpack://TDLib/./src/sprites/behaviours/index.js","webpack://TDLib/./src/sprites/characters/Character.js","webpack://TDLib/./src/sprites/characters/index.js","webpack://TDLib/./src/sprites/characters/npc-characters/NPCharacter.js","webpack://TDLib/./src/sprites/characters/players/Player.js","webpack://TDLib/./src/sprites/index.js","webpack://TDLib/./src/sprites/inventory-objects/index.js","webpack://TDLib/./src/sprites/world-objects/index.js","webpack://TDLib/./src/utils/Utils.js","webpack://TDLib/./src/utils/index.js"],"names":["TDLib","Actions","require","Components","Game","Rooms","Sprites","Utils","Phaser","Objects","Extend","module","exports","global","Action","invoker","actor","config","name","constructor","target","_queue","isPaused","actions","Array","isArray","forEach","action","push","length","abort","start","finish","shift","remove","pause","resume","update","startCallback","finishCallback","updateCallback","resumeCallback","pauseCallback","Idle","arguments","addActions","BaseAction","body","setVelocity","facing","LEFT","anims","play","RIGHT","CONST","Settings","DebugHeader","game","bannerBackgroundColor","bannerTextColor","hidePhaser","renderType","audioConfig","audio","deviceAudio","device","audioType","webAudio","disableWebAudio","noAudio","audioData","browser","ie","c","args","lastColor","color","concat","gameTitle","gameVersion","VERSION","PHASER_VERSION","DEVICE","gameURL","console","log","apply","_setScreenConfig","_setPhysicsConfig","_setPlugins","_setBoot","_setHeaderProps","_finalizeConfig","GAME","SCREEN_PROPS","getScreenProps","width","calculatedWidth","height","calculatedHeight","zoom","calculatedZoom","autoResize","backgroundColor","pixelArt","physics","default","arcade","debug","gravity","y","x","plugins","key","plugin","RoomManager","mapping","CursorManager","scene","UpdatePlugin","LightSourceManager","LayerManager","ActionManager","Boot","banner","type","WEBGL","maxLights","parent","disableContextMenu","TILE_SIZE","ROOM_HEIGHT_IN_TILE","INVENTORY_WIDTH_IN_TILES_MOBILE","INVENTORY_WIDTH_IN_TILES_DESKTOP","INVENTORY_HEIGHT_IN_TILES_MOBILE","INVENTORY_HEIGHT_IN_TILES_DESKTOP","ROOM_FRAME_IN_TILES_DESKTOP","ROOM_FRAME_IN_TILES_MOBILE","ActionComponent","defaultAction","mode","DEFAULT_MODE","newAction","QUEUE_MODE","PAUSE_MODE","unshift","Component","gameObject","Room","sceneKey","rawAssets","assets","raw","array","averageLightsContribute","cursors","layers","map","player","rooms","_scrapeAssets","obj","load","path","nPath","bPath","image","scrapeComplexObjKey","params","findFileNameFromPath","setName","lights","enable","bringToTop","_setCameraViewport","_createRoom","_createSprites","_applyBorderMasks","setLayersDepth","cameras","main","setBounds","wallsLayer","startFollow","setRoundPixels","world","setPosition","setSize","make","tilemap","tilemapTiledJSON","tileWidth","tileHeight","backgroundLayer","createDynamicLayer","addTilesetImage","tiles","background","walls","wallsMaskLayer","_this","objects","layer","element","eval","borderMasksLayer","create","setScrollFactor","setOrigin","_updateMasksByLightDiffusion","children","list","lightSources","calculateAverageLightsContribute","setAlpha","Scene","searchKey","callback","i","prop","nameFirstCharachterPosition","lastIndexOf","nameLastCharachterPosition","filename","slice","Sprite","room","texture","hasBody","behaviourType","INERT","pixelPerfect","observeText","DEFAULT_OBSERVE_TEXT","examineOrInteractText","DEFAULT_EXAMINE_OR_INTERACT_TEXT","blockExamineText","noLightObserveText","DEFAULT_NO_LIGHT_OBSERVE_TEXT","noLightExamineOrInteractText","DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT","examineOrInteractOffsetX","examineOrInteractThresholdRadius","minLightLevelToExamineOrInteract","DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT","minLightLevelToObserve","DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE","Math","floor","random","add","existing","updates","setCollideWorldBounds","setGravityY","warn","value","offsetX","offsetY","input","hitArea","Physics","Arcade","Behaviours","Character","INTERACTIVE","alphaTolerance","Characters","NPCharacter","Player","isBlocked","on","pointer","pointerDown","InventoryObjects","WorldObjects","returnValue","availHeight","window","innerHeight","availWidth","innerWidth","screen","ceil"],"mappings":"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","file":"the-darkest-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TDLib\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TDLib\"] = factory();\n\telse\n\t\troot[\"TDLib\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/TDLib.js\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import CONST from './const';\n/**\n * @namespace TDLib\n */\n\nvar TDLib = {\n  Actions: require('./actions'),\n  Components: require('./components'),\n  Game: require('./boot/Game'),\n  Rooms: require('./rooms'),\n  Sprites: require('./sprites'),\n  Utils: require('./utils')\n};\n\nTDLib = Phaser.Utils.Objects.Extend(false, TDLib, CONST);\n\nmodule.exports = TDLib;\nglobal.TDLib = TDLib;\n","/**\n * Class representing a TDLAction.\n * @memberof TDLib.Components.Actions\n * @since 1.0.0\n */\nexport default class Action {\n  /**\n   * Start a new TDLAction.\n   * @param {TDLib.Components.ActionComponent|TDLib.Components.Actions.TDLAction} invoker - The invoker of the action.\n   * @param {TDLSprite} actor - The actor who performs the action.\n   * @param {Object} config - The config object for the action.\n   * @param {Object} config.target - The target of the action.\n   * @param {number} config.target.x - The x of the target of the action.\n   */\n  constructor(invoker, actor, config = {}) {\n    /**\n     * The invoker of the action.\n     * @type {TDLib.Components.ActionComponent|TDLib.Components.Actions.TDLAction}\n     * @since 1.0.0\n     */\n    this.invoker = invoker;\n\n    /**\n     * The name of the action.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.name = this.constructor.name;\n\n    /**\n     * The actor who performs the action.\n     * @type {TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.actor = actor;\n\n    /**\n     * The target of the action.\n     * @type {Object|TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.target = config.target;\n\n    /**\n     * The config object for the action.\n     * @type {Object}\n     * @since 1.0.0\n     */\n    this.config = config;\n\n    /**\n     * The queue of actions.\n     * @type {Array}\n     * @private\n     * @since 1.0.0\n     */\n    this._queue = [];\n\n    /**\n     * Tells if the action has been paused.\n     * @type {boolean}\n     * @since 1.0.0\n     */\n    this.isPaused = false;\n  }\n\n  /**\n   * Add one or more new actions to the queue.\n   * @param {TDLib.Components.Actions.TDLAction|TDLib.Components.Actions.TDLAction[]|TDLib.Components.Actions.TDLAction.BaseAction|TDLib.Components.Actions.TDLAction.BaseAction[]} actions - The new actions to add.\n   * @since 1.0.0\n   */\n  addActions(actions) {\n    if (Array.isArray(actions)) {\n      actions.forEach(action => {\n        this._queue.push(action);\n      });\n    } else this._queue.push(actions);\n  }\n\n  /**\n   * The blank action to create new composed and complex actions.\n   * @typedef {TDLib.Components.Actions.TDLAction.BaseAction}\n   *\n   * @property {TDLib.Components.ActionComponent|TDLib.Components.Actions.TDLAction} invoker - The invoker of the action.\n   * @property {Function} startCallback - The callback to execute at the beginning of the action.\n   * @property {Function} [finishCallback] - The callback to execute at the end of the action.\n   * @property {Function} [updateCallback]  - The callback to execute at every update loop.\n   * @property {Function} [resumeCallback=startCallback] - The callback to execute when the action is paused.\n   * @property {Function} [pauseCallback=finishCallback]  - The callback to execute when the action is resumed.\n   * @since 1.0.0\n   */\n  static get BaseAction() {\n    return class BaseAction {\n      constructor(invoker, startCallback, finishCallback = () => { }, updateCallback = () => { }, resumeCallback = startCallback, pauseCallback = finishCallback) {\n        this.invoker = invoker;\n\n        this.startCallback = startCallback;\n        this.finishCallback = finishCallback;\n        this.updateCallback = updateCallback;\n        this.resumeCallback = resumeCallback;\n        this.pauseCallback = pauseCallback;\n\n        this.isPaused = false;\n      }\n\n      start() {\n        this.startCallback();\n      }\n\n      finish() {\n        this.finishCallback();\n        this.invoker.remove();\n      }\n\n      abort() {\n        this.finishCallback();\n      }\n\n      resume() {\n        this.isPaused = false;\n        this.resumeCallback();\n      }\n\n      pause() {\n        this.pauseCallback();\n        this.isPaused = true;\n      }\n\n      update() {\n        this.updateCallback();\n      }\n    };\n  }\n\n  /**\n   * Abort an uncompleted action.\n   * @private\n   * @since 1.0.0\n   */\n  abort() {\n    if (this._queue.length > 0) this._queue[0].abort();\n  }\n\n  /**\n   * Start an action.\n   * @private\n   * @since 1.0.0\n   */\n  start() {\n    if (this._queue.length > 0) this._queue[0].start();\n  }\n\n  /**\n   * Finish a completed action.\n   * @private\n   * @since 1.0.0\n   */\n  finish() {\n    if (this._queue.length > 0) this._queue[0].finish();\n  }\n\n  /**\n   * Remove a completed action from the queue.\n   * @private\n   * @since 1.0.0\n   */\n  remove() {\n    if (this._queue.length > 0) this._queue.shift();\n\n    if (this._queue.length <= 0) this.invoker.remove();\n    else this._queue[0].start();\n  }\n\n  /**\n   * Pause an action.\n   * @private\n   * @since 1.0.0\n   */\n  pause() {\n    if (this._queue.length > 0) {\n      this._queue[0].pause();\n      this.isPaused = true;\n    }\n  }\n\n  /**\n   * Resume a paused action.\n   * @private\n   * @since 1.0.0\n   */\n  resume() {\n    if (this._queue.length > 0) {\n      this.isPaused = false;\n      this._queue[0].resume();\n    }\n  }\n\n  /**\n   * Update the currently performed action.\n   * @private\n   * @since 1.0.0\n   */\n  update() {\n    if (this._queue.length > 0) this._queue[0].update();\n  }\n}\n","import Action from './Action';\nimport CONST from '../const';\n\n/**\n * Class representing the idle action.\n * @extends TDLib.Components.Actions.Action\n * @memberof TDLib.Components.Actions\n */\nexport default class Idle extends Action {\n  /**\n   * Start a new idle action.\n   * @param {Components.ActionComponent|Components.Actions.TDLAction} invoker - The invoker of the action.\n   * @param {TDLSprite} actor - The actor who performs the action.\n   * @param {Object} config - The config object for the action.\n   * @param {Object} config.target - The target of the action.\n   * @param {number} config.target.x - The x of the target of the action.\n   */\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      new Action.BaseAction(\n        this,\n        () => {\n          this.actor.body.setVelocity(0);\n          switch (this.actor.facing) {\n\n            case CONST.LEFT: {\n              this.actor.anims.play('idle');\n              // this.actor.anims.play('idleLeft');\n            }\n              break;\n\n            case CONST.RIGHT: {\n              this.actor.anims.play('idle');\n              // this.actor.anims.play('idleRight');\n            }\n              break;\n\n            // possibili altri casi di facing (es girato di spalle o da davanti)\n          }\n        }\n      )\n    );\n  }\n}\n","const Actions = {\n  Action: require('./Action'),\n  Idle: require('./Idle')\n};\n\nmodule.exports = Actions;\n","var CONST = require('../const');\nvar Settings = require('./Settings');\n\n/**\n * Called automatically by Phaser.Game and responsible for creating the console.log debug header.\n *\n * You can customize or disable the header via the Game Config object.\n *\n * @function Phaser.Boot.DebugHeader\n * @since 3.0.0\n *\n * @param {Phaser.Game} game - The Phaser.Game instance which will output this debug header.\n */\nvar DebugHeader = function (game) {\n  let config = game.config;\n\n  config.bannerBackgroundColor = '#0002e6';\n  config.bannerTextColor = '#ffffff';\n  config.hidePhaser = false;\n\n  let renderType = 'WebGL';\n\n  if (config.renderType !== 2) {\n    renderType = 'NULL';\n  }\n\n  let audioConfig = config.audio;\n  let deviceAudio = game.device.audio;\n\n  let audioType;\n\n  if (deviceAudio.webAudio && !(audioConfig && audioConfig.disableWebAudio)) {\n    audioType = 'Web Audio';\n  } else if ((audioConfig && audioConfig.noAudio) || (!deviceAudio.webAudio && !deviceAudio.audioData)) {\n    audioType = 'No Audio';\n  } else {\n    audioType = 'HTML5 Audio';\n  }\n\n  if (!game.device.browser.ie) {\n    let c = '';\n    let args = [c];\n\n    if (Array.isArray(config.bannerBackgroundColor)) {\n      let lastColor;\n\n      config.bannerBackgroundColor.forEach(function (color) {\n        c = c.concat('%c ');\n\n        args.push('background: ' + color);\n\n        lastColor = color;\n\n      });\n\n      //  inject the text color\n      args[args.length - 1] = 'color: ' + config.bannerTextColor + '; background: ' + lastColor;\n    } else {\n      c = c.concat('%c ');\n\n      args.push('color: ' + config.bannerTextColor + '; background: ' + config.bannerBackgroundColor);\n    }\n\n    //  URL link background color (always white)\n    args.push('background: #fff');\n\n    if (config.gameTitle) {\n      c = c.concat(config.gameTitle);\n\n      if (config.gameVersion) {\n        c = c.concat(' v' + config.gameVersion);\n      }\n\n      if (!config.hidePhaser) {\n        c = c.concat(' / ');\n      }\n    }\n\n    if (!config.hidePhaser) {\n      c = c.concat('TDLib v' + CONST.VERSION + ' / Phaser v' + CONST.PHASER_VERSION);\n      c = c.concat(' (' + renderType + ' | ' + audioType + ' | ' + Settings.DEVICE + ')');\n    }\n\n    c = c.concat(' %c ' + config.gameURL);\n\n    //  Inject the new string back into the args array\n    args[0] = c;\n\n    console.log.apply(console, args);\n  }\n};\n\nmodule.exports = DebugHeader;\n","import Settings from './Settings';\nimport DebugHeader from './DebugHeader';\nimport Utils from '../utils';\n\nexport default class Game {\n  constructor(config) {\n    this.config = config;\n    this._setScreenConfig();\n    this._setPhysicsConfig();\n    this._setPlugins();\n    this._setBoot();\n    this._setHeaderProps();\n    this._finalizeConfig();\n\n    // Aggiungere il device e la funzione per determinarlo\n\n    Settings.GAME = new Phaser.Game(this.config);\n\n    DebugHeader(Settings.GAME);\n    return Settings.GAME;\n  }\n\n  _setScreenConfig() {\n    Settings.SCREEN_PROPS = Utils.getScreenProps();\n\n    this.config.width = Settings.SCREEN_PROPS.calculatedWidth;\n    this.config.height = Settings.SCREEN_PROPS.calculatedHeight;\n    this.config.zoom = Settings.SCREEN_PROPS.calculatedZoom;\n\n    this.config.autoResize = false;\n    this.config.backgroundColor = '#000000';\n    this.config.pixelArt = true;\n  }\n\n  _setPhysicsConfig() {\n    this.config.physics = {\n      default: 'arcade',\n      arcade: {\n        debug: false,\n        gravity: { y: 0, x: 0 }\n      }\n    };\n  }\n\n  _setPlugins() {\n    this.config.plugins = {\n      global: [\n        { key: 'RoomManager', plugin: RoomManager, start: false, mapping: 'rooms' },\n        { key: 'CursorManager', plugin: CursorManager, start: false, mapping: 'cursors' }\n      ],\n      scene: [\n        { key: 'UpdatePlugin', plugin: UpdatePlugin, mapping: 'updates' },\n        { key: 'LightSourceManager', plugin: LightSourceManager, mapping: 'lightSources' },\n        { key: 'LayerManager', plugin: LayerManager, mapping: 'layers' },\n        { key: 'ActionManager', plugin: ActionManager, mapping: 'actions' }\n      ]\n    };\n  }\n\n  _setBoot() {\n    this.config.scene = [Boot];\n  }\n\n  _setHeaderProps() {\n    this.config.banner = false;\n  }\n\n  _finalizeConfig() {\n    this.config.type = Phaser.WEBGL;\n    this.config.maxLights = 20;\n    this.config.parent = 'game';\n    this.config.disableContextMenu = true;\n  }\n}\n","var Settings = {\n  GAME: '',\n  TILE_SIZE: 48,\n  ROOM_HEIGHT_IN_TILE: 6,\n  INVENTORY_WIDTH_IN_TILES_MOBILE: 1.25,\n  INVENTORY_WIDTH_IN_TILES_DESKTOP: 0,\n  INVENTORY_HEIGHT_IN_TILES_MOBILE: 0,\n  INVENTORY_HEIGHT_IN_TILES_DESKTOP: 1,\n  ROOM_FRAME_IN_TILES_DESKTOP: 0.5,\n  ROOM_FRAME_IN_TILES_MOBILE: 0.25,\n  SCREEN_PROPS: {},\n  DEVICE: 'Desktop'\n};\n\nmodule.exports = Settings;\n","import Component from './Component';\nimport Actions from '../actions';\n\n/**\n * The actions namespace.\n * @namespace TDLib.Components.Actions\n * @since 1.0.0\n */\n\n/**\n * Class representing a component responsible of every TDLAction preformed.\n * @extends TDLib.Components.TDLComponent\n * @memberof TDLib.Components\n * @since 1.0.0\n */\nexport default class ActionComponent extends Component {\n  /**\n   * Create an ActionComponent.\n   * @param {TDLib.Sprites.TDLSprite} actor - The performer of the action.\n   */\n  constructor(actor) {\n    super(actor);\n\n    /**\n     * The performer of the action.\n     * @type {TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.actor = actor;\n\n    /**\n     * The default action to be played.\n     * @type {TDLib.Components.Actions.TDLAction}\n     * @since 1.0.0\n     */\n    this.defaultAction = new Actions.Idle(this, this.actor);\n\n    /**\n     * The queue of actions.\n     * @type {Array}\n     * @private\n     * @since 1.0.0\n     */\n    this._queue = [this.defaultAction];\n    this._queue[0].start();\n  }\n\n  /**\n   * The queue is emptied and the new action is immediately performed.\n   * @since 1.0.0\n   */\n  static get DEFAULT_MODE() {\n    return 0;\n  }\n\n  /**\n   * The new action is added to the queue.\n   * @since 1.0.0\n   */\n  static get QUEUE_MODE() {\n    return 1;\n  }\n\n  /**\n   * The currently performed action is paused and the new action is immediately performed. Then the paused action is resumed.\n   * @since 1.0.0\n   */\n  static get PAUSE_MODE() {\n    return 2;\n  }\n\n  /**\n   * Start a new action or add that to the queue.\n   * @param {TDLib.Components.Actions.TDLAction} action - The action to add or execute.\n   * @param {Object} config - The config object for the action.\n   * @param {Object} config.target - The target of the action.\n   * @param {number} config.target.x - The x of the target of the action.\n   * @param {number} [mode=ActionComponent.DEFAULT_MODE] - The mode to execute the action: ActionComponent.DEFAULT_MODE, ActionComponent.QUEUE_MODE or ActionComponent.PAUSE_MODE.\n   * @since 1.0.0\n   */\n  add(Action, config, mode = ActionComponent.DEFAULT_MODE) {\n\n    let newAction = new Action(this, this.actor, config);\n\n    switch (mode) {\n      case ActionComponent.DEFAULT_MODE: {\n        this._queue[0].abort();\n        this._queue = [];\n        this._queue.push(newAction);\n        this._queue[0].start();\n      };\n        break;\n\n      case ActionComponent.QUEUE_MODE: {\n        this._queue.push(newAction);\n      };\n        break;\n\n      case ActionComponent.PAUSE_MODE: {\n        this._queue[0].pause();\n        this._queue.unshift(newAction);\n        this._queue[0].start();\n      };\n        break;\n    }\n\n    return newAction;\n  }\n\n  /**\n   * Remove a completed action from the queue.\n   * @private\n   * @since 1.0.0\n   */\n  remove() {\n    this._queue.shift();\n    if (this._queue.length <= 0) this._queue.push(this.defaultAction);\n    if (this._queue[0].isPaused) this._queue[0].resume();\n    else this._queue[0].start();\n  }\n\n  /**\n   * Update the currently performed action.\n   * @private\n   * @since 1.0.0\n   */\n  update() {\n    if (this._queue.length <= 0) this._queue.push(this.defaultAction);\n    else if (this._queue.length > 1 && this._queue[0].name === 'Idle') {\n      this._queue.shift();\n      if (this._queue[0].isPaused) this._queue[0].resume();\n      else this._queue[0].start();\n    }\n\n    this._queue[0].update();\n  }\n}\n","/**\n * The namespace of components.\n * @namespace TDLib.Components\n */\n\n/**\n * Class representing a generic TDLComponent. A TDLComponent extends the members and methods of a TDLSprite which uses it.\n * @memberof TDLib.Components\n */\nexport default class Component {\n  /**\n   * Creates a new TDLComponent.\n   * @param {TDLib.Sprites.TDLSprite} gameObject - The TDLSprite which owns the component.\n   */\n  constructor(gameObject) {\n\n    /**\n     * The name of the component.\n     * @type {string}\n     */\n    this.name = this.constructor.name;\n\n    /**\n     * The TDLSprite which owns the component.\n     * @type {TDLib.Sprites.TDLSprite}\n     */\n    this.gameObject = gameObject;\n  }\n}\n","const Components = {\n  Component: require('./Component'),\n  ActionComponent: require('./ActionComponent')\n};\n\nmodule.exports = Components;\n","const CONST = {\n  VERSION: '1.0.0',\n  PHASER_VERSION: '3.15.1',\n  LEFT: '_left',\n  RIGHT: '_right'\n};\n\nmodule.exports = CONST;\n","import Settings from '../boot/Settings';\nimport Utils from './Utils';\n\n/**\n * The rooms namespace.\n * @namespace TDLib.Rooms\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLRoom.\n * @extends Phaser.Scene\n * @memberof TDLib.Rooms\n * @since 1.0.0\n */\nexport default class Room extends Phaser.Scene {\n  /**\n   * Create a new TDLRoom.\n   * @param {string} sceneKey - The unique key to identify the room.\n   * @param {Object} rawAssets - The raw object of assets needed by the room. (Ripensarlo ?)\n   */\n  constructor(sceneKey, rawAssets) {\n    super(sceneKey);\n\n    /**\n       * This object contains an array with all the assets needed by the room.\n       * @type {Object}\n       * @since 1.0.0\n       */\n    this.assets = { raw: rawAssets, array: [] };\n\n    /**\n       * The average contribute of light sources to the room.\n       * @type {number}\n       * @since 1.0.0\n       */\n    this.averageLightsContribute;\n\n    /**\n       * The Settings cursor manager.\n       * @type {TDLib.Plugins.SettingsPlugins.CursorManager}\n       * @since 1.0.0\n       */\n    this.cursors;\n\n    /**\n       * The layer manager of the room.\n       * @type {TDLib.Plugins.RoomPlugins.LayerManager}\n       * @since 1.0.0\n       */\n    this.layers;\n\n    /**\n       * The tilemap of the room.\n       * @type {Phaser.Tilemaps.Tilemap}\n       * @since 1.0.0\n       */\n    this.map;\n\n    /**\n       * The name of the room.\n       * @type {string}\n       * @since 1.0.0\n       */\n    this.name = this.constructor.name;\n\n    /**\n       * The instance of the TDLCharacter designated as player for the room.\n       * @type {TDLib.Sprites.Characters.TDLCharacter}\n       * @since 1.0.0\n       */\n    this.player;\n\n    /**\n       * The Settings room manager.\n       * @type {TDLib.Plugins.SettingsPlugins.RoomManager}\n       * @since 1.0.0\n       */\n    this.rooms;\n  }\n\n  /**\n   * The preload function is executed once and load all the assets needed by the room.\n   * @since 1.0.0\n   */\n  preload() {\n    this._scrapeAssets();\n    this.assets.array.forEach(obj => {\n      if ('nPath' in obj) {\n        this.load[obj.type](obj.key, [obj.path, obj.nPath]);\n      } else if ('bPath' in obj) {\n        this.load[obj.type](obj.key, obj.path);\n        this.load[obj.type](obj.key + '_b', obj.bPath);\n      } else {\n        this.load[obj.type](obj.key, obj.path);\n      }\n    });\n\n    // Loading Border Camera Masks\n    this.load.image('top-border-mask-camera', 'assets/Masks/topMaskCamera.png');\n    this.load.image('bottom-border-mask-camera', 'assets/Masks/bottomMaskCamera.png');\n    this.load.image('left-border-mask-camera', 'assets/Masks/leftMaskCamera.png');\n    this.load.image('right-border-mask-camera', 'assets/Masks/rightMaskCamera.png');\n  }\n\n  /**\n   * Scrape the object of raw assets.\n   * @private\n   * @since 1.0.0\n   */\n  _scrapeAssets() {\n    for (let type in this.assets.raw) {\n      Utils.scrapeComplexObjKey(\n        this.assets.raw[type],\n        { type: type },\n        'path',\n        (obj, params) => {\n          obj['type'] = params.type;\n          obj['key'] = Utils.findFileNameFromPath(obj.path);\n          this.assets.array.push(obj);\n        }\n      );\n    }\n  }\n\n  /**\n   * The create function is executed once, when the room is initialized.\n   * @param {TDLib.Sprites.Characters.TDLCharacter} player - The instance of the player for the room.\n   * @since 1.0.0\n   */\n  create(player) {\n    this.player = player.setName('player');\n    this.lights.enable(); // Boot Phaser's LightManager\n    // this.scene.bringToTop(CursorManager.CURSOR_SCENE_KEY); // Add the cursor to the Room\n    this.scene.bringToTop('CursorScene');\n\n    this._setCameraViewport();\n    this._createRoom();\n    this._createSprites();\n    this._applyBorderMasks();\n    this.layers.setLayersDepth();\n\n    // Camera bounds, anche il wallsLayer\n    this.cameras.main.setBounds(0, 0, this.layers.wallsLayer.width, this.layers.wallsLayer.height);\n    this.cameras.main.startFollow(this.player);\n    this.cameras.main.setRoundPixels(true);\n    // Physics Bounds, sarà solo lo spazio di gioco (togliamo il wall layer tutto attorno!!)\n    this.physics.world.setBounds(\n      Settings.TILE_SIZE, Settings.TILE_SIZE, this.layers.wallsLayer.width - 2 * Settings.TILE_SIZE,\n      this.layers.wallsLayer.height - 2 * Settings.TILE_SIZE\n    );\n  }\n\n  /**\n   * Set the correct camera viewport.\n   * @private\n   * @since 1.0.0\n   */\n  _setCameraViewport() {\n    if (Settings.DEVICE === 'MOBILE') {\n      this.cameras.main.setPosition(\n        (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE,\n        (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE) * Settings.TILE_SIZE\n      );\n      this.cameras.main.setSize(\n        Settings.SCREEN_PROPS.calculatedWidth - 2 * (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE,\n        Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE\n      );\n    } else {\n      this.cameras.main.setPosition(\n        Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE,\n        Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE\n      );\n      this.cameras.main.setSize(\n        Settings.SCREEN_PROPS.calculatedWidth - 2 * Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE,\n        Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE\n      );\n    }\n  }\n\n  /**\n   * Create room tilemap and layers.\n   * @private\n   * @since 1.0.0\n   */\n  _createRoom() {\n    this.map = this.make.tilemap({\n      key: Utils.findFileNameFromPath(this.assets.raw.tilemapTiledJSON.path),\n      tileWidth: Settings.TILE_SIZE,\n      tileHeight: Settings.TILE_SIZE\n    });\n\n    this.layers.backgroundLayer = this.map.createDynamicLayer(\n      'backgroundLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.background.path)),\n      0, 0\n    );// .setPipeline('Light2D');\n    this.layers.wallsLayer = this.map.createDynamicLayer(\n      'wallsLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.walls.path)),\n      0, 0\n    );\n    this.layers.wallsMaskLayer = this.map.createDynamicLayer(\n      'wallsMaskLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.walls.bPath)),\n      0, 0\n    );\n  }\n\n  /**\n   * Create all the objects present in Tiled JSON map.\n   * @private\n   * @since 1.0.0\n   */\n  _createSprites() {\n    let _this = this;\n\n    this.map.objects.forEach(layer => {\n      layer.objects.forEach(element => {\n        _this;\n        this[element.name] = eval('new ' + element.type + '(_this,' + (element.x + element.width / 2) + ', ' + (element.y - element.height / 2) + ');');\n        this[element.name].setName(element.name);\n      });\n    });\n  }\n\n  /**\n   * Apply the four border masks to the camera.\n   * @private\n   * @since 1.0.0\n   */\n  _applyBorderMasks() {\n    this.layers.borderMasksLayer.create(0,\n      0,\n      'top-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(0,\n      0,\n      'left-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      this.cameras.main.width - Settings.TILE_SIZE,\n      0,\n      'right-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      0,\n      this.cameras.main.height - Settings.TILE_SIZE,\n      'bottom-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n  }\n\n  /**\n   * The update function is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n    this._updateMasksByLightDiffusion();\n\n    // Updates all Actions in  every ActionComponent (if present)\n    this.children.list.forEach(element => {\n      if ('actions' in element) {\n        element.actions.update();\n      }\n    });\n  }\n\n  /**\n   * Update the border masks alpha according to the average diffused light in the room.\n   * @private\n   * @since 1.0.0\n   */\n  _updateMasksByLightDiffusion() {\n    this.averageLightsContribute = this.lightSources.calculateAverageLightsContribute();\n    this.layers.wallsMaskLayer.setAlpha(1 - this.averageLightsContribute);\n  }\n}\n\n","const Utils = {\n  scrapeComplexObjKey: (obj, params, searchKey, callback) => {\n    if (Array.isArray(obj)) {\n      for (let i = 0; i < obj.length; i++) {\n        Utils.scrapeComplexObjKey(obj[i], params, searchKey, callback);\n      }\n    } else if (obj !== null && typeof obj === 'object') {\n      if (searchKey in obj) {\n        callback(obj, params);\n      } else {\n        for (let prop in obj) {\n          Utils.scrapeComplexObjKey(obj[prop], params, searchKey, callback);\n        }\n      }\n    }\n  },\n  findFileNameFromPath: (path) => {\n    let nameFirstCharachterPosition = path.lastIndexOf('/') + 1;\n    let nameLastCharachterPosition = path.lastIndexOf('.');\n\n    if (nameFirstCharachterPosition === -1) nameFirstCharachterPosition = 0;\n    if (nameLastCharachterPosition === -1) return -1;\n    let filename = path.slice(nameFirstCharachterPosition, nameLastCharachterPosition);\n\n    return filename;\n  }\n};\n\nmodule.exports = Utils;\n","const Rooms = {\n  Room: require('./Room')\n};\n\nmodule.exports = Rooms;\n","import Behaviour from './behaviours';\n// import BehaviourComponent from '../components';\n\n/**\n * The Darkest Lib.\n * @namespace TDLib\n * @since 1.0.0\n */\n\n/**\n * The actions namespace.\n * @namespace TDLib.Sprites\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLSprite.\n * @extends Phaser.Physics.Arcade.Sprite\n * @memberof TDLib.Sprites\n * @since 1.0.0\n */\nexport default class Sprite extends Phaser.Physics.Arcade.Sprite {\n  /**\n   * Create a TDLSprite.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [layer=null] - The key of the layer which will contain the sprite.\n   * @param {boolean} [hasBody=true] - Specify if the sprite has physics.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   * @param {boolean} [precisePosition=false] - Specify if to examine or interact with the sprite it's required to be precisely at the examineOrInteractPoint. (Probably not needed)\n   */\n  constructor(\n    room,\n    x, y,\n    texture,\n    layer = null,\n    hasBody = true,\n    behaviourType = Behaviour.INERT,\n    pixelPerfect = null,\n    observeText = Behaviour.DEFAULT_OBSERVE_TEXT,\n    examineOrInteractText = Behaviour.DEFAULT_EXAMINE_OR_INTERACT_TEXT,\n    blockExamineText = null,\n    noLightObserveText = Behaviour.DEFAULT_NO_LIGHT_OBSERVE_TEXT,\n    noLightExamineOrInteractText = Behaviour.DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT,\n    examineOrInteractOffsetX = 0,\n    examineOrInteractThresholdRadius = 0,\n    minLightLevelToExamineOrInteract = Behaviour.DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT,\n    minLightLevelToObserve = Behaviour.DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE\n\n  ) {\n    super(room, x, y, texture);\n\n    /**\n     * The room where the sprite is created.\n     * @type {TDLib.Rooms.TDLRoom}\n     * @since 1.0.0\n     */\n    this.room = room;\n\n    /**\n     * The name of the sprite, to map it in the room. Usually it's obtained by Tiled.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.name;\n\n    /**\n     * The unique key of the sprite, composed by the sprite type and a 4 digits random integer number.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.key = this.constructor.name + (Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000);\n\n    /**\n     * The type of the sprite.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.type = this.constructor.name;\n\n    /**\n     * The sprite behaviour component instance.\n     * @type {TDLib.Components.SpriteBehaviourComponent}\n     * @since 1.0.0\n     */\n    // this.behaviour = new BehaviourComponent(this, behaviourType, pixelPerfect);\n\n    /**\n     * The text which appears when observing the sprite.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.observeText = observeText;\n\n    /**\n * The text which appears when examine or interact with the sprite.\n     * @type {string}\n     * @since 1.0.0\n */\n    this.examineOrInteractText = examineOrInteractText;\n\n    /**\n     * If not null it's the blocking text which appears the first time the sprite is examined.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.blockExamineText = blockExamineText;\n\n    /**\n     * The text which appears when observing the sprite when the diffused light is not sufficient.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.noLightObserveText = noLightObserveText;\n\n    /**\n * The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.noLightExamineOrInteractText = noLightExamineOrInteractText;\n\n    /**\n     * The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n     */\n    this.examineOrInteractOffsetX = examineOrInteractOffsetX;\n\n    /**\n     * The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n         */\n    this.examineOrInteractThresholdRadius = examineOrInteractThresholdRadius;\n\n    /**\n     * The minimum value of diffused light to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n         */\n    this.minLightLevelToExamineOrInteract = minLightLevelToExamineOrInteract;\n\n    /**\n * The minimum value of diffused light to observe the sprite.\n     * @type {number}\n     * @since 1.0.0\n     */\n    this.minLightLevelToObserve = minLightLevelToObserve;\n\n    this.room.add.existing(this);\n    this.room.updates.add(this);\n    if (hasBody) {\n      this.room.physics.add.existing(this);\n      this.setCollideWorldBounds(true);\n      this.setGravityY(10000);\n    }\n\n    if (layer != null) {\n      if (layer in this.room.layers) {\n        this.room.layers[layer].add(this);\n        this.room.layers.setLayersDepth();\n      } else console.warn('ALERT: layer not found for object', this);\n    }\n\n    this.create();\n  }\n\n  /**\n   * The create function is executed once, immediately after the initialization of the sprite.\n   * @since 1.0.0\n   */\n  create() {\n    console.log('Created:', this.key, '- Type:', this.type, '- Behaviour:'); // , this.behaviour.type);\n  }\n\n  /**\n   * The update is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n\n  }\n\n  /**\n   * Set the name property of a sprite.\n   * @param {string} value - The name which is used to map a sprite in the room.\n   * @return {TDLib.Sprites.TDLSprite}\n   * @since 1.0.0\n   */\n  setName(value) {\n    this.name = value;\n    return this;\n  }\n\n  // Poichè è stata aggiunta la pixel perfect collision, valutare l'utilità di questa funzione!\n  setHitAreaSize(width = this.width, height = this.height, offsetX = 0, offsetY = 0) {\n    this.input.hitArea.setSize(width, height);\n    this.input.hitArea.setPosition(((this.width - width) / 2) + offsetX, ((this.height - height) / 2) + offsetY);\n  }\n}\n","const Behaviours = {\n\n};\n\nmodule.exports = Behaviours;\n","import Sprite from '../Sprite';\nimport Behaviour from '../behaviours';\nimport Components from '../../components';\nimport CONST from '../../const';\n\n/**\n * The characters namespace.\n * @namespace TDLib.Sprites.Characters\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLCharacter.\n * @extends TDLib.Sprites.TDLSprite\n * @memberof TDLib.Sprites.Characters\n * @since 1.0.0\n */\nexport default class Character extends Sprite {\n  /**\n   * Create a new TDLCharacter.\n   * @param {Room} room - The room where the character is created.\n   * @param {number} x - The x coordinate of the character.\n   * @param {number} y - The y coordinate of the character.\n   * @param {string} texture - The character's graphic.\n   * @param {string} layer - The character's layer.\n   */\n  constructor(room, x, y, texture, layer) {\n    super(...arguments, true, Behaviour.INTERACTIVE, { alphaTolerance: 1 });\n\n    /**\n     * The ActionComponent for this character.\n     * @type {Components.ActionComponent}\n     * @since 1.0.0\n     */\n    this.actions = new Components.ActionComponent(this);\n\n    /**\n     * The facing of the character.\n     * @type {TDLCharacter.FACING}\n     * @since 1.0.0\n     */\n    this.facing = CONST.RIGHT;\n  }\n\n  create() {\n    super.create();\n    // this.setPipeline('Light2D');\n  }\n}\n","const Characters = {\n  NPCharacter: require('./npc-characters/NPCharacter'),\n  Player: require('./players/Player')\n};\n\nmodule.exports = Characters;\n","import Character from '../Character';\n\nexport default class NPCharacter extends Character {\n  constructor(room, x, y, texture, layer) {\n    super(room, x, y, texture, layer);\n  }\n}\n","import Character from '../Character';\n\nexport default class Player extends Character {\n  constructor(room, x, y, texture) {\n    super(room, x, y, texture, 'playerLayer');\n\n    this.isBlocked = false;\n  }\n\n  create() {\n    super.create();\n\n    this.room.input.on('pointerdown', function (pointer) {\n      this.room.cursors.pointerDown(this);\n    }, this);\n  }\n}\n","const Sprites = {\n  Behaviours: require('./behaviours'),\n  Characters: require('./characters'),\n  InventoryObjects: require('./inventory-objects'),\n  WorldObjects: require('./world-objects'),\n  Sprite: require('./Sprite')\n};\n\nmodule.exports = Sprites;\n","const InventoryObjects = {\n\n};\n\nmodule.exports = InventoryObjects;\n","const WorldObjects = {\n\n};\n\nmodule.exports = WorldObjects;\n","import Settings from '../boot/Settings';\n\nconst getScreenProps = () => {\n  var returnValue = {};\n\n  // cz : ah = 1 : mh\n  if (Settings.DEVICE === 'MOBILE') {\n    returnValue.availHeight = window.innerHeight;\n    returnValue.availWidth = window.innerWidth;\n    returnValue.calculatedZoom = Math.floor(returnValue.availHeight / ((Settings.ROOM_HEIGHT_IN_TILE + Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE + Settings.ROOM_FRAME_IN_TILES_MOBILE * 2) * Settings.TILE_SIZE) * 100) / 100;\n  } else {\n    returnValue.availHeight = screen.height;\n    returnValue.availWidth = screen.width;\n    returnValue.calculatedZoom = Math.floor(returnValue.availHeight / ((Settings.ROOM_HEIGHT_IN_TILE + Settings.INVENTORY_HEIGHT_IN_TILES_DESKTOP + Settings.ROOM_FRAME_IN_TILES_DESKTOP * 2) * Settings.TILE_SIZE) * 100) / 100;\n  }\n\n  console.log('ZOOM: ' + returnValue.calculatedZoom);\n\n  // Sono le dimensioni riaggiustate rispetto allo zoom scelto\n  // ch : ah = 1 : cz\n  returnValue.calculatedHeight = Math.ceil(returnValue.availHeight / returnValue.calculatedZoom);\n  returnValue.calculatedWidth = Math.ceil(returnValue.availWidth / returnValue.calculatedZoom);\n\n  console.log('AVAIL-H: ' + returnValue.availHeight + '\\nCALC-H: ' + returnValue.calculatedHeight);\n  console.log('AVAIL-W: ' + returnValue.availWidth + '\\nCALC-W: ' + returnValue.calculatedWidth);\n\n  return returnValue;\n};\n\nmodule.exports = getScreenProps;\n","const Utils = {\n  getScreenProps: require('./Utils')\n};\n\nmodule.exports = Utils;\n"],"sourceRoot":""}