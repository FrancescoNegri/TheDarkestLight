{"version":3,"sources":["webpack://TDLib/webpack/universalModuleDefinition","webpack://TDLib/webpack/bootstrap","webpack://TDLib/(webpack)/buildin/global.js","webpack://TDLib/./src/TDLib.js","webpack://TDLib/./src/boot/DebugHeader.js","webpack://TDLib/./src/boot/Game.js","webpack://TDLib/./src/boot/Settings.js","webpack://TDLib/./src/components/ActionComponent.js","webpack://TDLib/./src/components/BehaviourComponent.js","webpack://TDLib/./src/components/Component.js","webpack://TDLib/./src/components/EffectComponent.js","webpack://TDLib/./src/components/index.js","webpack://TDLib/./src/const.js","webpack://TDLib/./src/managers/Manager.js","webpack://TDLib/./src/managers/index.js","webpack://TDLib/./src/managers/layers/LayerManager.js","webpack://TDLib/./src/managers/layers/Settings.js","webpack://TDLib/./src/managers/light-sources/LightSourceManager.js","webpack://TDLib/./src/managers/updates/UpdateManager.js","webpack://TDLib/./src/rooms/Room.js","webpack://TDLib/./src/rooms/Utils.js","webpack://TDLib/./src/rooms/index.js","webpack://TDLib/./src/sprites/Sprite.js","webpack://TDLib/./src/sprites/actions/Action.js","webpack://TDLib/./src/sprites/actions/examine/Examine.js","webpack://TDLib/./src/sprites/actions/face-to/FaceTo.js","webpack://TDLib/./src/sprites/actions/face-to/Settings.js","webpack://TDLib/./src/sprites/actions/idle/Idle.js","webpack://TDLib/./src/sprites/actions/index.js","webpack://TDLib/./src/sprites/actions/interact/Interact.js","webpack://TDLib/./src/sprites/actions/observe/Observe.js","webpack://TDLib/./src/sprites/actions/run-to/RunTo.js","webpack://TDLib/./src/sprites/actions/run-to/Settings.js","webpack://TDLib/./src/sprites/actions/walk-to/Settings.js","webpack://TDLib/./src/sprites/actions/walk-to/WalkTo.js","webpack://TDLib/./src/sprites/behaviours/Behaviour.js","webpack://TDLib/./src/sprites/behaviours/const.js","webpack://TDLib/./src/sprites/behaviours/examinable/Examinable.js","webpack://TDLib/./src/sprites/behaviours/index.js","webpack://TDLib/./src/sprites/behaviours/interactive/Interactive.js","webpack://TDLib/./src/sprites/behaviours/inventory/Inventory.js","webpack://TDLib/./src/sprites/behaviours/observable/Observable.js","webpack://TDLib/./src/sprites/behaviours/observable/Settings.js","webpack://TDLib/./src/sprites/characters/Character.js","webpack://TDLib/./src/sprites/characters/index.js","webpack://TDLib/./src/sprites/characters/npc-characters/NPCharacter.js","webpack://TDLib/./src/sprites/characters/players/Player.js","webpack://TDLib/./src/sprites/effects/Effect.js","webpack://TDLib/./src/sprites/effects/index.js","webpack://TDLib/./src/sprites/effects/light-effects/HardFlickering.js","webpack://TDLib/./src/sprites/effects/light-effects/HardFlickeringAndTrembling.js","webpack://TDLib/./src/sprites/effects/light-effects/LightEffect.js","webpack://TDLib/./src/sprites/effects/light-effects/RadiusFlickering.js","webpack://TDLib/./src/sprites/effects/light-effects/SoftFlickering.js","webpack://TDLib/./src/sprites/effects/light-effects/SoftFlickeringAndTrembling.js","webpack://TDLib/./src/sprites/effects/light-effects/Trembling.js","webpack://TDLib/./src/sprites/effects/light-effects/index.js","webpack://TDLib/./src/sprites/index.js","webpack://TDLib/./src/sprites/inventory-items/InventoryItem.js","webpack://TDLib/./src/sprites/inventory-items/index.js","webpack://TDLib/./src/sprites/world-items/WorldItem.js","webpack://TDLib/./src/sprites/world-items/index.js","webpack://TDLib/./src/sprites/world-items/light-sources/LightSource.js","webpack://TDLib/./src/sprites/world-items/light-sources/index.js","webpack://TDLib/./src/sprites/world-items/room-furnitures/RoomFurniture.js","webpack://TDLib/./src/sprites/world-items/room-furnitures/index.js","webpack://TDLib/./src/sprites/world-items/wall-furnitures/WallFurniture.js","webpack://TDLib/./src/sprites/world-items/wall-furnitures/index.js","webpack://TDLib/./src/systems/cursors/CursorSystem.js","webpack://TDLib/./src/systems/index.js","webpack://TDLib/./src/systems/rooms/RoomSystem.js","webpack://TDLib/./src/utils/Utils.js","webpack://TDLib/./src/utils/index.js"],"names":["TDLib","Components","require","Game","Managers","Rooms","Sprites","Systems","Utils","Phaser","Objects","Extend","module","exports","global","CONST","Settings","DebugHeader","game","config","bannerBackgroundColor","bannerTextColor","hidePhaser","renderType","audioConfig","audio","deviceAudio","device","audioType","webAudio","disableWebAudio","noAudio","audioData","browser","ie","c","args","Array","isArray","lastColor","forEach","color","concat","push","length","gameTitle","gameVersion","VERSION","PHASER_VERSION","DEVICE","gameURL","console","log","apply","_setScreenConfig","_setPhysicsConfig","_setPlugins","_setBoot","_setHeaderProps","_finalizeConfig","GAME","SCREEN_PROPS","getScreenProps","width","calculatedWidth","height","calculatedHeight","zoom","calculatedZoom","autoResize","backgroundColor","pixelArt","physics","default","arcade","debug","gravity","y","x","plugins","key","plugin","RoomSystem","start","mapping","CursorSystem","scene","UpdateManager","LightSourceManager","LayerManager","Boot","banner","type","WEBGL","maxLights","parent","disableContextMenu","TILE_SIZE","ROOM_HEIGHT_IN_TILE","INVENTORY_WIDTH_IN_TILES_MOBILE","INVENTORY_WIDTH_IN_TILES_DESKTOP","INVENTORY_HEIGHT_IN_TILES_MOBILE","INVENTORY_HEIGHT_IN_TILES_DESKTOP","ROOM_FRAME_IN_TILES_DESKTOP","ROOM_FRAME_IN_TILES_MOBILE","ActionComponent","actor","defaultAction","Idle","_queue","Action","mode","DEFAULT_MODE","newAction","abort","QUEUE_MODE","PAUSE_MODE","pause","unshift","shift","isPaused","resume","name","update","BehaviourComponent","gameObject","pixelPerfect","player","room","_addBehaviours","EXAMINABLE","INTERACTIVE","observe","Observable","examine","Examinable","interact","Interactive","Component","constructor","EffectComponent","previousEffects","currentEffect","duration","stop","LightEffects","play","timer","time","addEvent","delay","callback","callbackScope","repeat","remove","LEFT","RIGHT","Manager","pluginManager","Plugins","ScenePlugin","layerSize","strartingDepth","startingDepth","backgroundLayer","add","group","rearDoorsLayer","wallFurnitureLayer","roomFurnitureLayer","sideDoorsLayer","npcLayer","playerLayer","cielingObjectsLayer","frontDoorsLayer","wallsLayer","wallsMaskLayer","overallDarknessLayer","borderMasksLayer","i","setDepth","graphicLights","diffusedLights","lightSources","source","getChildren","lightSource","setPipeline","target","singleLightContributeAccumulator","light","isOn","singleLightContribute","diffusedLight","intensity","Math","abs","offset","effects","contributeFactor","floor","singleLightIntensityAccumulator","averageLightsContribute","layers","events","systems","gameObjects","Structs","Set","on","_sceneUpdate","_sceneShutdown","once","_sceneDestroy","delta","iterateLocal","clear","off","_scenePostUpdate","obj","set","objs","delete","Room","sceneKey","rawAssets","assets","raw","array","cursors","map","rooms","_scrapeAssets","load","path","nPath","bPath","image","scrapeComplexObjKey","params","findFileNameFromPath","setName","lights","enable","bringToTop","_setCameraViewport","_createRoom","_createSprites","_applyBorderMasks","setLayersDepth","cameras","main","setBounds","startFollow","setRoundPixels","world","setPosition","setSize","make","tilemap","tilemapTiledJSON","tileWidth","tileHeight","createDynamicLayer","addTilesetImage","tiles","background","walls","_this","objects","layer","element","eval","create","setScrollFactor","setOrigin","_updateMasksByLightDiffusion","children","list","actions","calculateAverageLightsContribute","setAlpha","Scene","searchKey","prop","nameFirstCharachterPosition","lastIndexOf","nameLastCharachterPosition","filename","slice","Sprite","texture","hasBody","behaviourType","INERT","observeText","DEFAULT_OBSERVE_TEXT","examineOrInteractText","DEFAULT_EXAMINE_OR_INTERACT_TEXT","blockExamineText","noLightObserveText","DEFAULT_NO_LIGHT_OBSERVE_TEXT","noLightExamineOrInteractText","DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT","examineOrInteractOffsetX","examineOrInteractThresholdRadius","minLightLevelToExamineOrInteract","DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT","minLightLevelToObserve","DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE","random","behaviour","existing","updates","setCollideWorldBounds","setGravityY","warn","value","offsetX","offsetY","input","hitArea","Physics","Arcade","invoker","action","finish","startCallback","finishCallback","updateCallback","resumeCallback","pauseCallback","Examine","arguments","addActions","getAction","FaceTo","BaseAction","MICRO_MOVEMENT_RADIUS","facing","setFlipX","body","setVelocity","anims","Actions","Interact","Observe","RunTo","WalkTo","RUN_VELOCITY","velocity","WALK_VELOCITY","Behaviour","component","setInteractive","alphaTolerance","draggable","calculateLightsContribuitePoint","TALKABLE","INVENTORY","checkLight","Behaviours","Talkable","Inventory","_timer","pointer","setCursor","DEFAULT_MIN_TIME_TO_OBSERVE","isBlocked","bind","Character","Characters","NPCharacter","Player","pointerDown","Effect","Effects","HardFlickering","minTime","maxTime","finalState","setTimer","stopped","initialConfig","graphicLight","setIntensity","turnOff","HardFlickeringAndTrembling","hardFlickering","trembling","LightEffect","RadiusFlickering","minPercentageIntensity","maxPercentageIntensity","minPercentageRadius","maxPercentageRadius","backToInitialIntensity","backToInitialRadius","newIntensityPercentage","newRadiusPercentage","setRadius","radius","SoftFlickering","SoftDefaultFlickeringAndtrembling","softFlickering","Trembling","SoftFlickeringAndTrembling","InventoryItems","WorldItems","InentoryItem","InventoryItem","WorldItem","LightSources","RoomFurnitures","WallFurnitures","LightSource","graphicLightConfig","diffusedLightConfig","turnOn","addLight","stopBehaviours","diffusedLightindex","indexOf","splice","removeLight","graphicLightindex","RoomFurniture","WallFurniture","cursorScene","sceneManager","lastTarget","CURSOR_SCENE_KEY","CursorScene","cursor","DEFAULT_CURSOR","activePointer","camera","worldX","EXAMINABLE_CURSOR","INTERACTIVE_CURSOR","TALKABLE_CURSOR","TalkTo","setTexture","setVisible","HOLD_CURSOR","CHOICE_CURSOR","CHOICE_PRESSED_CURSOR","setDefaultCursor","BasePlugin","autoStart","returnValue","availHeight","window","innerHeight","availWidth","innerWidth","screen","ceil"],"mappings":"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","file":"the-darkest-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"TDLib\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TDLib\"] = factory();\n\telse\n\t\troot[\"TDLib\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/TDLib.js\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import CONST from './const';\n/**\n * @namespace TDLib\n */\n\nvar TDLib = {\n  Components: require('./components'),\n  Game: require('./boot/Game'),\n  Managers: require('./managers'),\n  Rooms: require('./rooms'),\n  Sprites: require('./sprites'),\n  Systems: require('./systems'),\n  Utils: require('./utils')\n};\n\nTDLib = Phaser.Utils.Objects.Extend(false, TDLib, CONST);\n\nmodule.exports = TDLib;\nglobal.TDLib = TDLib;\n","var CONST = require('../const');\nvar Settings = require('./Settings');\n\n/**\n * Called automatically by Phaser.Game and responsible for creating the console.log debug header.\n *\n * You can customize or disable the header via the Game Config object.\n *\n * @function Phaser.Boot.DebugHeader\n * @since 3.0.0\n *\n * @param {Phaser.Game} game - The Phaser.Game instance which will output this debug header.\n */\nvar DebugHeader = function (game) {\n  let config = game.config;\n\n  config.bannerBackgroundColor = '#0002e6';\n  config.bannerTextColor = '#ffffff';\n  config.hidePhaser = false;\n\n  let renderType = 'WebGL';\n\n  if (config.renderType !== 2) {\n    renderType = 'NULL';\n  }\n\n  let audioConfig = config.audio;\n  let deviceAudio = game.device.audio;\n\n  let audioType;\n\n  if (deviceAudio.webAudio && !(audioConfig && audioConfig.disableWebAudio)) {\n    audioType = 'Web Audio';\n  } else if ((audioConfig && audioConfig.noAudio) || (!deviceAudio.webAudio && !deviceAudio.audioData)) {\n    audioType = 'No Audio';\n  } else {\n    audioType = 'HTML5 Audio';\n  }\n\n  if (!game.device.browser.ie) {\n    let c = '';\n    let args = [c];\n\n    if (Array.isArray(config.bannerBackgroundColor)) {\n      let lastColor;\n\n      config.bannerBackgroundColor.forEach(function (color) {\n        c = c.concat('%c ');\n\n        args.push('background: ' + color);\n\n        lastColor = color;\n\n      });\n\n      //  inject the text color\n      args[args.length - 1] = 'color: ' + config.bannerTextColor + '; background: ' + lastColor;\n    } else {\n      c = c.concat('%c ');\n\n      args.push('color: ' + config.bannerTextColor + '; background: ' + config.bannerBackgroundColor);\n    }\n\n    //  URL link background color (always white)\n    args.push('background: #fff');\n\n    if (config.gameTitle) {\n      c = c.concat(config.gameTitle);\n\n      if (config.gameVersion) {\n        c = c.concat(' v' + config.gameVersion);\n      }\n\n      if (!config.hidePhaser) {\n        c = c.concat(' / ');\n      }\n    }\n\n    if (!config.hidePhaser) {\n      c = c.concat('TDLib v' + CONST.VERSION + ' / Phaser v' + CONST.PHASER_VERSION);\n      c = c.concat(' (' + renderType + ' | ' + audioType + ' | ' + Settings.DEVICE + ')');\n    }\n\n    c = c.concat(' %c ' + config.gameURL);\n\n    //  Inject the new string back into the args array\n    args[0] = c;\n\n    console.log.apply(console, args);\n  }\n};\n\nmodule.exports = DebugHeader;\n","import Settings from './Settings';\nimport DebugHeader from './DebugHeader';\nimport Utils from '../utils';\nimport Managers from '../managers';\nimport Systems from '../systems';\n\nexport default class Game {\n  constructor(config) {\n    this.config = config;\n    this._setScreenConfig();\n    this._setPhysicsConfig();\n    this._setPlugins();\n    this._setBoot();\n    this._setHeaderProps();\n    this._finalizeConfig();\n\n    // Aggiungere il device e la funzione per determinarlo\n\n    Settings.GAME = new Phaser.Game(this.config);\n\n    DebugHeader(Settings.GAME);\n    return Settings.GAME;\n  }\n\n  _setScreenConfig() {\n    Settings.SCREEN_PROPS = Utils.getScreenProps();\n\n    this.config.width = Settings.SCREEN_PROPS.calculatedWidth;\n    this.config.height = Settings.SCREEN_PROPS.calculatedHeight;\n    this.config.zoom = Settings.SCREEN_PROPS.calculatedZoom;\n\n    this.config.autoResize = false;\n    this.config.backgroundColor = '#000000';\n    this.config.pixelArt = true;\n  }\n\n  _setPhysicsConfig() {\n    this.config.physics = {\n      default: 'arcade',\n      arcade: {\n        debug: false,\n        gravity: { y: 0, x: 0 }\n      }\n    };\n  }\n\n  _setPlugins() {\n    this.config.plugins = {\n      global: [\n        { key: 'RoomSystem', plugin: Systems.RoomSystem, start: false, mapping: 'rooms' },\n        { key: 'CursorSystem', plugin: Systems.CursorSystem, start: false, mapping: 'cursors' }\n      ],\n      scene: [\n        { key: 'UpdateManager', plugin: Managers.UpdateManager, mapping: 'updates' },\n        { key: 'LightSourceManager', plugin: Managers.LightSourceManager, mapping: 'lightSources' },\n        { key: 'LayerManager', plugin: Managers.LayerManager, mapping: 'layers' }\n        // { key: 'ActionManager', plugin: ActionManager, mapping: 'actions' }\n      ]\n    };\n  }\n\n  _setBoot() {\n    this.config.scene = [Boot];\n  }\n\n  _setHeaderProps() {\n    this.config.banner = false;\n  }\n\n  _finalizeConfig() {\n    this.config.type = Phaser.WEBGL;\n    this.config.maxLights = 20;\n    this.config.parent = 'game';\n    this.config.disableContextMenu = true;\n  }\n}\n","var Settings = {\n  GAME: '',\n  TILE_SIZE: 48,\n  ROOM_HEIGHT_IN_TILE: 6,\n  INVENTORY_WIDTH_IN_TILES_MOBILE: 1.25,\n  INVENTORY_WIDTH_IN_TILES_DESKTOP: 0,\n  INVENTORY_HEIGHT_IN_TILES_MOBILE: 0,\n  INVENTORY_HEIGHT_IN_TILES_DESKTOP: 1,\n  ROOM_FRAME_IN_TILES_DESKTOP: 0.5,\n  ROOM_FRAME_IN_TILES_MOBILE: 0.25,\n  SCREEN_PROPS: {},\n  DEVICE: 'Desktop'\n};\n\nmodule.exports = Settings;\n","import Component from './Component';\nimport Actions from '../sprites/actions';\n\n/**\n * The actions namespace.\n * @namespace TDLib.Components.Actions\n * @since 1.0.0\n */\n\n/**\n * Class representing a component responsible of every TDLAction preformed.\n * @extends TDLib.Components.TDLComponent\n * @memberof TDLib.Components\n * @since 1.0.0\n */\nexport default class ActionComponent extends Component {\n  /**\n   * Create an ActionComponent.\n   * @param {TDLib.Sprites.TDLSprite} actor - The performer of the action.\n   */\n  constructor(actor) {\n    super(actor);\n\n    /**\n     * The performer of the action.\n     * @type {TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.actor = actor;\n\n    /**\n     * The default action to be played.\n     * @type {TDLib.Components.Actions.TDLAction}\n     * @since 1.0.0\n     */\n    this.defaultAction = new Actions.Idle(this, this.actor);\n\n    /**\n     * The queue of actions.\n     * @type {Array}\n     * @private\n     * @since 1.0.0\n     */\n    this._queue = [this.defaultAction];\n    this._queue[0].start();\n  }\n\n  /**\n   * The queue is emptied and the new action is immediately performed.\n   * @since 1.0.0\n   */\n  static get DEFAULT_MODE() {\n    return 0;\n  }\n\n  /**\n   * The new action is added to the queue.\n   * @since 1.0.0\n   */\n  static get QUEUE_MODE() {\n    return 1;\n  }\n\n  /**\n   * The currently performed action is paused and the new action is immediately performed. Then the paused action is resumed.\n   * @since 1.0.0\n   */\n  static get PAUSE_MODE() {\n    return 2;\n  }\n\n  /**\n   * Start a new action or add that to the queue.\n   * @param {TDLib.Components.Actions.TDLAction} action - The action to add or execute.\n   * @param {Object} config - The config object for the action.\n   * @param {Object} config.target - The target of the action.\n   * @param {number} config.target.x - The x of the target of the action.\n   * @param {number} [mode=ActionComponent.DEFAULT_MODE] - The mode to execute the action: ActionComponent.DEFAULT_MODE, ActionComponent.QUEUE_MODE or ActionComponent.PAUSE_MODE.\n   * @since 1.0.0\n   */\n  add(Action, config, mode = ActionComponent.DEFAULT_MODE) {\n\n    let newAction = new Action(this, this.actor, config);\n\n    switch (mode) {\n      case ActionComponent.DEFAULT_MODE: {\n        this._queue[0].abort();\n        this._queue = [];\n        this._queue.push(newAction);\n        this._queue[0].start();\n      };\n        break;\n\n      case ActionComponent.QUEUE_MODE: {\n        this._queue.push(newAction);\n      };\n        break;\n\n      case ActionComponent.PAUSE_MODE: {\n        this._queue[0].pause();\n        this._queue.unshift(newAction);\n        this._queue[0].start();\n      };\n        break;\n    }\n\n    return newAction;\n  }\n\n  /**\n   * Remove a completed action from the queue.\n   * @private\n   * @since 1.0.0\n   */\n  remove() {\n    this._queue.shift();\n    if (this._queue.length <= 0) this._queue.push(this.defaultAction);\n    if (this._queue[0].isPaused) this._queue[0].resume();\n    else this._queue[0].start();\n  }\n\n  /**\n   * Update the currently performed action.\n   * @private\n   * @since 1.0.0\n   */\n  update() {\n    if (this._queue.length <= 0) this._queue.push(this.defaultAction);\n    else if (this._queue.length > 1 && this._queue[0].name === 'Idle') {\n      this._queue.shift();\n      if (this._queue[0].isPaused) this._queue[0].resume();\n      else this._queue[0].start();\n    }\n\n    this._queue[0].update();\n  }\n}\n","import Component from './Component';\nimport Behaviours from '../sprites/behaviours';\n\n/**\n * The behaviours namespace.\n * @namespace TDLib.Components.SpriteBehaviours\n * @since 1.0.0\n */\n\n/**\n * Class representing a component which determines the behaviour of every sprite.\n * @extends TDLib.Components.TDLComponent\n * @memberof TDLib.Components\n * @since 1.0.0\n */\nexport default class BehaviourComponent extends Component {\n  /**\n   * Create a new SpriteBehaviourComponent\n   * @param {TDLib.Sprites.TDLSprite} gameObject - The sprite which implements the component.\n   * @param {string} type - The type of behaviour of the gameObject.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   */\n  constructor(gameObject, type, pixelPerfect) {\n    super(gameObject);\n\n    /**\n     * A reference to the player in the current room.\n     * @type {TDLib.Sprites.Characters.Players.Player}\n     * @since 1.0.0\n     */\n    this.player;\n    (typeof this.gameObject.room.player === 'undefined') ? this.player = this.gameObject : this.player = this.gameObject.room.player;\n\n    /**\n     * The type of behaviour of the gameObject.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.type = type;\n\n    /**\n     * If not null enable the pixel perfect pointer hit for the sprite.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.pixelPerfect = pixelPerfect;\n\n    this._addBehaviours();\n  }\n\n  /**\n   * Select the appropriate behaviours for the gameObject.\n   * @private\n   * @since 1.0.0\n   */\n  _addBehaviours() {\n    // Se l'oggetto è osservabile (cioè esaminabile o interagibile) setto il cursore appropriato\n    if (this.type === Behaviours.EXAMINABLE || this.type === Behaviours.INTERACTIVE) {\n      this.observe = new Behaviours.Observable(this);\n      if (this.type === Behaviours.EXAMINABLE) this.examine = new Behaviours.Examinable(this);\n      else if (this.type === Behaviours.INTERACTIVE) this.interact = new Behaviours.Interactive(this);\n    }\n  }\n}\n","/**\n * The namespace of components.\n * @namespace TDLib.Components\n */\n\n/**\n * Class representing a generic TDLComponent. A TDLComponent extends the members and methods of a TDLSprite which uses it.\n * @memberof TDLib.Components\n */\nexport default class Component {\n  /**\n   * Creates a new TDLComponent.\n   * @param {TDLib.Sprites.TDLSprite} gameObject - The TDLSprite which owns the component.\n   */\n  constructor(gameObject) {\n\n    /**\n     * The name of the component.\n     * @type {string}\n     */\n    this.name = this.constructor.name;\n\n    /**\n     * The TDLSprite which owns the component.\n     * @type {TDLib.Sprites.TDLSprite}\n     */\n    this.gameObject = gameObject;\n  }\n}\n","import Component from './Component';\nimport Effects from '../sprites/effects';\nimport LightSource from '../sprites/world-items/light-sources/LightSource';\n\nexport default class EffectComponent extends Component {\n  constructor(gameObject) {\n    super(gameObject);\n\n    this.previousEffects = [];\n\n    this.currentEffect = null;\n  }\n\n  play(key, duration = -1, config) {\n    if (this.currentEffect) this.stop();\n\n    if (key in Effects) this.currentEffect = new Effects[key](this, config);\n    else if (key in Effects.LightEffects) {\n      if (this.gameObject instanceof LightSource) this.currentEffect = new Effects.LightEffects[key](this, config);\n      else console.log(key + ' can only be run by a LightSource');\n    } else {\n      console.log('No effect with key: ', key);\n    }\n\n    if (this.currentEffect) this.currentEffect.play();\n\n    if (duration > 0) {\n      this.timer = this.gameObject.room.time.addEvent({\n        delay: duration,\n        callback: () => {\n          this.stop();\n        },\n        callbackScope: this,\n        repeat: 0\n      });\n      console.log(this.currentEffect.name + 'Effect started for', duration, 'ms');\n    } else if (duration === -1) {\n      console.log(this.currentEffect.name + 'Effect started');\n    } else {\n      console.log('You must use a positive value!');\n    }\n  }\n\n  stop() {\n    if (this.currentEffect) {\n      if (this.timer) {\n        this.timer.remove();\n        this.timer = null;\n      }\n      this.previousEffects.push(this.currentEffect);\n      this.currentEffect.stop();\n      console.log(this.currentEffect.name + 'Effect stopped');\n      this.currentEffect = null;\n      console.log(this.previousEffects);\n    }\n  }\n}\n","const Components = {\n  Component: require('./Component'),\n  ActionComponent: require('./ActionComponent'),\n  BehaviourComponent: require('./BehaviourComponent'),\n  EffectComponent: require('./EffectComponent')\n};\n\nmodule.exports = Components;\n","const CONST = {\n  VERSION: '1.0.0',\n  PHASER_VERSION: Phaser.VERSION,\n  LEFT: '_left',\n  RIGHT: '_right'\n};\n\nmodule.exports = CONST;\n","/**\n * The plugins namespace.\n * @namespace TDLib.Plugins\n * @since 1.0.0\n */\n\n/**\n * The global plugins namespace.\n * @namespace TDLib.Plugins.GlobalPlugins\n * @since 1.0.0\n */\n\n/**\n * The room plugins namespace.\n * @namespace TDLib.Plugins.RoomPlugins\n * @since 1.0.0\n */\n\n/**\n * Class representing a plugin which manages a room.\n * @extends Phaser.Plugins.ScenePlugin\n * @memberof TDLib.Plugins\n * @since 1.0.0\n */\nexport default class Manager extends Phaser.Plugins.ScenePlugin {\n  /**\n   * Create a TDLRoomPlugin.\n   * @param {TDLib.Rooms.Room|Phaser.Scene} room - The room which contains the plugin.\n   * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to the plugin manager.\n   */\n  constructor(room, pluginManager) {\n    super(room, pluginManager);\n\n    /**\n     * The room containing this plugin.\n     * @type {TDLib.Rooms.Room}\n     * @since 1.0.0\n     */\n    this.room = room;\n  }\n}\n","const Managers = {\n  LayerManager: require('./layers/LayerManager'),\n  LightSourceManager: require('./light-sources/LightSourceManager'),\n  Manager: require('./Manager'),\n  UpdateManager: require('./updates/UpdateManager')\n};\n\nmodule.exports = Managers;\n","import Manager from '../Manager';\nimport Settings from './Settings';\n\n/**\n * Class representing the manager of the layers in every room.\n * @extends TDLib.Plugins.TDLRoomPlugin\n * @memberof TDLib.Plugins.RoomPlugins\n * @since 1.0.0\n */\nexport default class LayerManager extends Manager {\n  /**\n   * Create a new RoomManager.\n   * @param {TDLib.Rooms.Room} room - The room in which the layer manager operates.\n   * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to the plugin manager.\n   */\n  constructor(room, pluginManager) {\n    super(room, pluginManager);\n    /**\n     * The size in cells of each layer.\n     * @type {number}\n     * @since 1.0.0\n     */\n    this.layerSize = Settings.layerSize;\n\n    /**\n     * The starting depth of layers.\n     * @type {number}\n     * @since 1.0.0\n     */\n    this.strartingDepth = Settings.startingDepth;\n  }\n\n  /**\n   * Boot all the layers in the correct order.\n   * @since 1.0.0\n   */\n  boot() {\n    /**\n     * The layer containing the background wall.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.backgroundLayer = this.room.add.group();\n\n    /**\n     * The layer containing the rear doors.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.rearDoorsLayer = this.room.add.group();\n\n    /**\n     * The layer containing the objects fixed to the background wall.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.wallFurnitureLayer = this.room.add.group();\n\n    /**\n     * The layer containing the objects in the room.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.roomFurnitureLayer = this.room.add.group();\n\n    /**\n     * The layer containing the side doors.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.sideDoorsLayer = this.room.add.group();\n\n    /**\n     * The layer containing the NPCs.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.npcLayer = this.room.add.group();\n\n    /**\n     * The layer containing the player.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.playerLayer = this.room.add.group();\n\n    /**\n     * The layer containing the cieling objects from the roof.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.cielingObjectsLayer = this.room.add.group();\n\n    /**\n     * The layer containing the front doors.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.frontDoorsLayer = this.room.add.group();\n\n    /**\n     * The layer containing the lateral walls.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.wallsLayer = this.room.add.group();\n\n    /**\n     * The layer containing the lateral walls black mask.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.wallsMaskLayer = this.room.add.group();\n\n    /**\n     * The layer containing the overall darkness mask.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.overallDarknessLayer = this.room.add.group();\n\n    /**\n     * The layer containing the border black masks.\n     * @type {Phaser.GameObjects.Group}\n     * @since 1.0.0\n     */\n    this.borderMasksLayer = this.room.add.group();\n  }\n\n  /**\n   * Set the correct depth for each layer in the right order.\n   * @since 1.0.0\n   */\n  setLayersDepth() {\n    let i = this.strartingDepth;\n\n    this.backgroundLayer.setDepth(this.layerSize * i);\n    i++;\n    this.rearDoorsLayer.setDepth(this.layerSize * i);\n    i++;\n    this.wallFurnitureLayer.setDepth(this.layerSize * i);\n    i++;\n    this.roomFurnitureLayer.setDepth(this.layerSize * i);\n    i++;\n    this.sideDoorsLayer.setDepth(this.layerSize * i);\n    i++;\n    this.npcLayer.setDepth(this.layerSize * i);\n    i++;\n    this.playerLayer.setDepth(this.layerSize * i);\n    i++;\n    this.cielingObjectsLayer.setDepth(this.layerSize * i);\n    i++;\n    this.frontDoorsLayer.setDepth(this.layerSize * i);\n    i++;\n    this.wallsLayer.setDepth(this.layerSize * i);\n    i++;\n    this.wallsMaskLayer.setDepth(this.layerSize * i);\n    i++;\n    this.overallDarknessLayer.setDepth(this.layerSize * i);\n    i++;\n    this.borderMasksLayer.setDepth(this.layerSize * i);\n    i++;\n  }\n}\n","const Settings = {\n  layerSize: 10,\n  startingDepth: 0\n};\n\nmodule.exports = Settings;\n","import Manager from '../Manager';\nimport GlobalSettings from '../../boot/Settings';\n\nexport default class LightSourceManager extends Manager {\n  constructor(room, pluginManager) {\n    super(room, pluginManager);\n\n    this.graphicLights = [];\n    this.diffusedLights = [];\n  }\n\n  boot() {\n    this.lightSources = this.room.add.group();\n  }\n\n  add(source) {\n    this.lightSources.add(source, true);\n    this.lightSources.getChildren().forEach(lightSource => {\n      lightSource.setPipeline('Light2D');\n    });\n\n    return source;\n  }\n\n  // Le luci che flickerano o con comportamenti strani vanno contate?\n  calculateLightsContribuitePoint(target) {\n    let singleLightContributeAccumulator = 0;\n\n    this.lightSources.getChildren().forEach(light => {\n      if (light.isOn) {\n        let singleLightContribute = light.config.diffusedLight.intensity / (Math.abs(light.x + light.config.offset.x - target.x) ^ 2);\n\n        // COSE\n        if (light.effects.currentEffect) {\n          singleLightContribute *= light.effects.currentEffect.contributeFactor;\n        }\n\n        singleLightContributeAccumulator += singleLightContribute;\n      }\n    });\n\n    return Math.floor(singleLightContributeAccumulator * 10000) / 1000;\n  }\n\n  calculateAverageLightsContribute() {\n    let singleLightIntensityAccumulator = 0;\n\n    this.diffusedLights.forEach(light => {\n      singleLightIntensityAccumulator += light.intensity;\n    });\n    let averageLightsContribute = 0;\n\n    if (singleLightIntensityAccumulator !== 0) averageLightsContribute = Math.floor((singleLightIntensityAccumulator * 10000 / this.room.layers.wallsLayer.width / GlobalSettings.TILE_SIZE) * 100) / 100 + 0.3;\n    return averageLightsContribute;\n  }\n}\n","import Manager from '../Manager';\n\n/**\n * Class representing the update plugin.\n * @extends TDLib.Plugins.TDLRoomPlugin\n * @memberof TDLib.Plugins.RoomPlugins\n * @since 1.0.0\n */\nexport default class UpdateManager extends Manager {\n  /**\n   * Create a new UpdatePlugin.\n   * @param {TDLib.Rooms.Room} room - The room in which the layer manager operates.\n   * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to the plugin manager.\n   */\n  constructor(room, pluginManager) {\n    super(room, pluginManager);\n  }\n\n  /**\n   * Boot the plugin.\n   * @since 1.0.0\n   */\n  boot() {\n    const events = this.systems.events;\n\n    this.gameObjects = new Phaser.Structs.Set();\n\n    events.on('update', this._sceneUpdate, this);\n    events.on('shutdown', this._sceneShutdown, this);\n    events.once('destroy', this._sceneDestroy, this);\n  }\n\n  /**\n   * Update every game object.\n   * @param {*} time\n   * @param {*} delta\n   * @private\n   * @since 1.0.0\n   */\n  _sceneUpdate(time, delta) {\n    this.gameObjects.iterateLocal('update', time, delta);\n  }\n\n  /**\n   * Called at the shutdown of the scene.\n   * @private\n   * @since 1.0.0\n   */\n  _sceneShutdown() {\n    this.gameObjects.clear();\n  }\n\n  /**\n   * Called when the scene is destroyed.\n   * @private\n   * @since 1.0.0\n   */\n  _sceneDestroy() {\n    const events = this.systems.events;\n\n    events.off('update', this._scenePostUpdate, this);\n    events.off('shutdown', this._sceneShutdown, this);\n    events.off('destroy', this._sceneDestroy, this);\n\n    this.gameObjects = null;\n    this.scene = null;\n    this.systems = null;\n  }\n\n  /**\n   * Add an object to the global update loop of the game.\n   * @param {TDLib.Sprites.TDLSprite} obj - The object to add to the update loop.\n   * @since 1.0.0\n   */\n  add(obj) {\n    obj.once('destroy', this.remove, this);\n    this.gameObjects.set(obj);\n  }\n\n  /**\n   * Add multiple objects to the global update loop of the game.\n   * @param {TDLib.Sprites.TDLSprite[]} obj - The objects to add to the update loop.\n   * @since 1.0.0\n   */\n  addMultiple(objs) {\n    objs.forEach(this.add, this);\n  }\n\n  /**\n   * Remove an object from the global update loop of the game.\n   * @param {TDLib.Sprites.TDLSprite} obj - The object to remove from the update loop.\n   * @since 1.0.0\n   */\n  remove(obj) {\n    obj.off('destroy', this.remove, this);\n    this.gameObjects.delete(obj);\n  }\n}\n","import Settings from '../boot/Settings';\nimport Utils from './Utils';\n\n/**\n * The rooms namespace.\n * @namespace TDLib.Rooms\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLRoom.\n * @extends Phaser.Scene\n * @memberof TDLib.Rooms\n * @since 1.0.0\n */\nexport default class Room extends Phaser.Scene {\n  /**\n   * Create a new TDLRoom.\n   * @param {string} sceneKey - The unique key to identify the room.\n   * @param {Object} rawAssets - The raw object of assets needed by the room. (Ripensarlo ?)\n   */\n  constructor(sceneKey, rawAssets) {\n    super(sceneKey);\n\n    /**\n       * This object contains an array with all the assets needed by the room.\n       * @type {Object}\n       * @since 1.0.0\n       */\n    this.assets = { raw: rawAssets, array: [] };\n\n    /**\n       * The average contribute of light sources to the room.\n       * @type {number}\n       * @since 1.0.0\n       */\n    this.averageLightsContribute;\n\n    /**\n       * The Settings cursor manager.\n       * @type {TDLib.Plugins.SettingsPlugins.CursorManager}\n       * @since 1.0.0\n       */\n    this.cursors;\n\n    /**\n       * The layer manager of the room.\n       * @type {TDLib.Plugins.RoomPlugins.LayerManager}\n       * @since 1.0.0\n       */\n    this.layers;\n\n    /**\n       * The tilemap of the room.\n       * @type {Phaser.Tilemaps.Tilemap}\n       * @since 1.0.0\n       */\n    this.map;\n\n    /**\n       * The name of the room.\n       * @type {string}\n       * @since 1.0.0\n       */\n    this.name = this.constructor.name;\n\n    /**\n       * The instance of the TDLCharacter designated as player for the room.\n       * @type {TDLib.Sprites.Characters.TDLCharacter}\n       * @since 1.0.0\n       */\n    this.player;\n\n    /**\n       * The Settings room manager.\n       * @type {TDLib.Plugins.SettingsPlugins.RoomManager}\n       * @since 1.0.0\n       */\n    this.rooms;\n  }\n\n  /**\n   * The preload function is executed once and load all the assets needed by the room.\n   * @since 1.0.0\n   */\n  preload() {\n    this._scrapeAssets();\n    this.assets.array.forEach(obj => {\n      if ('nPath' in obj) {\n        this.load[obj.type](obj.key, [obj.path, obj.nPath]);\n      } else if ('bPath' in obj) {\n        this.load[obj.type](obj.key, obj.path);\n        this.load[obj.type](obj.key + '_b', obj.bPath);\n      } else {\n        this.load[obj.type](obj.key, obj.path);\n      }\n    });\n\n    // Loading Border Camera Masks\n    this.load.image('top-border-mask-camera', 'assets/Masks/topMaskCamera.png');\n    this.load.image('bottom-border-mask-camera', 'assets/Masks/bottomMaskCamera.png');\n    this.load.image('left-border-mask-camera', 'assets/Masks/leftMaskCamera.png');\n    this.load.image('right-border-mask-camera', 'assets/Masks/rightMaskCamera.png');\n  }\n\n  /**\n   * Scrape the object of raw assets.\n   * @private\n   * @since 1.0.0\n   */\n  _scrapeAssets() {\n    for (let type in this.assets.raw) {\n      Utils.scrapeComplexObjKey(\n        this.assets.raw[type],\n        { type: type },\n        'path',\n        (obj, params) => {\n          obj['type'] = params.type;\n          obj['key'] = Utils.findFileNameFromPath(obj.path);\n          this.assets.array.push(obj);\n        }\n      );\n    }\n  }\n\n  /**\n   * The create function is executed once, when the room is initialized.\n   * @param {TDLib.Sprites.Characters.TDLCharacter} player - The instance of the player for the room.\n   * @since 1.0.0\n   */\n  create(player) {\n    this.player = player.setName('player');\n    this.lights.enable(); // Boot Phaser's LightManager\n    // this.scene.bringToTop(CursorManager.CURSOR_SCENE_KEY); // Add the cursor to the Room\n    this.scene.bringToTop('CursorScene');\n\n    this._setCameraViewport();\n    this._createRoom();\n    this._createSprites();\n    this._applyBorderMasks();\n    this.layers.setLayersDepth();\n\n    // Camera bounds, anche il wallsLayer\n    this.cameras.main.setBounds(0, 0, this.layers.wallsLayer.width, this.layers.wallsLayer.height);\n    this.cameras.main.startFollow(this.player);\n    this.cameras.main.setRoundPixels(true);\n    // Physics Bounds, sarà solo lo spazio di gioco (togliamo il wall layer tutto attorno!!)\n    this.physics.world.setBounds(\n      Settings.TILE_SIZE, Settings.TILE_SIZE, this.layers.wallsLayer.width - 2 * Settings.TILE_SIZE,\n      this.layers.wallsLayer.height - 2 * Settings.TILE_SIZE\n    );\n  }\n\n  /**\n   * Set the correct camera viewport.\n   * @private\n   * @since 1.0.0\n   */\n  _setCameraViewport() {\n    if (Settings.DEVICE === 'MOBILE') {\n      this.cameras.main.setPosition(\n        (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE,\n        (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE) * Settings.TILE_SIZE\n      );\n      this.cameras.main.setSize(\n        Settings.SCREEN_PROPS.calculatedWidth - 2 * (Settings.ROOM_FRAME_IN_TILES_MOBILE + Settings.INVENTORY_WIDTH_IN_TILES_MOBILE) * Settings.TILE_SIZE,\n        Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE\n      );\n    } else {\n      this.cameras.main.setPosition(\n        Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE,\n        Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE\n      );\n      this.cameras.main.setSize(\n        Settings.SCREEN_PROPS.calculatedWidth - 2 * Settings.ROOM_FRAME_IN_TILES_DESKTOP * Settings.TILE_SIZE,\n        Settings.ROOM_HEIGHT_IN_TILE * Settings.TILE_SIZE\n      );\n    }\n  }\n\n  /**\n   * Create room tilemap and layers.\n   * @private\n   * @since 1.0.0\n   */\n  _createRoom() {\n    this.map = this.make.tilemap({\n      key: Utils.findFileNameFromPath(this.assets.raw.tilemapTiledJSON.path),\n      tileWidth: Settings.TILE_SIZE,\n      tileHeight: Settings.TILE_SIZE\n    });\n\n    this.layers.backgroundLayer = this.map.createDynamicLayer(\n      'backgroundLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.background.path)),\n      0, 0\n    );// .setPipeline('Light2D');\n    this.layers.wallsLayer = this.map.createDynamicLayer(\n      'wallsLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.walls.path)),\n      0, 0\n    );\n    this.layers.wallsMaskLayer = this.map.createDynamicLayer(\n      'wallsMaskLayer',\n      this.map.addTilesetImage(Utils.findFileNameFromPath(this.assets.raw.image.tiles.walls.bPath)),\n      0, 0\n    );\n  }\n\n  /**\n   * Create all the objects present in Tiled JSON map.\n   * @private\n   * @since 1.0.0\n   */\n  _createSprites() {\n    let _this = this;\n\n    this.map.objects.forEach(layer => {\n      layer.objects.forEach(element => {\n        _this;\n        this[element.name] = eval('new ' + element.type + '(_this,' + (element.x + element.width / 2) + ', ' + (element.y - element.height / 2) + ');');\n        this[element.name].setName(element.name);\n      });\n    });\n  }\n\n  /**\n   * Apply the four border masks to the camera.\n   * @private\n   * @since 1.0.0\n   */\n  _applyBorderMasks() {\n    this.layers.borderMasksLayer.create(0,\n      0,\n      'top-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(0,\n      0,\n      'left-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      this.cameras.main.width - Settings.TILE_SIZE,\n      0,\n      'right-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n\n    this.layers.borderMasksLayer.create(\n      0,\n      this.cameras.main.height - Settings.TILE_SIZE,\n      'bottom-border-mask-camera'\n    ).setScrollFactor(0).setOrigin(0, 0);\n  }\n\n  /**\n   * The update function is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n    this._updateMasksByLightDiffusion();\n\n    // Updates all Actions in  every ActionComponent (if present)\n    this.children.list.forEach(element => {\n      if ('actions' in element) {\n        element.actions.update();\n      }\n    });\n  }\n\n  /**\n   * Update the border masks alpha according to the average diffused light in the room.\n   * @private\n   * @since 1.0.0\n   */\n  _updateMasksByLightDiffusion() {\n    this.averageLightsContribute = this.lightSources.calculateAverageLightsContribute();\n    this.layers.wallsMaskLayer.setAlpha(1 - this.averageLightsContribute);\n  }\n}\n\n","const Utils = {\n  scrapeComplexObjKey: (obj, params, searchKey, callback) => {\n    if (Array.isArray(obj)) {\n      for (let i = 0; i < obj.length; i++) {\n        Utils.scrapeComplexObjKey(obj[i], params, searchKey, callback);\n      }\n    } else if (obj !== null && typeof obj === 'object') {\n      if (searchKey in obj) {\n        callback(obj, params);\n      } else {\n        for (let prop in obj) {\n          Utils.scrapeComplexObjKey(obj[prop], params, searchKey, callback);\n        }\n      }\n    }\n  },\n  findFileNameFromPath: (path) => {\n    let nameFirstCharachterPosition = path.lastIndexOf('/') + 1;\n    let nameLastCharachterPosition = path.lastIndexOf('.');\n\n    if (nameFirstCharachterPosition === -1) nameFirstCharachterPosition = 0;\n    if (nameLastCharachterPosition === -1) return -1;\n    let filename = path.slice(nameFirstCharachterPosition, nameLastCharachterPosition);\n\n    return filename;\n  }\n};\n\nmodule.exports = Utils;\n","const Rooms = {\n  Room: require('./Room')\n};\n\nmodule.exports = Rooms;\n","import Behaviours from '../sprites/behaviours';\nimport BehaviourComponent from '../components/BehaviourComponent';\n\n/**\n * The Darkest Lib.\n * @namespace TDLib\n * @since 1.0.0\n */\n\n/**\n * The actions namespace.\n * @namespace TDLib.Sprites\n * @since 1.0.0\n */\n\n/**\n * Class representing a TDLSprite.\n * @extends Phaser.Physics.Arcade.Sprite\n * @memberof TDLib.Sprites\n * @since 1.0.0\n */\nexport default class Sprite extends Phaser.Physics.Arcade.Sprite {\n  /**\n   * Create a TDLSprite.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [layer=null] - The key of the layer which will contain the sprite.\n   * @param {boolean} [hasBody=true] - Specify if the sprite has physics.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   * @param {boolean} [precisePosition=false] - Specify if to examine or interact with the sprite it's required to be precisely at the examineOrInteractPoint. (Probably not needed)\n   */\n  constructor(\n    room,\n    x, y,\n    texture,\n    layer = null,\n    hasBody = true,\n    behaviourType = Behaviours.INERT,\n    pixelPerfect = null,\n    observeText = Behaviours.DEFAULT_OBSERVE_TEXT,\n    examineOrInteractText = Behaviours.DEFAULT_EXAMINE_OR_INTERACT_TEXT,\n    blockExamineText = null,\n    noLightObserveText = Behaviours.DEFAULT_NO_LIGHT_OBSERVE_TEXT,\n    noLightExamineOrInteractText = Behaviours.DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT,\n    examineOrInteractOffsetX = 0,\n    examineOrInteractThresholdRadius = 0,\n    minLightLevelToExamineOrInteract = Behaviours.DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT,\n    minLightLevelToObserve = Behaviours.DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE\n\n  ) {\n    super(room, x, y, texture);\n\n    /**\n     * The room where the sprite is created.\n     * @type {TDLib.Rooms.TDLRoom}\n     * @since 1.0.0\n     */\n    this.room = room;\n\n    /**\n     * The name of the sprite, to map it in the room. Usually it's obtained by Tiled.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.name;\n\n    /**\n     * The unique key of the sprite, composed by the sprite type and a 4 digits random integer number.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.key = this.constructor.name + (Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000);\n\n    /**\n     * The type of the sprite.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.type = this.constructor.name;\n\n    /**\n     * The sprite behaviour component instance.\n     * @type {TDLib.Components.SpriteBehaviourComponent}\n     * @since 1.0.0\n     */\n    this.behaviour = new BehaviourComponent(this, behaviourType, pixelPerfect);\n\n    /**\n     * The text which appears when observing the sprite.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.observeText = observeText;\n\n    /**\n * The text which appears when examine or interact with the sprite.\n     * @type {string}\n     * @since 1.0.0\n */\n    this.examineOrInteractText = examineOrInteractText;\n\n    /**\n     * If not null it's the blocking text which appears the first time the sprite is examined.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.blockExamineText = blockExamineText;\n\n    /**\n     * The text which appears when observing the sprite when the diffused light is not sufficient.\n         * @type {string}\n         * @since 1.0.0\n     */\n    this.noLightObserveText = noLightObserveText;\n\n    /**\n * The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.noLightExamineOrInteractText = noLightExamineOrInteractText;\n\n    /**\n     * The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n     */\n    this.examineOrInteractOffsetX = examineOrInteractOffsetX;\n\n    /**\n     * The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n         */\n    this.examineOrInteractThresholdRadius = examineOrInteractThresholdRadius;\n\n    /**\n     * The minimum value of diffused light to examine or interact with the sprite.\n         * @type {number}\n         * @since 1.0.0\n         */\n    this.minLightLevelToExamineOrInteract = minLightLevelToExamineOrInteract;\n\n    /**\n * The minimum value of diffused light to observe the sprite.\n     * @type {number}\n     * @since 1.0.0\n     */\n    this.minLightLevelToObserve = minLightLevelToObserve;\n\n    this.room.add.existing(this);\n    this.room.updates.add(this);\n    if (hasBody) {\n      this.room.physics.add.existing(this);\n      this.setCollideWorldBounds(true);\n      this.setGravityY(10000);\n    }\n\n    if (layer != null) {\n      if (layer in this.room.layers) {\n        this.room.layers[layer].add(this);\n        this.room.layers.setLayersDepth();\n      } else console.warn('ALERT: layer not found for object', this);\n    }\n\n    this.create();\n  }\n\n  /**\n   * The create function is executed once, immediately after the initialization of the sprite.\n   * @since 1.0.0\n   */\n  create() {\n    console.log('Created:', this.key, '- Type:', this.type, '- Behaviour:', this.behaviour.type);\n  }\n\n  /**\n   * The update is executed at every cycle of the game loop.\n   * @since 1.0.0\n   */\n  update() {\n\n  }\n\n  /**\n   * Set the name property of a sprite.\n   * @param {string} value - The name which is used to map a sprite in the room.\n   * @return {TDLib.Sprites.TDLSprite}\n   * @since 1.0.0\n   */\n  setName(value) {\n    this.name = value;\n    return this;\n  }\n\n  // Poichè è stata aggiunta la pixel perfect collision, valutare l'utilità di questa funzione!\n  setHitAreaSize(width = this.width, height = this.height, offsetX = 0, offsetY = 0) {\n    this.input.hitArea.setSize(width, height);\n    this.input.hitArea.setPosition(((this.width - width) / 2) + offsetX, ((this.height - height) / 2) + offsetY);\n  }\n}\n","/**\n * Class representing a TDLAction.\n * @memberof TDLib.Components.Actions\n * @since 1.0.0\n */\nexport default class Action {\n  /**\n   * Start a new TDLAction.\n   * @param {TDLib.Components.ActionComponent|TDLib.Components.Actions.TDLAction} invoker - The invoker of the action.\n   * @param {TDLSprite} actor - The actor who performs the action.\n   * @param {Object} config - The config object for the action.\n   * @param {Object} config.target - The target of the action.\n   * @param {number} config.target.x - The x of the target of the action.\n   */\n  constructor(invoker, actor, config = {}) {\n    /**\n     * The invoker of the action.\n     * @type {TDLib.Components.ActionComponent|TDLib.Components.Actions.TDLAction}\n     * @since 1.0.0\n     */\n    this.invoker = invoker;\n\n    /**\n     * The name of the action.\n     * @type {string}\n     * @since 1.0.0\n     */\n    this.name = this.constructor.name;\n\n    /**\n     * The actor who performs the action.\n     * @type {TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.actor = actor;\n\n    /**\n     * The target of the action.\n     * @type {Object|TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.target = config.target;\n\n    /**\n     * The config object for the action.\n     * @type {Object}\n     * @since 1.0.0\n     */\n    this.config = config;\n\n    /**\n     * The queue of actions.\n     * @type {Array}\n     * @private\n     * @since 1.0.0\n     */\n    this._queue = [];\n\n    /**\n     * Tells if the action has been paused.\n     * @type {boolean}\n     * @since 1.0.0\n     */\n    this.isPaused = false;\n  }\n\n  /**\n   * Add one or more new actions to the queue.\n   * @param {TDLib.Components.Actions.TDLAction|TDLib.Components.Actions.TDLAction[]|TDLib.Components.Actions.TDLAction.BaseAction|TDLib.Components.Actions.TDLAction.BaseAction[]} actions - The new actions to add.\n   * @since 1.0.0\n   */\n  addActions(actions) {\n    if (Array.isArray(actions)) {\n      actions.forEach(action => {\n        this._queue.push(action);\n      });\n    } else this._queue.push(actions);\n  }\n\n  /**\n   * The blank action to create new composed and complex actions.\n   * @typedef {TDLib.Components.Actions.TDLAction.BaseAction}\n   *\n   * @property {TDLib.Components.ActionComponent|TDLib.Components.Actions.TDLAction} invoker - The invoker of the action.\n   * @property {Function} startCallback - The callback to execute at the beginning of the action.\n   * @property {Function} [finishCallback] - The callback to execute at the end of the action.\n   * @property {Function} [updateCallback]  - The callback to execute at every update loop.\n   * @property {Function} [resumeCallback=startCallback] - The callback to execute when the action is paused.\n   * @property {Function} [pauseCallback=finishCallback]  - The callback to execute when the action is resumed.\n   * @since 1.0.0\n   */\n  static get BaseAction() {\n    return class BaseAction {\n      constructor(invoker, startCallback, finishCallback = () => { }, updateCallback = () => { }, resumeCallback = startCallback, pauseCallback = finishCallback) {\n        this.invoker = invoker;\n\n        this.startCallback = startCallback;\n        this.finishCallback = finishCallback;\n        this.updateCallback = updateCallback;\n        this.resumeCallback = resumeCallback;\n        this.pauseCallback = pauseCallback;\n\n        this.isPaused = false;\n      }\n\n      start() {\n        this.startCallback();\n      }\n\n      finish() {\n        this.finishCallback();\n        this.invoker.remove();\n      }\n\n      abort() {\n        this.finishCallback();\n      }\n\n      resume() {\n        this.isPaused = false;\n        this.resumeCallback();\n      }\n\n      pause() {\n        this.pauseCallback();\n        this.isPaused = true;\n      }\n\n      update() {\n        this.updateCallback();\n      }\n    };\n  }\n\n  /**\n   * Abort an uncompleted action.\n   * @private\n   * @since 1.0.0\n   */\n  abort() {\n    if (this._queue.length > 0) this._queue[0].abort();\n  }\n\n  /**\n   * Start an action.\n   * @private\n   * @since 1.0.0\n   */\n  start() {\n    if (this._queue.length > 0) this._queue[0].start();\n  }\n\n  /**\n   * Finish a completed action.\n   * @private\n   * @since 1.0.0\n   */\n  finish() {\n    if (this._queue.length > 0) this._queue[0].finish();\n  }\n\n  /**\n   * Remove a completed action from the queue.\n   * @private\n   * @since 1.0.0\n   */\n  remove() {\n    if (this._queue.length > 0) this._queue.shift();\n\n    if (this._queue.length <= 0) this.invoker.remove();\n    else this._queue[0].start();\n  }\n\n  /**\n   * Pause an action.\n   * @private\n   * @since 1.0.0\n   */\n  pause() {\n    if (this._queue.length > 0) {\n      this._queue[0].pause();\n      this.isPaused = true;\n    }\n  }\n\n  /**\n   * Resume a paused action.\n   * @private\n   * @since 1.0.0\n   */\n  resume() {\n    if (this._queue.length > 0) {\n      this.isPaused = false;\n      this._queue[0].resume();\n    }\n  }\n\n  /**\n   * Update the currently performed action.\n   * @private\n   * @since 1.0.0\n   */\n  update() {\n    if (this._queue.length > 0) this._queue[0].update();\n  }\n}\n","import Action from '../Action';\nimport WalkTo from '../walk-to/WalkTo';\n\nexport default class Examine extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      [\n        new WalkTo(this, this.actor, this.config),\n        this.target.behaviour.examine.getAction(this)\n      ]\n    );\n  }\n}\n","import Action from '../Action';\nimport CONST from '../../../const';\nimport Settings from './Settings';\n\nexport default class FaceTo extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      new Action.BaseAction(\n        this,\n        () => {\n          if (Math.abs(this.actor.x - this.target.x) > Settings.MICRO_MOVEMENT_RADIUS) {\n            if (this.actor.facing === CONST.RIGHT) {\n              if (this.actor.x > this.target.x) {\n                this.actor.facing = CONST.LEFT;\n                this.actor.setFlipX(true);\n                // this.actor.anims.play('idleLeft');\n              }\n            } else if (this.actor.facing === CONST.LEFT) {\n              if (this.actor.x < this.target.x) {\n                this.actor.facing = CONST.RIGHT;\n                this.actor.setFlipX(false);\n                // this.actor.anims.play('idleRight');\n              }\n            }\n          }\n          this.finish();\n        }\n      )\n    );\n  }\n}\n","const Settings = {\n  MICRO_MOVEMENT_RADIUS: 6\n};\n\nmodule.exports = Settings;\n","import Action from '../Action';\nimport CONST from '../../../const';\n\n/**\n * Class representing the idle action.\n * @extends TDLib.Components.Actions.Action\n * @memberof TDLib.Components.Actions\n */\nexport default class Idle extends Action {\n  /**\n   * Start a new idle action.\n   * @param {Components.ActionComponent|Components.Actions.TDLAction} invoker - The invoker of the action.\n   * @param {TDLSprite} actor - The actor who performs the action.\n   * @param {Object} config - The config object for the action.\n   * @param {Object} config.target - The target of the action.\n   * @param {number} config.target.x - The x of the target of the action.\n   */\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      new Action.BaseAction(\n        this,\n        () => {\n          this.actor.body.setVelocity(0);\n          switch (this.actor.facing) {\n\n            case CONST.LEFT: {\n              this.actor.anims.play('idle');\n              // this.actor.anims.play('idleLeft');\n            }\n              break;\n\n            case CONST.RIGHT: {\n              this.actor.anims.play('idle');\n              // this.actor.anims.play('idleRight');\n            }\n              break;\n\n            // possibili altri casi di facing (es girato di spalle o da davanti)\n          }\n        }\n      )\n    );\n  }\n}\n","const Actions = {\n  Action: require('./Action'),\n  Examine: require('./examine/Examine'),\n  FaceTo: require('./face-to/FaceTo'),\n  Idle: require('./idle/Idle'),\n  Interact: require('./interact/Interact'),\n  Observe: require('./observe/Observe'),\n  RunTo: require('./run-to/RunTo'),\n  WalkTo: require('./walk-to/WalkTo')\n};\n\nmodule.exports = Actions;\n","import Action from '../Action';\nimport WalkTo from '../walk-to/WalkTo';\n\nexport default class Interact extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      [\n        new WalkTo(this, this.actor, this.config),\n        this.target.behaviour.interact.getAction(this)\n      ]\n    );\n  }\n}\n","import Action from '../Action';\nimport FaceTo from '../face-to/FaceTo';\n\nexport default class Observe extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      [\n        new FaceTo(this, this.actor, this.config),\n        this.target.behaviour.observe.getAction(this)\n      ]\n    );\n  }\n}\n","import Action from '../Action';\nimport FaceTo from '../face-to/FaceTo';\nimport Settings from './Settings';\n\n// da cambiare e mettere tutta dentro l'AWalkTo e fare un Move to che distingua che azioni chiamare?\nexport default class RunTo extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      [\n        new FaceTo(this, this.actor, this.config),\n        new Action.BaseAction(\n          this,\n          () => {\n            if (Math.abs(this.actor.x - this.target.x) > Settings.MICRO_MOVEMENT_RADIUS) {\n              if (this.actor.x < this.target.x) {\n                this.actor.anims.play('run');\n                // this.actor.anims.play('runRight');\n                this.actor.body.setVelocity(Settings.RUN_VELOCITY);\n              } else if (this.actor.x > this.target.x) {\n                this.actor.anims.play('run');\n                // this.actor.anims.play('runLeft');\n                this.actor.body.setVelocity(-Settings.RUN_VELOCITY);\n              }\n              console.log('start to run to ', config.target.x);\n            } else {\n              this.finish();\n            }\n          },\n          () => {\n            this.actor.body.setVelocity(0);\n          },\n          () => {\n            if ((this.actor.x - this.target.x) * this.actor.body.velocity.x > 0) this.finish();\n          }\n        )\n      ]\n    );\n  }\n}\n","const Settings = {\n  RUN_VELOCITY: 240,\n  MICRO_MOVEMENT_RADIUS: 20\n};\n\nmodule.exports = Settings;\n","const Settings = {\n  WALK_VELOCITY: 100,\n  MICRO_MOVEMENT_RADIUS: 20\n};\n\nmodule.exports = Settings;\n","import Action from '../Action';\nimport FaceTo from '../face-to/FaceTo';\nimport Settings from './Settings';\n\nexport default class WalkTo extends Action {\n  constructor(invoker, actor, config) {\n    super(...arguments);\n    this.addActions(\n      [\n        new FaceTo(this, this.actor, this.config),\n        new Action.BaseAction(\n          this,\n          () => {\n            if (Math.abs(this.actor.x - this.target.x) > Settings.MICRO_MOVEMENT_RADIUS) {\n              if (this.actor.x < this.target.x) {\n                this.actor.anims.play('walk');\n                // this.actor.anims.play('walkRight');\n                this.actor.body.setVelocity(Settings.WALK_VELOCITY);\n              } else if (this.actor.x > this.target.x) {\n                this.actor.anims.play('walk');\n                // this.actor.anims.play('walkLeft');\n                this.actor.body.setVelocity(-Settings.WALK_VELOCITY);\n              }\n            } else {\n              this.finish();\n            }\n          },\n          () => {\n            this.actor.body.setVelocity(0);\n          },\n          () => {\n            if ((this.actor.x - this.target.x) * this.actor.body.velocity.x > 0) this.finish();\n          }\n        )\n      ]\n    );\n  }\n}\n","import Action from '../actions/Action';\n\n/**\n * Class representing the behaviour of a sprite.\n * @memberof TDLib.Components.SpriteBehaviours\n * @since 1.0.0\n */\nexport default class Behaviour {\n  /**\n   * Create a SpriteBehaviour.\n   * @param {TDLib.Components.SpriteBehaviourComponent} component - The component which has invoked the behaviour.\n   */\n  constructor(component) {\n    /**\n     * The component which has invoked the behaviour.\n     * @type {TDLib.Components.SpriteBehaviourComponent}\n     * @since 1.0.0\n     */\n    this.component = component;\n\n    /**\n     * The global cursor manager.\n     * @type {TDLib.Plugins.GlobalPlugins.CursorManager}\n     * @since 1.0.0\n     */\n    this.cursors = this.component.gameObject.room.cursors;\n\n    /**\n     * The sprite which has invoked the behaviour.\n     * @type {TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.gameObject = this.component.gameObject;\n\n    /**\n     * The room where the gameObject lives.\n     * @type {TDLib.Rooms.TDLRoom}\n     * @since 1.0.0\n     */\n    this.room = this.component.gameObject.room;\n\n    this.add();\n  }\n\n  /**\n   * Set the gameObject as interactive.\n   * @since 1.0.0\n   */\n  add() {\n    if (this.component.pixelPerfect === null) this.component.gameObject.setInteractive();\n    else {\n      this.component.gameObject.setInteractive(\n        {\n          pixelPerfect: true,\n          alphaTolerance: this.component.pixelPerfect.alphaTolerance,\n          draggable: false\n        }\n      );\n    }\n  }\n\n  /**\n   * Generate a proper action according to the behaviour and the gameObject settings.\n   * @return {TDLib.Components.Actions.TDLAction}\n   * @since 1.0.0\n   */\n  getAction(invoker) {\n    return new Action.BaseAction(\n      invoker,\n      () => {\n        console.log('Sono una generica action dei behaviour');\n        invoker.finish();\n      }\n    );\n  }\n\n  checkLight(value) {\n    if (this.room.lightSources.calculateLightsContribuitePoint(this.gameObject) >= value) return true;\n    return false;\n  }\n}\n","const CONST = {\n  EXAMINABLE: 'EXAMINABLE',\n  INERT: 'INERT',\n  INTERACTIVE: 'INTERACTIVE',\n  TALKABLE: 'TALKABLE',\n  INVENTORY: 'INVENTORY',\n\n  DEFAULT_MIN_LIGHT_LEVEL_TO_OBSERVE: 0.05,\n  DEFAULT_OBSERVE_TEXT: 'Observe default text',\n  DEFAULT_NO_LIGHT_OBSERVE_TEXT: 'NoLightObserve default text',\n  DEFAULT_MIN_LIGHT_LEVEL_TO_EXAMINE_OR_INTERACT: 0.04,\n  DEFAULT_EXAMINE_OR_INTERACT_TEXT: 'ExamineOrInteract default text',\n  DEFAULT_NO_LIGHT_EXAMINE_OR_INTERACT_TEXT: 'NoLightExamineOrInteract default text'\n};\n\nmodule.exports = CONST;\n","import Behaviour from '../Behaviour';\nimport Action from '../../actions/Action';\n\nexport default class Examinable extends Behaviour {\n  constructor(component) {\n    super(component);\n  }\n\n  /**\n   * Generate a proper action according to the behaviour and the gameObject settings.\n   * @return {TDLib.Components.Actions.TDLAction}\n   * @since 1.0.0\n   */\n  getAction(invoker) {\n    return new Action.BaseAction(\n      invoker,\n      () => {\n        // Fare i controlli su quanta luce c'è nella stanza!\n        if (this.checkLight(this.gameObject.minLightLevelToExamineOrInteract)) console.log(this.gameObject.examineOrInteractText);\n        else console.log(this.gameObject.noLightExamineOrInteractText);\n        invoker.finish();\n      }\n    );\n  }\n}\n","import CONST from './const';\n\nvar Behaviours = {\n  Behaviour: require('./Behaviour'),\n  Examinable: require('./examinable/Examinable'),\n  Interactive: require('./interactive/Interactive'),\n  Observable: require('./observable/Observable'),\n  Talkable: require('./talkable/Talkable'),\n  Inventory: require('./inventory/Inventory')\n};\n\nBehaviours = Phaser.Utils.Objects.Extend(false, Behaviours, CONST);\nmodule.exports = Behaviours;\n","import Behaviour from '../Behaviour';\nimport Action from '../../actions/Action';\n\nexport default class Interactive extends Behaviour {\n  constructor(component) {\n    super(component);\n  }\n\n  /**\n   * Generate a proper action according to the behaviour and the gameObject settings.\n   * @return {TDLib.Components.Actions.TDLAction}\n   * @since 1.0.0\n   */\n  getAction(invoker) {\n    return new Action.BaseAction(\n      invoker,\n      () => {\n        // Fare i controlli su quanta luce c'è nella stanza!\n        if (this.checkLight(this.gameObject.minLightLevelToExamineOrInteract)) console.log(this.gameObject.examineOrInteractText);\n        else console.log(this.gameObject.noLightExamineOrInteractText);\n        invoker.finish();\n      }\n    );\n  }\n}\n","export default class Inventory {\n  constructor() {\n\n  }\n}\n","import Behaviour from '../Behaviour';\nimport Actions from '../../actions';\nimport Settings from './Settings';\n\nexport default class Observable extends Behaviour {\n  constructor(component) {\n    super(component);\n\n    this._timer;\n  }\n\n  add() {\n    super.add();\n\n    this.gameObject.on('pointerover', function (pointer) {\n      this.cursors.setCursor(this.gameObject);\n\n      this._timer = this.gameObject.room.time.addEvent({\n        delay: Settings.DEFAULT_MIN_TIME_TO_OBSERVE,\n        callback: () => {\n          if (this.gameObject !== this.room.player && !this.room.player.isBlocked) this.room.player.actions.add(Actions.Observe, { target: this.gameObject });\n        },\n        callbackScope: this\n      });\n    }.bind(this));\n\n    this.gameObject.on('pointerout', function (pointer) {\n      this._timer.remove(false);\n      this.cursors.setCursor();\n    }.bind(this));\n  }\n\n  /**\n   * Delete the timer which starts the AObserve action.\n   */\n  abort() {\n    this._timer.remove(false);\n  }\n\n  /**\n   * Generate a proper action according to the behaviour and the gameObject settings.\n   * @return {TDLib.Components.Actions.TDLAction}\n   * @since 1.0.0\n   */\n  getAction(invoker) {\n    return new Actions.Action.BaseAction(\n      invoker,\n      () => {\n        // Fare i controlli su quanta luce c'è nella stanza!\n        if (this.checkLight(this.gameObject.minLightLevelToObserve)) console.log(this.gameObject.observeText);\n        else console.log(this.gameObject.noLightObserveText);\n        invoker.finish();\n      }\n    );\n  }\n}\n","const Settings = {\n  DEFAULT_MIN_TIME_TO_OBSERVE: 1200\n};\n\nmodule.exports = Settings;\n","import Sprite from '../Sprite';\nimport Behaviour from '../behaviours';\nimport Components from '../../components';\nimport CONST from '../../const';\n\n/**\n * The characters namespace.\n * @namespace TDLib.Sprites.Characters\n * @since 1.0.0\n */\n\n/**\n * Class representing a Character.\n * @extends TDLib.Sprites.Sprite\n * @memberof TDLib.Sprites.Characters\n * @since 1.0.0\n */\nexport default class Character extends Sprite {\n  /**\n   * Create a new Character.\n   * @param {Room} room - The room where the character is created.\n   * @param {number} x - The x coordinate of the character.\n   * @param {number} y - The y coordinate of the character.\n   * @param {string} texture - The character's graphic.\n   * @param {string} layer - The character's layer.\n   */\n  constructor(room, x, y, texture, layer) {\n    super(...arguments, true, Behaviour.INTERACTIVE, { alphaTolerance: 1 });\n\n    /**\n     * The ActionComponent for this character.\n     * @type {Components.ActionComponent}\n     * @since 1.0.0\n     */\n    this.actions = new Components.ActionComponent(this);\n\n    /**\n     * The facing of the character.\n     * @type {TDLCharacter.FACING}\n     * @since 1.0.0\n     */\n    this.facing = CONST.RIGHT;\n  }\n\n  create() {\n    super.create();\n    // this.setPipeline('Light2D');\n  }\n}\n","const Characters = {\n  NPCharacter: require('./npc-characters/NPCharacter'),\n  Player: require('./players/Player')\n};\n\nmodule.exports = Characters;\n","import Character from '../Character';\n\nexport default class NPCharacter extends Character {\n  constructor(room, x, y, texture, layer) {\n    super(room, x, y, texture, layer);\n  }\n}\n","import Character from '../Character';\n\nexport default class Player extends Character {\n  constructor(room, x, y, texture) {\n    super(room, x, y, texture, 'playerLayer');\n\n    this.isBlocked = false;\n  }\n\n  create() {\n    super.create();\n\n    this.room.input.on('pointerdown', function (pointer) {\n      this.room.cursors.pointerDown(this);\n    }, this);\n  }\n}\n","import EffectComponent from '../../components/EffectComponent';\n\nexport default class Effect {\n  constructor(invoker, config = {}) {\n\n    this.invoker = invoker;\n\n    this.config = config;\n\n    this.gameObject = invoker.gameObject;\n\n    this.name = this.constructor.name;\n  }\n\n  play(callback = () => { }) {\n    if (this.invoker instanceof EffectComponent) {\n      callback();\n    } else console.log('Effects can only be played by the EffectComponent');\n  }\n\n  stop(callback = () => { }) {\n    if (this.invoker instanceof EffectComponent) {\n      callback();\n    } else console.log('Effects can only be stopped by the EffectComponent');\n  }\n}\n","const Effects = {\n  Effect: require('./Effect'),\n  LightEffects: require('./light-effects')\n};\n\nmodule.exports = Effects;\n","import LightEffect from './LightEffect';\n\nexport default class HardFlickering extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.5);\n\n    if (!this.config.minTime) this.config.minTime = 10;\n    if (!this.config.maxTime) this.config.maxTime = 400;\n    if (!this.config.finalState) this.config.finalState = 'on';\n  }\n\n  play() {\n    super.play(() => {\n      let setTimer = () => {\n        this.gameObject.room.time.addEvent({\n          delay: Math.floor(Math.random() * (this.config.maxTime - this.config.minTime)) + this.config.minTime,\n          callback: () => {\n            if (!this.stopped) {\n              if (this.gameObject.initialConfig.graphicLight !== null) {\n                if (this.gameObject.graphicLight.intensity === 0) this.gameObject.graphicLight.setIntensity(this.gameObject.initialConfig.graphicLight.intensity);\n                else this.gameObject.graphicLight.setIntensity(0);\n              }\n\n              if (this.gameObject.initialConfig.diffusedLight !== null) {\n                if (this.gameObject.diffusedLight.intensity === 0) this.gameObject.diffusedLight.setIntensity(this.gameObject.initialConfig.diffusedLight.intensity);\n                else this.gameObject.diffusedLight.setIntensity(0);\n              }\n              setTimer();\n            }\n          },\n          callbackScope: this,\n          repeat: 0\n        });\n      };\n\n      setTimer();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      if (this.config.finalState === 'on') {\n        if (this.gameObject.initialConfig.graphicLight !== null) {\n          this.gameObject.graphicLight.setIntensity(this.gameObject.initialConfig.graphicLight.intensity);\n        }\n        if (this.gameObject.initialConfig.diffusedLight !== null) {\n          this.gameObject.diffusedLight.setIntensity(this.gameObject.initialConfig.diffusedLight.intensity);\n        }\n      } else if (this.config.finalState === 'off') {\n        this.gameObject.turnOff();\n      }\n    });\n  }\n}\n","import LightEffect from './LightEffect';\nimport HardFlickering from './HardFlickering';\nimport Trembling from './Trembling';\n\nexport default class HardFlickeringAndTrembling extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.5);\n\n    this.hardFlickering = new HardFlickering(this.invoker, this.config);\n    this.trembling = new Trembling(this.invoker, this.config);\n  }\n\n  play() {\n    super.play(() => {\n      this.hardFlickering.play();\n      this.trembling.play();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      this.hardFlickering.stop();\n      this.trembling.stop();\n    });\n  }\n}\n","import Effect from '../Effect';\n\nexport default class LightEffect extends Effect {\n  constructor(invoker, config, contributeFactor = 1) {\n    super(invoker, config);\n\n    this.contributeFactor = contributeFactor;\n  }\n\n  play(callback) {\n    super.play(() => {\n      this.stopped = false;\n      callback();\n    });\n  }\n\n  stop(callback) {\n    super.stop(() => {\n      this.stopped = true;\n      callback();\n    });\n  }\n}\n","import LightEffect from './LightEffect';\n\nexport default class RadiusFlickering extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.9);\n\n    if (!this.config.minTime) this.config.minTime = 10;\n    if (!this.config.maxTime) this.config.maxTime = 100;\n    if (!this.config.minPercentageIntensity) this.config.minPercentageIntensity = 0.8;\n    if (!this.config.maxPercentageIntensity) this.config.maxPercentageIntensity = 1;\n    if (!this.config.minPercentageRadius) this.config.minPercentageRadius = 0.8;\n    if (!this.config.maxPercentageRadius) this.config.maxPercentageRadius = 1;\n    if (!this.config.backToInitialIntensity) this.config.backToInitialIntensity = true;\n    if (!this.config.backToInitialRadius) this.config.backToInitialRadius = true;\n  }\n\n  play() {\n    super.play(() => {\n      var setTimer = () => {\n        this.gameObject.room.time.addEvent({\n          delay: Math.floor(Math.random() * (this.config.maxTime - this.config.minTime)) + this.config.minTime,\n          callback: () => {\n            if (!this.stopped) {\n              let newIntensityPercentage = Math.floor((this.config.minPercentageIntensity + Math.random() * (this.config.maxPercentageIntensity - this.config.minPercentageIntensity)) * 100 + 1) / 100;\n\n              this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity * newIntensityPercentage);\n              this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity * newIntensityPercentage);\n              let newRadiusPercentage = Math.floor((this.config.minPercentageRadius + Math.random() * (this.config.maxPercentageRadius - this.config.minPercentageRadius)) * 100 + 1) / 100;\n\n              this.gameObject.graphicLight.setRadius(this.gameObject.config.graphicLight.radius * newRadiusPercentage);\n\n              setTimer();\n            }\n\n          },\n          callbackScope: this,\n          repeat: 0\n        });\n      };\n\n      setTimer();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      if (this.config.backToInitialIntensity) {\n        this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity);\n        this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity);\n      } else {\n        this.gameObject.config.graphicLight.intensity = this.gameObject.graphicLight.intensity;\n        this.gameObject.config.diffusedLight.intensity = this.gameObject.diffusedLight.intensity;\n      }\n      if (this.config.backToInitialRadius) {\n        this.gameObject.graphicLight.setRadius(this.gameObject.config.graphicLight.radius);\n      } else {\n        this.gameObject.config.graphicLight.radius = this.gameObject.graphicLight.radius;\n      }\n    });\n  }\n}\n","import LightEffect from './LightEffect';\n\nexport default class SoftFlickering extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.8);\n\n    if (!this.config.minTime) this.config.minTime = 10;\n    if (!this.config.maxTime) this.config.maxTime = 100;\n    if (!this.config.minPercentageIntensity) this.config.minPercentageIntensity = 0.8;\n    if (!this.config.maxPercentageIntensity) this.config.maxPercentageIntensity = 1;\n    if (!this.config.backToInitialIntensity) this.config.backToInitialIntensity = true;\n  }\n\n  play() {\n    super.play(() => {\n      let setTimer = () => {\n        this.gameObject.room.time.addEvent({\n          delay: Math.floor(Math.random() * (this.config.maxTime - this.config.minTime)) + this.config.minTime,\n          callback: () => {\n            if (!this.stopped) {\n              let newIntensityPercentage = Math.floor((this.config.minPercentageIntensity + Math.random() * (this.config.maxPercentageIntensity - this.config.minPercentageIntensity)) * 100 + 1) / 100;\n\n              this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity * newIntensityPercentage);\n              this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity * newIntensityPercentage);\n              setTimer();\n            }\n          },\n          callbackScope: this,\n          repeat: 0\n        });\n      };\n\n      setTimer();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      if (this.config.backToInitialIntensity) {\n        this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity);\n        this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity);\n      } else {\n        this.gameObject.config.graphicLight.intensity = this.gameObject.graphicLight.intensity;\n        this.gameObject.config.diffusedLight.intensity = this.gameObject.diffusedLight.intensity;\n      }\n    });\n  }\n}\n","import LightEffect from './LightEffect';\nimport SoftFlickering from './SoftFlickering';\nimport Trembling from './Trembling';\n\nexport default class SoftDefaultFlickeringAndtrembling extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.5);\n\n    this.softFlickering = new SoftFlickering(this.invoker, this.config);\n    this.trembling = new Trembling(this.invoker, this.config);\n  }\n\n  play() {\n    super.play(() => {\n      this.softFlickering.play();\n      this.trembling.play();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      this.softFlickering.stop();\n      this.trembling.stop();\n    });\n  }\n}\n","import LightEffect from './LightEffect';\n\nexport default class Trembling extends LightEffect {\n  constructor(invoker, config) {\n    super(invoker, config, 0.8);\n\n    if (!this.config.minTime) this.config.minTime = 10;\n    if (!this.config.maxTime) this.config.maxTime = 100;\n    if (!this.config.minPercentageIntensity) this.config.minPercentageIntensity = 0.8;\n    if (!this.config.maxPercentageIntensity) this.config.maxPercentageIntensity = 1;\n    if (!this.config.minPercentageRadius) this.config.minPercentageRadius = 0.8;\n    if (!this.config.maxPercentageRadius) this.config.maxPercentageRadius = 1;\n    if (!this.config.backToInitialIntensity) this.config.backToInitialIntensity = true;\n    if (!this.config.backToInitialRadius) this.config.backToInitialRadius = true;\n  }\n\n  play() {\n    super.play(() => {\n      let setTimer = () => {\n        this.gameObject.room.time.addEvent({\n          delay: Math.floor(Math.random() * (this.config.maxTime - this.config.minTime)) + this.config.minTime,\n          callback: () => {\n\n            if (!this.stopped) {\n              let newIntensityPercentage = Math.floor((this.config.minPercentageIntensity + Math.random() * (this.config.maxPercentageIntensity - this.config.minPercentageIntensity)) * 100 + 1) / 100;\n\n              this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity * newIntensityPercentage);\n              this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity * newIntensityPercentage);\n              let newRadiusPercentage = Math.floor((this.config.minPercentageRadius + Math.random() * (this.config.maxPercentageRadius - this.config.minPercentageRadius)) * 100 + 1) / 100;\n\n              this.gameObject.graphicLight.setRadius(this.gameObject.config.graphicLight.radius * newRadiusPercentage);\n\n              setTimer();\n            }\n\n          },\n          callbackScope: this,\n          repeat: 0\n        });\n      };\n\n      setTimer();\n    });\n  }\n\n  stop() {\n    super.stop(() => {\n      if (this.config.backToInitialIntensity) {\n        this.gameObject.graphicLight.setIntensity(this.gameObject.config.graphicLight.intensity);\n        this.gameObject.diffusedLight.setIntensity(this.gameObject.config.diffusedLight.intensity);\n      } else {\n        this.gameObject.config.graphicLight.intensity = this.gameObject.graphicLight.intensity;\n        this.gameObject.config.diffusedLight.intensity = this.gameObject.diffusedLight.intensity;\n      }\n      if (this.config.backToInitialRadius) {\n        this.gameObject.graphicLight.setRadius(this.gameObject.config.graphicLight.radius);\n      } else {\n        this.gameObject.config.graphicLight.radius = this.gameObject.graphicLight.radius;\n      }\n    });\n  }\n}\n","const LightEffects = {\n  HardFlickering: require('./HardFlickering'),\n  HardFlickeringAndTrembling: require('./HardFlickeringAndTrembling'),\n  LightEffect: require('./LightEffect'),\n  RadiusFlickering: require('./RadiusFlickering'),\n  SoftFlickering: require('./SoftFlickering'),\n  SoftFlickeringAndTrembling: require('./SoftFlickeringAndTrembling'),\n  Trembling: require('./Trembling')\n};\n\nmodule.exports = LightEffects;\n","const Sprites = {\n  Actions: require('./actions'),\n  Behaviours: require('./behaviours'),\n  Characters: require('./characters'),\n  Effects: require('./effects'),\n  InventoryItems: require('./inventory-items'),\n  WorldItems: require('./world-items'),\n  Sprite: require('./Sprite')\n};\n\nmodule.exports = Sprites;\n","import Sprite from '../Sprite';\n\n/**\n * The inventory items namespace.\n * @namespace TDLib.Sprites.InventoryItems\n * @since 1.0.0\n */\n\n/**\n * Class representing an InentoryItem.\n * @extends TDLib.Sprites.Sprite\n * @memberof TDLib.Sprites.InventoryItems\n * @since 1.0.0\n */\n\nexport default class InentoryItem extends Sprite {\n  /**\n   * Create a new InvetoryItem.\n   * @param {Room} room - The room where the item is created.\n   * @param {number} x - The x coordinate of the item.\n   * @param {number} y - The y coordinate of the item.\n   * @param {string} texture - The item's graphic.\n   * @param {string} layer - The item's layer.\n   */\n  constructor(room, x, y, texture, layer) {\n    super(...arguments, false);\n  }\n\n  create() {\n    super.create();\n  }\n}\n","const InventoryItems = {\n  InventoryItem: require('./InventoryItem')\n};\n\nmodule.exports = InventoryItems;\n","import Sprite from '../Sprite';\n\n/**\n * The world items namespace.\n * @namespace TDLib.Sprites.WorldItems\n * @since 1.0.0\n */\n\n/**\n * Class representing a WorldItem.\n * @extends TDLib.Sprites.Sprite\n * @memberof TDLib.Sprites.WorldItems\n * @since 1.0.0\n */\nexport default class WorldItem extends Sprite {\n  /**\n   * Create a WorldObject.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [layer=null] - The key of the layer which will contain the sprite.\n   * @param {boolean} [hasBody=true] - Specify if the sprite has physics.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   */\n  constructor(room, x, y, texture, layer, hasBody, behaviourType, pixelPerfect, observeText, examineOrInteractText, blockExamineText, noLightObserveText, noLightExamineOrInteractText, examineOrInteractOffsetX, examineOrInteractThresholdRadius, minLightLevelToExamineOrInteract, minLightLevelToObserve) {\n    super(\n      room,\n      x, y,\n      texture,\n      layer,\n      hasBody,\n      behaviourType,\n      pixelPerfect,\n      observeText,\n      examineOrInteractText,\n      blockExamineText,\n      noLightObserveText,\n      noLightExamineOrInteractText,\n      examineOrInteractOffsetX,\n      examineOrInteractThresholdRadius,\n      minLightLevelToExamineOrInteract,\n      minLightLevelToObserve\n    );\n  }\n\n  create() {\n    super.create();\n    this.setPipeline('Light2D'); // Da spostare in TDLSprite non appena il player supporterà la Light2D\n  }\n}\n","const WorldItems = {\n  WorldItem: require('./WorldItem'),\n  LightSources: require('./light-sources'),\n  RoomFurnitures: require('./room-furnitures'),\n  WallFurnitures: require('./wall-furnitures')\n};\n\nmodule.exports = WorldItems;\n","import WorldItem from '../WorldItem';\nimport Behaviours from '../../behaviours';\nimport EffectComponent from '../../../components/EffectComponent';\n\nexport default class LightSource extends WorldItem {\n  /**\n   * constructor of the class\n   * @param {Room} room - Room in which will be created the LightSource.\n   * @param {number} x - X position of the sprite.\n   * @param {number} y - Y position of the sprite.\n   * @param {string} texture - Name of the sprite for the LightSource.\n   * @param {string} layer - Name of the Layer in which will be put the LightSource.\n   * @param {Object} graphicLightConfig - Configuration of the graphic light of the LightSource.\n   * @param {number} graphicLightConfig.intensity - Intensity of the graphic light.\n   * @param {number} graphicLightConfig.radius - Radius of the graphic light.\n   * @param {Object} diffusedLightConfig - Configuration of the diffused light of the LightSource.\n   * @param {number} diffusedLightConfig.intensity - Intensity of the diffused light.\n   * @param {number} diffusedLightConfig.radius - Radius of the diffused light.\n   * @param {Object} offset - Offset of the graphic light respect the center of the sprite.\n   * @param {number} offset.x - X offset.\n   * @param {number} offset.y - Y offset.\n   * @param {boolean} [isOn=true] - Light created as switched on or off.\n   */\n  constructor(room, x, y, texture, layer, graphicLightConfig, diffusedLightConfig, offset, isOn = true) {\n    super(room, x, y, texture, layer, true, Behaviours.EXAMINABLE);\n\n    this.setGravityY(0);\n\n    this.initialConfig = {\n      graphicLight: graphicLightConfig,\n      diffusedLight: diffusedLightConfig,\n      offset: offset\n    };\n\n    this.config = this.initialConfig;\n\n    this.isOn = false;\n    if (isOn) {\n      this.turnOn();\n    }\n\n    // Register this LightSource instance to the Room's LightManager\n    this.room.lightSources.add(this);\n    this.effects = new EffectComponent(this);\n  }\n\n  /**\n   * Turn on the lights of the LightSource by creating new ones.\n   */\n  turnOn() {\n    if (!this.isOn) {\n      if (this.initialConfig.diffusedLight !== null) {\n        this.diffusedLight = this.room.lights.addLight(this.x + this.initialConfig.offset.x, this.y + this.initialConfig.offset.y, this.initialConfig.diffusedLight.radius).setIntensity(this.initialConfig.diffusedLight.intensity);\n        this.room.lightSources.diffusedLights.push(this.diffusedLight);\n      }\n\n      if (this.initialConfig.graphicLight !== null) {\n        this.graphicLight = this.room.lights.addLight(this.x + this.initialConfig.offset.x, this.y + this.initialConfig.offset.y, this.initialConfig.graphicLight.radius).setIntensity(this.initialConfig.graphicLight.intensity);\n        this.room.lightSources.graphicLights.push(this.graphicLight);\n      }\n\n      this.isOn = true;\n    }\n  }\n\n  /**\n     * Turn off the lights of the LightSource by deleting the existing ones.\n     * @param {boolean} [stopBehaviours=true] - If true, turning off the light stops all the behaviours.\n     */\n  turnOff(stopBehaviours = true) {\n\n    // if (stopBehaviours) this.lightBehaviour.stopAllBehaviours();\n    if (this.isOn) {\n      let diffusedLightindex = this.room.lightSources.diffusedLights.indexOf(this.diffusedLight);\n\n      if (diffusedLightindex > -1) {\n        this.room.lightSources.diffusedLights.splice(diffusedLightindex, 1);\n        this.room.lights.removeLight(this.diffusedLight);\n      }\n\n      let graphicLightindex = this.room.lightSources.graphicLights.indexOf(this.graphicLight);\n\n      if (graphicLightindex > -1) {\n        this.room.lightSources.graphicLights.splice(graphicLightindex, 1);\n        this.room.lights.removeLight(this.graphicLight);\n      }\n\n      this.isOn = false;\n    }\n  }\n\n  /**\n   * If the light source is on, turn it off and vice versa.\n   */\n  switch() {\n    if (this.isOn) this.turnOff();\n    else this.turnOn();\n  }\n}\n","const LightSources = {\n  LightSource: require('./LightSource')\n};\n\nmodule.exports = LightSources;\n","import WorldItem from '../WorldItem';\n\n/**\n * The room furnitures namespace.\n * @namespace TDLib.Sprites.Objects.WorldObjects.RoomFurnitures\n * @since 1.0.0\n */\n\n/**\n * Class representing a RoomFurniture.\n * @extends TDLib.Sprites.Objects.WorldObjects.WorldObject\n * @memberof TDLib.Sprites.Objects.WorldObjects.RoomFurnitures\n * @since 1.0.0\n */\nexport default class RoomFurniture extends WorldItem {\n  /**\n   * Create a RoomFurniture.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   */\n  constructor(room, x, y, texture, behaviourType, pixelPerfect, observeText, examineOrInteractText, blockExamineText, noLightObserveText, noLightExamineOrInteractText, examineOrInteractOffsetX, examineOrInteractThresholdRadius, minLightLevelToExamineOrInteract, minLightLevelToObserve) {\n    super(\n      room,\n      x, y,\n      texture,\n      'roomFurnitureLayer',\n      true,\n      behaviourType,\n      pixelPerfect,\n      observeText,\n      examineOrInteractText,\n      blockExamineText,\n      noLightObserveText,\n      noLightExamineOrInteractText,\n      examineOrInteractOffsetX,\n      examineOrInteractThresholdRadius,\n      minLightLevelToExamineOrInteract,\n      minLightLevelToObserve\n    );\n  }\n}\n","const RoomFurnitures = {\n  RoomFurniture: require('./RoomFurniture')\n};\n\nmodule.exports = RoomFurnitures;\n","import WorldItem from '../WorldItem';\n\n/**\n * The wall furnitures namespace.\n * @namespace TDLib.Sprites.Objects.WorldObjects.WallFurnitures\n * @since 1.0.0\n */\n\n/**\n * Class representing a WallFurniture.\n * @extends TDLib.Sprites.Objects.WorldObjects.WorldObject\n * @memberof TDLib.Sprites.Objects.WorldObjects.WallFurnitures\n * @since 1.0.0\n */\nexport default class WallFurniture extends WorldItem {\n  /**\n   * Create a WallFurniture.\n   * @param {TDLib.Rooms.TDLRoom} room - The room where the sprite is created.\n   * @param {number} x - The sprite x coordinate.\n   * @param {number} y - The sprite y coordinate.\n   * @param {string} texture - The graphic of the sprite.\n   * @param {string} [behaviourType=SpriteBehaviour.INERT] - Specify the behaviour of the sprite.\n   * @param {Object} [pixelPerfect=null] - If not null enable the pixel perfect pointer hit for the sprite.\n   * @param {boolean} [pixelPerfect.alphaTolerance] - The alpha tolerance threshold value.\n   * @param {string|string[]} [observeText] - The text which appears when observing the sprite.\n   * @param {string|string[]} [examineOrInteractText] -  The text which appears when examine or interact with the sprite.\n   * @param {string} [blockExamineText=null] - If not null it's the blocking text which appears the first time the sprite is examined.\n   * @param {string|string[]} [noLightObserveText] -  The text which appears when observing the sprite when the diffused light is not sufficient.\n   * @param {string|string[]} [noLightExamineOrInteractText] - The text which appears when examine or interact with the sprite when the diffused light is not sufficient.\n   * @param {number} [examineOrInteractOffsetX=0] - The offset on x axis of the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [examineOrInteractThresholdRadius=0] - The radius of the tolerance in reaching the examineOrInteractPoint, where the player has to move to examine or interact with the sprite.\n   * @param {number} [minLightLevelToExamineOrInteract=???] - The minimum value of diffused light to examine or interact with the sprite.\n   * @param {number} [minLightLevelToObserve=???] - The minimum value of diffused light to observe the sprite.\n   */\n  constructor(room, x, y, texture, behaviourType, pixelPerfect, observeText, examineOrInteractText, blockExamineText, noLightObserveText, noLightExamineOrInteractText, examineOrInteractOffsetX, examineOrInteractThresholdRadius, minLightLevelToExamineOrInteract, minLightLevelToObserve) {\n    super(\n      room,\n      x, y,\n      texture,\n      'wallFurnitureLayer',\n      true,\n      behaviourType,\n      pixelPerfect,\n      observeText,\n      examineOrInteractText,\n      blockExamineText,\n      noLightObserveText,\n      noLightExamineOrInteractText,\n      examineOrInteractOffsetX,\n      examineOrInteractThresholdRadius,\n      minLightLevelToExamineOrInteract,\n      minLightLevelToObserve\n    );\n\n    this.setGravityY(0);\n  }\n}\n","const WallFurnitures = {\n  WallFurniture: require('./WallFurniture')\n};\n\nmodule.exports = WallFurnitures;\n","import Actions from '../../sprites/actions';\nimport Behaviours from '../../sprites/behaviours';\n\n/**\n * Class representing the CursorSystem, able to select the correct graphic for the cursor and to handle pointer events.\n * @extends Phaser.Plugins.BasePlugin\n * @memberof TDLib.Plugins.GlobalPlugins\n * @since 1.0.0\n */\nexport default class CursorSystem extends Phaser.Plugins.BasePlugin {\n  /**\n   * Create a new CursorSystem.\n   * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to the plugin manager.\n   */\n  constructor(pluginManager) {\n    super(pluginManager);\n\n    /**\n     * The scene containing the cursor.\n     * @type {CursorSystem.CURSOR_SCENE}\n     * @since 1.0.0\n     */\n    this.cursorScene;\n\n    /**\n     * The Scene Manager is a Game level system, responsible for creating, processing and updating all of the Scenes in a Game instance.\n     * @type {Phaser.Scenes.SceneManager}\n     * @since 1.0.0\n     */\n    this.sceneManager;\n\n    /**\n     * Save the last sprite who called the function setCursor().\n     * @type {TDLib.Sprites.TDLSprite}\n     * @since 1.0.0\n     */\n    this.lastTarget;\n  }\n\n  /**\n   * It's a Phaser.Scene representing the scene containing the cursor which will be put on the rooms level.\n   * @typedef {TDLib.Plugins.GlobalPlugins.CursorSystem.CursorScene}\n   * @extends {Phaser.Scenes.Scene}\n   * @since 1.0.0\n   */\n  static get CursorScene() {\n    return class CursorScene extends Phaser.Scene {\n      constructor() {\n        super(CursorSystem.CURSOR_SCENE_KEY);\n\n        this.cursor;\n      }\n\n      preload() {\n        this.load.image(CursorSystem.EXAMINABLE_CURSOR, 'assets/Cursors/CursorExamine.png');\n        this.load.image(CursorSystem.HOLD_CURSOR, 'assets/Cursors/CursorHold.png');\n        this.load.image(CursorSystem.INTERACTIVE_CURSOR, 'assets/Cursors/CursorInteract.png');\n        this.load.image(CursorSystem.DEFAULT_CURSOR, 'assets/Cursors/CursorMove.png');\n        this.load.image(CursorSystem.TALKABLE_CURSOR, 'assets/Cursors/CursorTalk.png');\n        this.load.image(CursorSystem.CHOICE_CURSOR, 'assets/Cursors/CursorChoice.png');\n        this.load.image(CursorSystem.CHOICE_PRESSED_CURSOR, 'assets/Cursors/CursorChoicePressed.png');\n      }\n\n      create() {\n        this.input.setDefaultCursor('none');\n        this.cursor = this.add.image(0, 0, CursorSystem.DEFAULT_CURSOR).setOrigin(0.4, 0.33).setDepth(100000);\n      }\n\n      update() {\n        this.cursor.setPosition(this.input.activePointer.x, this.input.activePointer.y);\n      }\n    };\n  }\n\n  /**\n   * The key of the scene containing the cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get CURSOR_SCENE_KEY() {\n    return 'CursorScene';\n  }\n\n  /**\n   * The key of the inert cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get DEFAULT_CURSOR() {\n    return 'cursorMove';\n  }\n\n  /**\n   * The key of the examine cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get EXAMINABLE_CURSOR() {\n    return 'cursorExamine';\n  }\n\n  /**\n   * The key of the interact cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get INTERACTIVE_CURSOR() {\n    return 'cursorInteract';\n  }\n\n  /**\n   * The key of the hold cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get HOLD_CURSOR() {\n    return 'cursorHold';\n  }\n\n  /**\n   * The key of the talk cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get TALKABLE_CURSOR() {\n    return 'cursorTalk';\n  }\n\n  /**\n   * The key of the choice cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get CHOICE_CURSOR() {\n    return 'cursorChoice';\n  }\n\n  /**\n   * The key of the choice pressed cursor.\n   * @type {string}\n   * @since 1.0.0\n   */\n  static get CHOICE_PRESSED_CURSOR() {\n    return 'cursorChoicePressed';\n  }\n\n  /**\n   * Configure the cursor manager.\n   * @param {Phaser.Scenes.SceneManager} sceneManager - The Scene Manager is a Game level system, responsible for creating, processing and updating all of the Scenes in a Game instance.\n   * @since 1.0.0\n   */\n  configure(sceneManager) {\n    this.sceneManager = sceneManager;\n    this.cursorScene = this.sceneManager.add(CursorSystem.CURSOR_SCENE_KEY, CursorSystem.CursorScene, true);\n  }\n\n  /**\n   * Handle the pointer down event.\n   * @param {TDLib.Sprites.Characters.TDLCharacter} player - The current player.\n   * @since 1.0.0\n   */\n  pointerDown(player, pointer = null) {\n    if (!player.isBlocked) {\n      switch (this.cursorScene.cursor.texture.key) {\n        case CursorSystem.DEFAULT_CURSOR: {\n          if (typeof player.room.input.activePointer.camera !== 'undefined') player.actions.add(Actions.WalkTo, { target: { x: player.room.input.activePointer.worldX } });\n        }\n          break;\n\n        case CursorSystem.EXAMINABLE_CURSOR: {\n          this.lastTarget.behaviour.observe.abort();\n          player.actions.add(Actions.Examine, { target: this.lastTarget });\n        }\n          break;\n\n        case CursorSystem.INTERACTIVE_CURSOR: {\n          this.lastTarget.behaviour.observe.abort();\n          player.actions.add(Actions.Interact, { target: this.lastTarget });\n        }\n          break;\n\n        case CursorSystem.TALKABLE_CURSOR: {\n          player.actions.add(Actions.TalkTo, { target: this.lastTarget });\n        }\n          break;\n      }\n    }\n  }\n\n  /**\n   * Set the correct cursor for the target selected.\n   * @param {Object} target - The target of the pointer.sceneManager\n   * @param {TDLib.Components.ActionComponent} target.behaviour - The SpriteBehaviourComponent of the target.\n   * @param {string} [target.behaviour.type=TDLib.Sprites.Behaviours.INERT] - The type of the sprite behaviour for this target.\n   * @since 1.0.0\n   */\n  setCursor(target = { behaviour: { type: Behaviours.INERT }, room: {} }) {\n    if ('room' in target && target !== target.room.player) {\n      switch (target.behaviour.type) {\n        case Behaviours.INERT: {\n          this.cursorScene.cursor.setTexture(CursorSystem.DEFAULT_CURSOR).setOrigin(0.4, 0.33);\n        }\n          break;\n\n        case Behaviours.EXAMINABLE: {\n          this.cursorScene.cursor.setTexture(CursorSystem.EXAMINABLE_CURSOR).setOrigin(0.33, 0.29);\n        }\n          break;\n\n        case Behaviours.INTERACTIVE: {\n          this.cursorScene.cursor.setTexture(CursorSystem.INTERACTIVE_CURSOR).setOrigin(0.4, 0.33);\n        }\n          break;\n\n        case Behaviours.TALKABLE: {\n          this.cursorScene.cursor.setTexture(CursorSystem.TALKABLE_CURSOR);\n        }\n          break;\n      }\n\n      this.lastTarget = target;\n    }\n  }\n\n  /**\n   * Show the cursor.\n   * @since 1.0.0\n   */\n  showCursor() {\n    this.cursorScene.cursor.setVisible(true);\n  }\n\n  /**\n   * Hide the cursor.\n   * @since 1.0.0\n   */\n  hideCursor() {\n    this.cursorScene.cursor.setVisible(false);\n  }\n}\n","const Systems = {\n  CursorSystem: require('./cursors/CursorSystem'),\n  RoomSystem: require('./rooms/RoomSystem')\n};\n\nmodule.exports = Systems;\n","/**\n * Class representing the manager of the rooms\n * @extends Phaser.Plugins.BasePlugin\n * @memberof TDLib.Plugins.GlobalPlugins\n */\nexport default class RoomSystem extends Phaser.Plugins.BasePlugin {\n  /**\n   * Create a new RoomSystem.\n   * @param {Phaser.Plugins.PluginManager} pluginManager - A reference to the plugin manager.\n   */\n  constructor(pluginManager) {\n    super(pluginManager);\n\n    /**\n     * The Scene Manager is a Game level system, responsible for creating, processing and updating all of the Scenes in a Game instance.\n     * @type {Phaser.Scenes.SceneManager}\n     */\n    this.sceneManager = {};\n  }\n\n  /**\n   * Add (and start) a new room to the RoomSystem.\n   * @param {TDLib.Rooms.Room} room - The class of the new room to add.\n   * @param {boolean} [autoStart=true] - Specify if the room has to start.\n   */\n  add(room, autoStart = true) {\n    console.log('Added room:', room.name);\n    this.sceneManager.add(room.name, room, autoStart);\n  }\n\n  /**\n   * Configure the RoomSystem.\n   * @param {Phaser.Scenes.SceneManager} sceneManager - The Scene Manager is a Game level system, responsible for creating, processing and updating all of the Scenes in a Game instance.\n   */\n  configure(sceneManager) {\n    this.sceneManager = sceneManager;\n  }\n}\n","import Settings from '../boot/Settings';\n\nconst getScreenProps = () => {\n  var returnValue = {};\n\n  // cz : ah = 1 : mh\n  if (Settings.DEVICE === 'MOBILE') {\n    returnValue.availHeight = window.innerHeight;\n    returnValue.availWidth = window.innerWidth;\n    returnValue.calculatedZoom = Math.floor(returnValue.availHeight / ((Settings.ROOM_HEIGHT_IN_TILE + Settings.INVENTORY_HEIGHT_IN_TILES_MOBILE + Settings.ROOM_FRAME_IN_TILES_MOBILE * 2) * Settings.TILE_SIZE) * 100) / 100;\n  } else {\n    returnValue.availHeight = screen.height;\n    returnValue.availWidth = screen.width;\n    returnValue.calculatedZoom = Math.floor(returnValue.availHeight / ((Settings.ROOM_HEIGHT_IN_TILE + Settings.INVENTORY_HEIGHT_IN_TILES_DESKTOP + Settings.ROOM_FRAME_IN_TILES_DESKTOP * 2) * Settings.TILE_SIZE) * 100) / 100;\n  }\n\n  console.log('ZOOM: ' + returnValue.calculatedZoom);\n\n  // Sono le dimensioni riaggiustate rispetto allo zoom scelto\n  // ch : ah = 1 : cz\n  returnValue.calculatedHeight = Math.ceil(returnValue.availHeight / returnValue.calculatedZoom);\n  returnValue.calculatedWidth = Math.ceil(returnValue.availWidth / returnValue.calculatedZoom);\n\n  console.log('AVAIL-H: ' + returnValue.availHeight + '\\nCALC-H: ' + returnValue.calculatedHeight);\n  console.log('AVAIL-W: ' + returnValue.availWidth + '\\nCALC-W: ' + returnValue.calculatedWidth);\n\n  return returnValue;\n};\n\nmodule.exports = getScreenProps;\n","const Utils = {\n  getScreenProps: require('./Utils')\n};\n\nmodule.exports = Utils;\n"],"sourceRoot":""}